(undo-tree-save-format-version . 1)
"e97b1499e3af38fe34da97bfc1ee77b53d66355b"
[nil nil nil nil (26473 19063 909117 683000) 0 nil]
([nil nil ((11 . 21426) (#("20.53.19" 0 8 (fontified t)) . 11) (t 26473 18010 355144 969000)) nil (26473 19063 909116 711000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 23) (undo-tree-id52 . -9) (t 26473 18795 425830 590000)) nil (26473 19063 909115 849000) 0 nil])
([nil nil (23) nil (26473 19063 909114 146000) 0 nil])
([nil nil ((31 . 43) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -31) (undo-tree-id48 . -1) (27 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -27) (undo-tree-id49 . -1) (22 . 28) (#("@" 0 1 (fontified t)) . -22) (undo-tree-id50 . -1) 23 (22 . 23) (#("@" 0 1 (fontified t)) . -22) (undo-tree-id51 . -1) 23 (22 . 23)) nil (26473 19063 909113 545000) 0 nil])
([nil nil ((nil rear-nonsticky nil 309 . 310) (nil fontified nil 42 . 310) (42 . 310)) nil (26473 19063 909111 762000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 57) (undo-tree-id47 . -18)) nil (26473 19063 909111 401000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 72) (undo-tree-id46 . -18)) nil (26473 19063 909110 950000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 88) (undo-tree-id45 . -18)) nil (26473 19063 909110 329000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 105) (undo-tree-id44 . -18)) nil (26473 19063 909109 758000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 119)) nil (26473 19063 909109 247000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 120) (undo-tree-id43 . -1)) nil (26473 19063 909108 946000) 0 nil])
([nil nil ((119 . 120) (#("
" 0 1 (fontified t)) . -119) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 93) nil (26473 19063 909107 964000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 120) (undo-tree-id8 . -10) (undo-tree-id9 . -11)) nil (26473 19063 909098 136000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 120) (undo-tree-id6 . -18) (undo-tree-id7 . -19)) nil (26473 19063 909097 114000) 0 nil])
([nil nil ((#("\\textsuperscript{2}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 133) (undo-tree-id5 . -18)) nil (26473 19063 909095 832000) 0 nil])
([nil nil ((#("\\textsuperscript{1,2}" 0 16 (face font-lock-keyword-face fontified t) 16 21 (fontified t)) . 150) (undo-tree-id4 . -20)) nil (26473 19063 909095 0) 0 nil])
([nil nil ((92 . 93) (#("
" 0 1 (fontified t)) . -92) (61 . 62) (#("
" 0 1 (fontified t)) . -61) 34) nil (26473 19063 909093 908000) 0 nil])
([nil nil ((227 . 228) (#("
" 0 1 (fontified t)) . -227) 208) nil (26473 19072 248018 263000) 0 nil])
([nil nil ((137 . 138) (#("
" 0 1 (fontified t)) . 137)) ((137 . 138) (#(" " 0 1 (fontified t)) . 137)) (26473 19073 468155 773000) 0 nil])
([nil nil ((#("  " 0 1 (face (bold) fontified nil) 1 2 (face (bold) fontified nil)) . -381) (nil face nil 380 . 381) (380 . 381) (#(" " 0 1 (face (bold) fontified nil)) . -342) (nil face nil 341 . 342) (341 . 342) (#(" " 0 1 (face (bold) fontified nil)) . -272) (nil face nil 271 . 272) (271 . 272) (381 . 382) (#("
" 0 1 (face (bold) fontified nil)) . 381) (311 . 312) (#("
" 0 1 (face (bold) fontified nil)) . 311) (380 . 381) (310 . 311) 22) nil (26473 19105 760856 558000) 0 nil] [nil nil ((23 . 24)) ((#("p" 0 1 (face font-lock-keyword-face fontified t)) . 23)) (26473 19070 264104 787000) 0 nil] [nil nil ((#("  " 0 2 (face (bold) fontified nil)) . -381) (nil face nil 380 . 381) (380 . 381) (#(" " 0 1 (face (bold) fontified nil)) . -342) (nil face nil 341 . 342) (341 . 342) (#(" " 0 1 (face (bold) fontified nil)) . -272) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (nil face nil 271 . 272) (271 . 272) (381 . 382) (#("
" 0 1 (face (bold) fontified nil)) . 381) (311 . 312) (#("
" 0 1 (face (bold) fontified nil)) . 311) (380 . 381) (310 . 311) 137) ((#(" " 0 1 (face (bold) fontified nil)) . 310) (#(" " 0 1 (face (bold) fontified nil)) . 380) (311 . 312) (#(" " 0 1 (face (bold) fontified nil)) . 311) (381 . 382) (#(" " 0 1 (face (bold) fontified nil)) . 381) (#("
" 0 1 (face nil fontified nil)) . 271) (nil face (bold) 271 . 272) (272 . 273) (#("
" 0 1 (face nil fontified nil)) . 341) (nil face (bold) 341 . 342) (342 . 343) (#("
" 0 1 (face nil fontified nil)) . 380) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (nil face (bold) 380 . 381) (381 . 383)) (26473 19063 909088 949000) 0 nil])
([nil nil ((#("  " 0 1 (face (bold) fontified nil) 1 2 (face (bold) fontified nil)) . 381) (nil face nil 380 . 381) (380 . 381) (#(" " 0 1 (face (bold) fontified nil)) . 342) (nil face nil 341 . 342) (341 . 342) (#(" " 0 1 (face (bold) fontified nil)) . 272) (nil face nil 271 . 272) (271 . 272) (381 . 382) (#("
" 0 1 (face (bold) fontified nil)) . 381) (341 . 342) (#("
" 0 1 (face (bold) fontified nil)) . 341) (271 . 272) (#("
" 0 1 (face (bold) fontified t)) . 271) (380 . 381)) ((#(" " 0 1 (face (bold) fontified nil)) . 380) (271 . 272) (#(" " 0 1 (face (bold) fontified nil)) . 271) (341 . 342) (#(" " 0 1 (face (bold) fontified nil)) . 341) (381 . 382) (#(" " 0 1 (face (bold) fontified nil)) . 381) (#("
" 0 1 (face nil fontified nil)) . 271) (nil face (bold) 271 . 272) (272 . 273) (#("
" 0 1 (face nil fontified nil)) . 341) (nil face (bold) 341 . 342) (342 . 343) (#("
" 0 1 (face nil fontified nil)) . 380) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (nil face (bold) 380 . 381) (381 . 383)) (26473 19112 253744 984000) 0 nil])
nil
nil
([nil nil ((22 . 37) (571 . 584)) nil (26473 19147 41557 756000) 0 nil] [nil nil ((427 . 428) (#("
" 0 1 (fontified t)) . -427) (#("
" 0 1 (fontified t)) . -427) 381) ((427 . 428) (427 . 428) (#(" " 0 1 (fontified t)) . 427) (undo-tree-id62 . -1) (undo-tree-id63 . -1)) (26473 19111 987043 564000) 0 nil])
([nil nil ((40 . 42) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -40) (undo-tree-id122 . -1) (#("n" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -41) (undo-tree-id123 . -1) (#("g" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -42) (undo-tree-id124 . -1) 43 (40 . 43) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -40) (undo-tree-id125 . -1) (34 . 41) (#("a" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -34) (undo-tree-id126 . -1) (#("n" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -35) (undo-tree-id127 . -1) 36 (33 . 36) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -33) (undo-tree-id128 . -1) (29 . 34) (#("center" 0 6 (face font-lock-function-name-face latex-env-pair t fontified t)) . 29) (undo-tree-id129 . -5)) nil (26473 19147 41556 894000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 426)) ((426 . 427)) (26473 19111 986988 191000) 0 nil])
([nil nil ((32 . 42) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -32) (undo-tree-id118 . -1) (29 . 33) (#("sectionheader" 0 13 (face font-lock-function-name-face latex-env-pair t fontified t)) . 29) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -12)) nil (26473 19147 41553 538000) 0 nil])
nil
([nil nil ((601 . 611) (#("i" 0 1 (face font-lock-function-name-face fontified nil latex-env-pair t)) . -601) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (598 . 602) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 598) (undo-tree-id70 . -5) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -5) (undo-tree-id87 . -5) (undo-tree-id88 . -5) (undo-tree-id89 . -5) (undo-tree-id90 . -5) (undo-tree-id91 . -5) (undo-tree-id92 . -5) (undo-tree-id93 . -5) (undo-tree-id94 . -5) (undo-tree-id95 . -5) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -6) (undo-tree-id117 . -6)) nil (26473 19147 41550 532000) 0 nil])
([nil nil ((21601 . 21602) 610) nil (26473 19147 41504 637000) 0 nil])
([nil nil ((614 . 629) (877 . 890) (t 26473 19147 47897 423000)) nil (26473 19167 974854 75000) 0 nil])
([nil nil ((629 . 632) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -629) (undo-tree-id209 . -1) (626 . 630) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -626) (undo-tree-id210 . -1) (626 . 627) (#("a" 0 1 (face font-lock-function-name-face latex-env-pair t fontified t)) . -626) (undo-tree-id211 . -1) 627 (624 . 627) (#("i" 0 1 (face font-lock-function-name-face latex-env-pair t fontified nil)) . -624) (undo-tree-id212 . -1) (621 . 625) (#("center" 0 6 (face font-lock-function-name-face latex-env-pair t fontified t)) . 621) (undo-tree-id213 . -5)) nil (26473 19167 974853 193000) 0 nil])
([nil nil ((907 . 913) (#("a" 0 1 (fontified nil latex-env-pair t)) . -907) (undo-tree-id130 . -1) 908 (902 . 908) (#("center" 0 6 (face font-lock-function-name-face fontified t latex-env-pair t)) . 902) (undo-tree-id131 . -5) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -6) (undo-tree-id208 . -6)) nil (26473 19167 974847 21000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 448) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (t 26473 19167 980696 283000)) nil (26473 19191 750167 197000) 0 nil])
([nil nil ((448 . 449) (#("
" 0 1 (fontified t)) . -448) (undo-tree-id218 . -1) (#("
" 0 1 (fontified t)) . -448) (undo-tree-id219 . -1) 447) nil (26473 19191 750163 290000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 449) (undo-tree-id214 . -10) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -11)) nil (26473 19191 750158 992000) 0 nil])
([nil nil ((2288 . 2310) (2697 . 2717) (t 26473 19191 756464 615000)) nil (26473 19755 182786 174000) 0 nil])
([nil nil ((2740 . 2760) (2922 . 2940)) nil (26473 19755 182853 930000) 0 nil])
([nil nil ((4260 . 4282) (4655 . 4675)) ((#("\\end{articleheader}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 18 (face font-lock-function-name-face fontified t latex-env-pair t) 18 19 (fontified t latex-env-pair t) 19 20 (fontified t)) . 4655) (undo-tree-id224 . 20) (#("\\begin{articleheader}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 20 (face font-lock-function-name-face latex-env-pair t fontified t) 20 21 (latex-env-pair t fontified t) 21 22 (fontified t)) . 4260) (undo-tree-id225 . -22)) (26473 19756 430750 801000) 0 nil])
([nil nil ((4698 . 4718) (4907 . 4925)) nil (26473 19763 556334 939000) 0 nil])
([nil nil ((6216 . 6237) (11275 . 11291) (t 26473 19763 564191 784000)) nil (26473 19782 439014 300000) 0 nil])
([nil nil ((#("{\\bfseries Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 93 (face (bold) fontified t) 93 94 (fontified t)) . -11428) (undo-tree-id312 . -14) (undo-tree-id313 . -14) 11442) nil (26473 19840 662633 616000) 0 nil] [nil nil ((nil rear-nonsticky nil 11421 . 11422) (nil fontified nil 11411 . 11422) (11411 . 11422)) ((#("affiliation" 0 10 (fontified nil) 10 11 (rear-nonsticky nil fontified nil)) . 11411) (undo-tree-id226 . -10) (undo-tree-id227 . -10) (undo-tree-id228 . -10) (undo-tree-id229 . -10) (undo-tree-id230 . -10) (nil rear-nonsticky t 11421 . 11422)) (26473 19782 438939 400000) 0 nil])
([nil nil ((nil rear-nonsticky nil 11492 . 11493) (nil fontified nil 11411 . 11493) (11411 . 11493)) nil (26473 19840 662632 695000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1)) nil (26473 19840 662631 823000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11509) (undo-tree-id300 . -1)) nil (26473 19840 662627 856000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11509)) nil (26473 19840 662627 134000) 0 nil])
([nil nil ((11509 . 11530) (12425 . 12441)) nil (26473 19840 662626 683000) 0 nil])
([nil nil ((#("{\\bfseries Рис.2- Схема электрического обеспечения: 1- солнечная панель, 2)
контроллер заряда, 3) розетка для заряда внешнего аккумулятора, 4)
внешний аккумулятор}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 162 (face (bold) fontified t) 162 163 (fontified t)) . -12578) (undo-tree-id288 . -76) (undo-tree-id289 . -76) (undo-tree-id290 . -76) (undo-tree-id291 . -76) (undo-tree-id292 . -76) (undo-tree-id293 . -76) (undo-tree-id294 . -76) (undo-tree-id295 . -76) (undo-tree-id296 . -76) (undo-tree-id297 . -76) (undo-tree-id298 . -76) (undo-tree-id299 . -76) 12654) nil (26473 19840 662625 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12711 . 12712) (nil fontified nil 12561 . 12712) (12561 . 12712)) nil (26473 19840 662621 935000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12727) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1)) nil (26473 19840 662621 223000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12727) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1)) nil (26473 19840 662615 72000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 12727)) nil (26473 19840 662600 214000) 0 nil])
([nil nil ((12728 . 12749) (13632 . 13648)) nil (26473 19840 662700 782000) 0 nil])
([nil nil ((#("{\\bfseries Рис.3 - Результаты работы программно-аппаратного комплекса}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 18 (face (bold) fontified t) 18 69 (face (bold) fontified t) 69 70 (fontified t)) . -13785) (undo-tree-id320 . -18) (undo-tree-id321 . -69) (undo-tree-id322 . -18) (undo-tree-id323 . -18) (undo-tree-id324 . -18) (undo-tree-id325 . -18) 13803) nil (26473 19863 977266 486000) 0 nil] [nil nil ((13803 . 13804) (#(" Результаты работы программно-аппаратного комплекса}" 0 51 (face (bold) fontified t) 51 52 (fontified t)) . 13803) (undo-tree-id231 . -51) (undo-tree-id232 . -52) (undo-tree-id233 . -52) (undo-tree-id234 . -52) (undo-tree-id235 . -52)) ((13803 . 13855) (#("e" 0 1 (face (bold) fontified t)) . 13803)) (26473 19840 662597 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 13825 . 13826) (nil fontified nil 13768 . 13826) (13768 . 13826)) nil (26473 19863 977263 330000) 0 nil])
nil
([nil nil ((#("
" 0 1 (fontified t)) . 13841) (undo-tree-id319 . -1)) nil (26473 19863 977262 618000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13841) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1)) nil (26473 19863 977261 747000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 13841) (undo-tree-id314 . 1)) nil (26473 19863 977259 573000) 0 nil])
([nil nil ((13842 . 13863) (16751 . 16767)) nil (26473 19863 977250 947000) 0 nil])
([nil nil ((16789 . 16804) (16812 . 16825)) nil (26473 19863 977247 420000) 0 nil])
([nil nil ((16841 . 16860) (18062 . 18079) 16841 (t 26473 19863 981001 36000)) nil (26473 19949 509363 851000) 0 nil])
([nil nil ((18123 . 18142) (19291 . 19308)) nil (26473 19949 509363 531000) 0 nil])
([nil nil ((18099 . 18114) (18122 . 18135)) nil (26473 19949 509363 240000) 0 nil])
([nil nil ((19356 . 19375) (22018 . 22035)) nil (26473 19949 509362 679000) 0 nil])
([nil nil ((20496 . 20507) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -20496) (undo-tree-id327 . -1) 20497 (20495 . 20497)) nil (26473 19949 509361 998000) 0 nil])
([nil nil ((19376 . 19387) (#("s" 0 1 (fontified nil)) . -19376) (undo-tree-id326 . -1) 19377 (19375 . 19377)) nil (26473 19949 509357 650000) 0 nil])
([nil nil ((2239 . 2241) (t 26473 19949 517073 511000)) nil (26473 20042 803355 124000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-warning-face fontified nil)) . -2241) (undo-tree-id366 . -1) (2241 . 2242) (t 26473 20042 811172 849000)) nil (26473 20058 930739 761000) 0 nil])
([nil nil ((4210 . 4212) (t 26473 20042 811172 849000)) nil (26473 20066 641864 831000) 0 nil] [nil nil ((#("сәйкестендіру, бағдарламалық-аппараттық жүйелер, микроконтроллер.
" 0 47 (fontified t) 47 66 (fontified t)) . 4195) (undo-tree-id328 . -65) (undo-tree-id329 . -66) (undo-tree-id330 . -66) (undo-tree-id331 . -66) (undo-tree-id332 . -16) (undo-tree-id333 . -16) (undo-tree-id334 . -16) (undo-tree-id335 . -16) (undo-tree-id336 . -16) (undo-tree-id337 . -16) (undo-tree-id338 . -16) (undo-tree-id339 . -16) (undo-tree-id340 . -16) (undo-tree-id341 . -16) (undo-tree-id342 . -16) (undo-tree-id343 . -16) (undo-tree-id344 . -16) (undo-tree-id345 . -16) (undo-tree-id346 . -16) (undo-tree-id347 . -16) (undo-tree-id348 . -15) (undo-tree-id349 . -15) (undo-tree-id350 . -15) (undo-tree-id351 . -15) (undo-tree-id352 . -15) (undo-tree-id353 . -15) (undo-tree-id354 . -15) (undo-tree-id355 . -15) (undo-tree-id356 . -15) (undo-tree-id357 . -15) (undo-tree-id358 . -15) (undo-tree-id359 . -15) (undo-tree-id360 . -15) (undo-tree-id361 . -15) (undo-tree-id362 . -15) (undo-tree-id363 . -15) (undo-tree-id364 . -15) (undo-tree-id365 . -66) 4210 (t 26473 20042 811172 849000)) ((4195 . 4261)) (26473 20058 930534 798000) 0 nil])
([nil nil ((6202 . 6204)) nil (26473 29629 462486 654000) 0 nil])
nil
([nil nil ((11375 . 11376) (#("8" 0 1 (fontified t)) . 11375) (undo-tree-id689 . -1) (t 26473 29629 979925 689000)) nil (26473 30511 648280 12000) 0 nil] [nil nil ((nil rear-nonsticky nil 268 . 269) (nil fontified nil 260 . 269) (260 . 269) (t 26473 29618 508047 755000)) ((#("\\noindent" 0 8 (face font-lock-keyword-face fontified nil) 8 9 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 260) (undo-tree-id591 . -8) (undo-tree-id592 . -8) (undo-tree-id593 . -8) (undo-tree-id594 . -8) (undo-tree-id595 . -8) (undo-tree-id596 . -8) (undo-tree-id597 . -8) (undo-tree-id598 . -8) (undo-tree-id599 . -8) (undo-tree-id600 . -8) (undo-tree-id601 . -8) (undo-tree-id602 . -8) (undo-tree-id603 . -8) (undo-tree-id604 . -8) (undo-tree-id605 . -8) (undo-tree-id606 . -8) (undo-tree-id607 . -8) (undo-tree-id608 . -8) (undo-tree-id609 . -8) (undo-tree-id610 . -8) (undo-tree-id611 . -8) (undo-tree-id612 . -8) (undo-tree-id613 . -8) (undo-tree-id614 . -8) (undo-tree-id615 . -8) (undo-tree-id616 . -8) (undo-tree-id617 . -8) (undo-tree-id618 . -8) (undo-tree-id619 . -8) (undo-tree-id620 . -8) (undo-tree-id621 . -8) (undo-tree-id622 . -8) (undo-tree-id623 . -8) (undo-tree-id624 . -8) (undo-tree-id625 . -8) (undo-tree-id626 . -8) (undo-tree-id627 . -8) (undo-tree-id628 . -8) (undo-tree-id629 . -8) (undo-tree-id630 . -8) (undo-tree-id631 . -8) (undo-tree-id632 . -8) (undo-tree-id633 . -8) (undo-tree-id634 . -8) (undo-tree-id635 . -8) (undo-tree-id636 . -8) (undo-tree-id637 . -8) (undo-tree-id638 . -8) (undo-tree-id639 . -8) (undo-tree-id640 . -8) (undo-tree-id641 . -8) (undo-tree-id642 . -8) (undo-tree-id643 . -8) (undo-tree-id644 . -8) (undo-tree-id645 . -8) (undo-tree-id646 . -8) (undo-tree-id647 . -8) (undo-tree-id648 . -8) (undo-tree-id649 . -8) (undo-tree-id650 . -8) (undo-tree-id651 . -8) (undo-tree-id652 . -8) (undo-tree-id653 . -8) (undo-tree-id654 . -8) (undo-tree-id655 . -8) (undo-tree-id656 . -8) (undo-tree-id657 . -8) (undo-tree-id658 . -8) (undo-tree-id659 . -8) (undo-tree-id660 . -8) (undo-tree-id661 . -8) (undo-tree-id662 . -8) (undo-tree-id663 . -8) (undo-tree-id664 . -8) (undo-tree-id665 . -8) (undo-tree-id666 . -8) (undo-tree-id667 . -8) (undo-tree-id668 . -8) (undo-tree-id669 . -8) (undo-tree-id670 . -8) (undo-tree-id671 . -8) (undo-tree-id672 . -8) (undo-tree-id673 . -8) (undo-tree-id674 . -8) (undo-tree-id675 . -8) (undo-tree-id676 . -8) (undo-tree-id677 . -8) (undo-tree-id678 . -8) (undo-tree-id679 . -8) (undo-tree-id680 . -8) (undo-tree-id681 . -8) (undo-tree-id682 . -8) (undo-tree-id683 . -8) (undo-tree-id684 . -8) (undo-tree-id685 . -8) (undo-tree-id686 . -8) (undo-tree-id687 . -8) (undo-tree-id688 . -8) (nil rear-nonsticky t 268 . 269) (t 26473 29624 108988 160000)) (26473 29624 101005 857000) 0 nil] [nil nil ((nil rear-nonsticky nil 608 . 609) (nil fontified nil 600 . 609) (600 . 609)) ((#("\\noindent" 0 8 (face font-lock-keyword-face fontified nil) 8 9 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 600) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -8) (undo-tree-id388 . -8) (undo-tree-id389 . -8) (undo-tree-id390 . -8) (undo-tree-id391 . -8) (undo-tree-id392 . -8) (undo-tree-id393 . -8) (undo-tree-id394 . -8) (undo-tree-id395 . -8) (undo-tree-id396 . -8) (undo-tree-id397 . -8) (undo-tree-id398 . -8) (undo-tree-id399 . -8) (undo-tree-id400 . -8) (undo-tree-id401 . -8) (undo-tree-id402 . -8) (undo-tree-id403 . -8) (undo-tree-id404 . -8) (undo-tree-id405 . -8) (undo-tree-id406 . -8) (undo-tree-id407 . -8) (undo-tree-id408 . -8) (undo-tree-id409 . -8) (undo-tree-id410 . -8) (undo-tree-id411 . -8) (undo-tree-id412 . -8) (undo-tree-id413 . -8) (undo-tree-id414 . -8) (undo-tree-id415 . -8) (undo-tree-id416 . -8) (undo-tree-id417 . -8) (undo-tree-id418 . -8) (undo-tree-id419 . -8) (undo-tree-id420 . -8) (undo-tree-id421 . -8) (undo-tree-id422 . -8) (undo-tree-id423 . -8) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) (undo-tree-id427 . -8) (undo-tree-id428 . -8) (undo-tree-id429 . -8) (undo-tree-id430 . -8) (undo-tree-id431 . -8) (undo-tree-id432 . -8) (undo-tree-id433 . -8) (undo-tree-id434 . -8) (undo-tree-id435 . -8) (undo-tree-id436 . -8) (undo-tree-id437 . -8) (undo-tree-id438 . -8) (undo-tree-id439 . -8) (undo-tree-id440 . -8) (undo-tree-id441 . -8) (undo-tree-id442 . -8) (undo-tree-id443 . -8) (undo-tree-id444 . -8) (undo-tree-id445 . -8) (undo-tree-id446 . -8) (undo-tree-id447 . -8) (undo-tree-id448 . -8) (undo-tree-id449 . -8) (undo-tree-id450 . -8) (undo-tree-id451 . -8) (undo-tree-id452 . -8) (undo-tree-id453 . -8) (undo-tree-id454 . -8) (undo-tree-id455 . -8) (undo-tree-id456 . -8) (undo-tree-id457 . -8) (undo-tree-id458 . -8) (undo-tree-id459 . -8) (undo-tree-id460 . -8) (undo-tree-id461 . -8) (undo-tree-id462 . -8) (undo-tree-id463 . -8) (undo-tree-id464 . -8) (undo-tree-id465 . -8) (undo-tree-id466 . -8) (undo-tree-id467 . -8) (undo-tree-id468 . -8) (undo-tree-id469 . -8) (undo-tree-id470 . -8) (undo-tree-id471 . -8) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -8) (undo-tree-id478 . -8) (undo-tree-id479 . -8) (undo-tree-id480 . -8) (undo-tree-id481 . -8) (undo-tree-id482 . -8) (undo-tree-id483 . -8) (undo-tree-id484 . -8) (undo-tree-id485 . -8) (undo-tree-id486 . -8) (undo-tree-id487 . -8) (undo-tree-id488 . -8) (undo-tree-id489 . -8) (undo-tree-id490 . -8) (undo-tree-id491 . -8) (undo-tree-id492 . -8) (undo-tree-id493 . -8) (undo-tree-id494 . -8) (undo-tree-id495 . -8) (undo-tree-id496 . -8) (undo-tree-id497 . -8) (undo-tree-id498 . -8) (undo-tree-id499 . -8) (undo-tree-id500 . -8) (undo-tree-id501 . -8) (undo-tree-id502 . -8) (undo-tree-id503 . -8) (undo-tree-id504 . -8) (undo-tree-id505 . -8) (undo-tree-id506 . -8) (undo-tree-id507 . -8) (undo-tree-id508 . -8) (undo-tree-id509 . -8) (undo-tree-id510 . -8) (undo-tree-id511 . -8) (undo-tree-id512 . -8) (undo-tree-id513 . -8) (undo-tree-id514 . -8) (undo-tree-id515 . -8) (undo-tree-id516 . -8) (undo-tree-id517 . -8) (undo-tree-id518 . -8) (undo-tree-id519 . -8) (undo-tree-id520 . -8) (undo-tree-id521 . -8) (undo-tree-id522 . -8) (undo-tree-id523 . -8) (undo-tree-id524 . -8) (undo-tree-id525 . -8) (undo-tree-id526 . -8) (undo-tree-id527 . -8) (undo-tree-id528 . -8) (undo-tree-id529 . -8) (undo-tree-id530 . -8) (undo-tree-id531 . -8) (undo-tree-id532 . -8) (undo-tree-id533 . -8) (undo-tree-id534 . -8) (undo-tree-id535 . -8) (undo-tree-id536 . -8) (undo-tree-id537 . -8) (undo-tree-id538 . -8) (undo-tree-id539 . -8) (undo-tree-id540 . -8) (undo-tree-id541 . -8) (undo-tree-id542 . -8) (undo-tree-id543 . -8) (undo-tree-id544 . -8) (undo-tree-id545 . -8) (undo-tree-id546 . -8) (undo-tree-id547 . -8) (undo-tree-id548 . -8) (undo-tree-id549 . -8) (undo-tree-id550 . -8) (undo-tree-id551 . -8) (undo-tree-id552 . -8) (undo-tree-id553 . -8) (undo-tree-id554 . -8) (undo-tree-id555 . -8) (undo-tree-id556 . -8) (undo-tree-id557 . -8) (undo-tree-id558 . -8) (undo-tree-id559 . -8) (undo-tree-id560 . -8) (undo-tree-id561 . -8) (undo-tree-id562 . -8) (undo-tree-id563 . -8) (undo-tree-id564 . -8) (undo-tree-id565 . -8) (undo-tree-id566 . -8) (undo-tree-id567 . -8) (undo-tree-id568 . -8) (undo-tree-id569 . -8) (undo-tree-id570 . -8) (undo-tree-id571 . -8) (undo-tree-id572 . -8) (undo-tree-id573 . -8) (undo-tree-id574 . -8) (undo-tree-id575 . -8) (undo-tree-id576 . -8) (undo-tree-id577 . -8) (undo-tree-id578 . -8) (undo-tree-id579 . -8) (undo-tree-id580 . -8) (undo-tree-id581 . -8) (undo-tree-id582 . -8) (undo-tree-id583 . -8) (undo-tree-id584 . -8) (undo-tree-id585 . -8) (undo-tree-id586 . -8) (undo-tree-id587 . -8) (undo-tree-id588 . -8) (undo-tree-id589 . -8) (undo-tree-id590 . -8) (nil rear-nonsticky t 608 . 609) (t 26473 29606 675173 647000)) (26473 29606 668465 636000) 0 nil] [nil nil ((#("
" 0 1 (fontified t)) . 600) (t 26473 20066 648938 912000)) ((600 . 601)) (26473 28767 819775 461000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 11302) (undo-tree-id1064 . -15) (undo-tree-id1065 . -16) (undo-tree-id1066 . -16) (undo-tree-id1067 . -16) (undo-tree-id1068 . -16) (undo-tree-id1069 . -16) (undo-tree-id1070 . -16) (undo-tree-id1071 . -16) (t 26473 30533 660258 317000)) nil (26473 30573 951766 547000) 0 nil] [nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 11515) (undo-tree-id1055 . -20) (undo-tree-id1056 . -14) 11529) ((11515 . 11536)) (26473 30510 392213 251000) 0 nil] [nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 11515) (undo-tree-id1013 . -20) (undo-tree-id1014 . -14) 11529) ((11515 . 11536)) (26473 30479 940069 920000) 0 nil] [nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 11302) (undo-tree-id713 . -15) (undo-tree-id714 . -14) 11316 (t 26473 30423 845438 123000)) ((11302 . 11318)) (26473 30462 896767 817000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . 2740)) ((2740 . 2741)) (26473 28767 649631 788000) 0 nil])
([nil nil ((#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t) 17 21 (fontified t)) . 11499) (undo-tree-id1063 . -20)) nil (26473 30573 951763 21000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 99 (fontified t) 99 180 (fontified t) 180 181 (fontified t rear-nonsticky t) 181 183 (fontified t) 183 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t latex-env-pair t) 188 194 (face font-lock-function-name-face fontified t latex-env-pair t) 194 195 (fontified t latex-env-pair t) 195 196 (fontified t)) . 11318) (undo-tree-id1048 . -195) (undo-tree-id1049 . -194) (undo-tree-id1050 . -194) (undo-tree-id1051 . -183) (undo-tree-id1052 . -99) (undo-tree-id1053 . -183) (undo-tree-id1054 . -183)) ((11318 . 11514)) (26473 30509 899629 666000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 10567 . 10568) (#("
" 0 1 (fontified nil)) . -10583) (10567 . 10584) 10557) ((#("
\\end{multicols}
" 0 1 (rear-nonsticky nil fontified nil) 1 5 (face font-lock-keyword-face fontified nil) 5 6 (fontified nil latex-env-pair t) 6 15 (face font-lock-function-name-face fontified nil latex-env-pair t) 15 16 (fontified nil latex-env-pair t) 16 17 (fontified nil)) . 10567) (undo-tree-id853 . -16) (undo-tree-id854 . -16) (undo-tree-id855 . -16) (undo-tree-id856 . -16) (undo-tree-id857 . -16) (undo-tree-id858 . -16) (undo-tree-id859 . -16) (undo-tree-id860 . -16) (undo-tree-id861 . -16) (undo-tree-id862 . -16) (undo-tree-id863 . -16) (undo-tree-id864 . -16) (undo-tree-id865 . -16) (undo-tree-id866 . -16) (undo-tree-id867 . -16) (undo-tree-id868 . -16) (undo-tree-id869 . -16) (undo-tree-id870 . -16) (undo-tree-id871 . -16) (undo-tree-id872 . -16) (undo-tree-id873 . -16) (undo-tree-id874 . -16) (undo-tree-id875 . -16) (undo-tree-id876 . -16) (undo-tree-id877 . -16) (undo-tree-id878 . -16) (undo-tree-id879 . -16) (undo-tree-id880 . -16) (undo-tree-id881 . -16) (undo-tree-id882 . -16) (undo-tree-id883 . -16) (undo-tree-id884 . -16) (undo-tree-id885 . -16) (undo-tree-id886 . -16) (undo-tree-id887 . -16) (undo-tree-id888 . -16) (undo-tree-id889 . -16) (undo-tree-id890 . -16) (undo-tree-id891 . -16) (undo-tree-id892 . -16) (undo-tree-id893 . -16) (undo-tree-id894 . -16) (undo-tree-id895 . -16) (undo-tree-id896 . -16) (undo-tree-id897 . -16) (undo-tree-id898 . -16) (undo-tree-id899 . -16) (undo-tree-id900 . -16) (undo-tree-id901 . -16) (undo-tree-id902 . -16) (undo-tree-id903 . -16) (undo-tree-id904 . -16) (undo-tree-id905 . -16) (undo-tree-id906 . -16) (undo-tree-id907 . -16) (undo-tree-id908 . -16) (undo-tree-id909 . -16) (undo-tree-id910 . -16) (undo-tree-id911 . -16) (undo-tree-id912 . -16) (undo-tree-id913 . -16) (undo-tree-id914 . -16) (undo-tree-id915 . -16) (undo-tree-id916 . -16) (undo-tree-id917 . -16) (undo-tree-id918 . -16) (undo-tree-id919 . -16) (undo-tree-id920 . -16) (undo-tree-id921 . -16) (undo-tree-id922 . -16) (undo-tree-id923 . -16) (undo-tree-id924 . -16) (undo-tree-id925 . -16) (undo-tree-id926 . -16) (undo-tree-id927 . -16) (undo-tree-id928 . -16) (undo-tree-id929 . -16) (undo-tree-id930 . -16) (undo-tree-id931 . -16) (undo-tree-id932 . -16) (undo-tree-id933 . -16) (undo-tree-id934 . -16) (undo-tree-id935 . -16) (undo-tree-id936 . -16) (undo-tree-id937 . -16) (undo-tree-id938 . -16) (undo-tree-id939 . -16) (undo-tree-id940 . -16) (undo-tree-id941 . -16) (undo-tree-id942 . -16) (undo-tree-id943 . -16) (undo-tree-id944 . -16) (undo-tree-id945 . -16) (undo-tree-id946 . -16) (undo-tree-id947 . -16) (undo-tree-id948 . -16) (undo-tree-id949 . -16) (undo-tree-id950 . -16) (undo-tree-id951 . -16) (undo-tree-id952 . -16) (undo-tree-id953 . -16) (undo-tree-id954 . -16) (undo-tree-id955 . -16) (undo-tree-id956 . -16) (undo-tree-id957 . -16) (undo-tree-id958 . -16) (undo-tree-id959 . -16) (undo-tree-id960 . -16) (undo-tree-id961 . -16) (undo-tree-id962 . -16) (undo-tree-id963 . -16) (undo-tree-id964 . -16) (undo-tree-id965 . -16) (undo-tree-id966 . -16) (undo-tree-id967 . -16) (undo-tree-id968 . -16) (undo-tree-id969 . -16) (undo-tree-id970 . -16) (undo-tree-id971 . -16) (undo-tree-id972 . -16) (undo-tree-id973 . -16) (undo-tree-id974 . -16) (undo-tree-id975 . -16) (undo-tree-id976 . -16) (undo-tree-id977 . -16) (undo-tree-id978 . -16) (undo-tree-id979 . -16) (undo-tree-id980 . -16) (undo-tree-id981 . -16) (undo-tree-id982 . -16) (undo-tree-id983 . -16) (undo-tree-id984 . -16) (undo-tree-id985 . -16) (undo-tree-id986 . -16) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -16) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -16) (undo-tree-id1012 . -1) (10583 . 10584) (nil rear-nonsticky t 10567 . 10568)) (26473 30459 563585 778000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4699) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1)) ((4699 . 4700) (t 26473 28761 46119 163000)) (26473 28761 38857 688000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 99 (fontified t) 99 180 (fontified t) 180 181 (fontified t rear-nonsticky t) 181 183 (fontified t) 183 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t latex-env-pair t) 188 194 (face font-lock-function-name-face fontified t latex-env-pair t) 194 195 (fontified t latex-env-pair t) 195 196 (fontified t)) . 11302) (undo-tree-id1057 . -195) (undo-tree-id1058 . -183) (undo-tree-id1059 . -183) (undo-tree-id1060 . -183) (undo-tree-id1061 . -99) (undo-tree-id1062 . -183)) nil (26473 30573 951761 809000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12250 . 12251) (#("
" 0 1 (fontified nil)) . -12446) (12250 . 12447) 12235) ((#("

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}
" 0 1 (fontified nil rear-nonsticky nil) 1 2 (fontified nil) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t latex-env-pair t) 9 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 21 (fontified t) 21 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 49 (face font-lock-keyword-face fontified t) 49 58 (fontified t) 58 59 (fontified t) 59 69 (face font-lock-keyword-face fontified t) 69 71 (fontified t) 71 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t) 100 181 (fontified t) 181 182 (fontified t rear-nonsticky t) 182 184 (fontified t) 184 188 (face font-lock-keyword-face fontified nil) 188 189 (fontified nil latex-env-pair t) 189 195 (face font-lock-function-name-face fontified nil latex-env-pair t) 195 196 (fontified nil latex-env-pair t) 196 197 (fontified nil)) . 12250) (12446 . 12447) (nil rear-nonsticky t 12250 . 12251)) (26473 30509 521599 446000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 11 (face font-lock-function-name-face fontified t latex-env-pair t) 11 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 99 (fontified t) 99 180 (fontified t) 180 181 (fontified t rear-nonsticky t) 181 183 (fontified t) 183 187 (face font-lock-keyword-face fontified t) 187 188 (fontified t latex-env-pair t) 188 194 (face font-lock-function-name-face fontified t latex-env-pair t) 194 195 (fontified t latex-env-pair t) 195 196 (fontified t)) . 11318) (undo-tree-id690 . -195) (undo-tree-id691 . -183) (undo-tree-id692 . -183) (undo-tree-id693 . -183) (undo-tree-id694 . -99) (undo-tree-id695 . -99) (undo-tree-id696 . -183) (undo-tree-id697 . -183) (undo-tree-id698 . -183) (undo-tree-id699 . -183) (undo-tree-id700 . -183) (undo-tree-id701 . -183) (undo-tree-id702 . -183) (undo-tree-id703 . -183) (undo-tree-id704 . -183) (undo-tree-id705 . -183) (undo-tree-id706 . -183) (undo-tree-id707 . -57) (undo-tree-id708 . -183) (undo-tree-id709 . -183) (undo-tree-id710 . -183) (undo-tree-id711 . -183) (undo-tree-id712 . -196) 11501) ((11318 . 11514)) (26473 30459 115931 804000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 12234 . 12235) (#("
" 0 1 (fontified nil)) . -12430) (12234 . 12431) 12219) nil (26473 30573 951748 193000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 11302) (undo-tree-id1015 . -15) (undo-tree-id1016 . -16) (undo-tree-id1017 . -16) (undo-tree-id1018 . -16) (undo-tree-id1019 . -16) (undo-tree-id1020 . -16) (undo-tree-id1021 . -16) (undo-tree-id1022 . -16) (undo-tree-id1023 . -16) (undo-tree-id1024 . -16) (undo-tree-id1025 . -16) (undo-tree-id1027 . -16) (undo-tree-id1029 . -16) (undo-tree-id1031 . -16) (undo-tree-id1033 . -16) (undo-tree-id1035 . -16) (undo-tree-id1037 . -16) (undo-tree-id1039 . -16) (undo-tree-id1041 . -16) (undo-tree-id1043 . -16) (undo-tree-id1045 . -16) (undo-tree-id1047 . -16)) ((11302 . 11318) (t 26473 30488 510743 561000)) (26473 30488 503956 951000) 0 nil])
([nil nil ((nil rear-nonsticky nil 10583 . 10584) (#("
" 0 1 (fontified nil)) . -10779) (10583 . 10780) 10568) ((#("

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t latex-env-pair t) 9 12 (face font-lock-function-name-face fontified t latex-env-pair t) 12 15 (face font-lock-function-name-face fontified t latex-env-pair t) 15 16 (fontified t latex-env-pair t) 16 21 (fontified t) 21 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 33 (fontified t) 33 49 (face font-lock-keyword-face fontified t) 49 58 (fontified t) 58 59 (fontified t) 59 69 (face font-lock-keyword-face fontified t) 69 71 (fontified t) 71 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 100 (fontified t) 100 181 (fontified t) 181 182 (fontified t rear-nonsticky t) 182 184 (fontified t) 184 188 (face font-lock-keyword-face fontified nil) 188 189 (fontified nil latex-env-pair t) 189 195 (face font-lock-function-name-face fontified nil latex-env-pair t) 195 196 (fontified nil latex-env-pair t) 196 197 (fontified nil)) . 10583) (undo-tree-id715 . -1) (undo-tree-id716 . -196) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (10779 . 10780) (nil rear-nonsticky t 10583 . 10584) (t 26473 30439 841266 361000)) (26473 30439 834725 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12951 . 12952) (nil fontified nil 12236 . 12952) (12236 . 12952) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image1}
	\\caption*{Рис.1- Программно-аппаратный комплекс идентификации личности по
отпечаткам пальцев}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image2}
	\\caption*{Рис.2- Схема электрического обеспечения: 1- солнечная панель, 2)
контроллер заряда, 3) розетка для заряда внешнего аккумулятора, 4)
внешний аккумулятор}
\\end{figure}" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 10 (face font-lock-function-name-face fontified t latex-env-pair t) 10 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 56 (fontified t) 56 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 85 (face font-lock-builtin-face fontified t) 85 87 (fontified t) 87 88 (fontified t) 88 97 (face font-lock-keyword-face fontified t) 97 98 (fontified t) 98 179 (fontified t) 179 180 (fontified t rear-nonsticky t) 180 182 (fontified t) 182 186 (face font-lock-keyword-face fontified t) 186 187 (fontified t latex-env-pair t) 187 193 (face font-lock-function-name-face fontified t latex-env-pair t) 193 194 (fontified t latex-env-pair t) 194 195 (fontified t) 195 196 (fontified t) 196 201 (face font-lock-keyword-face fontified t) 201 202 (face font-lock-keyword-face fontified t) 202 203 (fontified t latex-env-pair t) 203 209 (face font-lock-function-name-face fontified t latex-env-pair t) 209 210 (fontified t latex-env-pair t) 210 214 (fontified t) 214 215 (fontified t) 215 225 (face font-lock-keyword-face fontified t) 225 227 (fontified t) 227 243 (face font-lock-keyword-face fontified t) 243 253 (fontified t) 253 263 (face font-lock-keyword-face fontified t) 263 265 (fontified t) 265 281 (face font-lock-builtin-face fontified t) 281 283 (fontified t) 283 284 (fontified t) 284 293 (face font-lock-keyword-face fontified t) 293 294 (fontified t) 294 444 (fontified t) 444 445 (fontified t rear-nonsticky t) 445 447 (fontified t) 447 451 (face font-lock-keyword-face fontified t) 451 452 (fontified t latex-env-pair t) 452 458 (face font-lock-function-name-face fontified t latex-env-pair t) 458 459 (fontified t latex-env-pair t)) . 12236) (undo-tree-id1072 . -458) (undo-tree-id1073 . -447) (undo-tree-id1074 . -447) (undo-tree-id1075 . -447) 12696 (t 26473 30573 958825 75000)) nil (26473 30624 291862 164000) 0 nil])
nil
nil
([nil nil ((12414 . 12415)) nil (26473 30624 291852 286000) 0 nil])
([nil nil ((12735 . 12736)) nil (26473 30624 291848 689000) 0 nil])
([nil nil ((#("    \\caption{Общие схемы и диаграммы}
" 0 4 (fontified t) 4 12 (face font-lock-keyword-face fontified t) 12 38 (fontified t)) . 12904) (undo-tree-id1076 . -37) (undo-tree-id1077 . -23) (undo-tree-id1078 . -23) (undo-tree-id1079 . -23) (undo-tree-id1080 . -23) (undo-tree-id1081 . -23) (undo-tree-id1082 . -23) (undo-tree-id1083 . -23) (undo-tree-id1084 . -23) (undo-tree-id1085 . -23) (undo-tree-id1086 . -23) (undo-tree-id1087 . -23) (undo-tree-id1088 . -23) (undo-tree-id1089 . -23) (undo-tree-id1090 . -23) (undo-tree-id1091 . -23) (undo-tree-id1092 . -23) (undo-tree-id1093 . -23) (undo-tree-id1094 . -23) (undo-tree-id1095 . -23) (undo-tree-id1096 . -23) (undo-tree-id1097 . -23) (undo-tree-id1098 . -23) (undo-tree-id1099 . -23) (undo-tree-id1100 . -23) (undo-tree-id1101 . -23) (undo-tree-id1102 . -23) (undo-tree-id1103 . -23) (undo-tree-id1104 . -23) (undo-tree-id1105 . -23) (undo-tree-id1106 . -23) (undo-tree-id1107 . -23) (undo-tree-id1108 . -23) (undo-tree-id1109 . -23) (undo-tree-id1110 . -23) (undo-tree-id1111 . -23) (undo-tree-id1112 . -23) (undo-tree-id1113 . -23) (undo-tree-id1114 . -23) (undo-tree-id1115 . -23) (undo-tree-id1116 . -23) (undo-tree-id1117 . -23) (undo-tree-id1118 . -23) (undo-tree-id1119 . -23) (undo-tree-id1120 . -23) (undo-tree-id1121 . -23) (undo-tree-id1122 . -23) (undo-tree-id1123 . -23) (undo-tree-id1124 . -23) (undo-tree-id1125 . -23) (undo-tree-id1126 . -23) (undo-tree-id1127 . -23) (undo-tree-id1128 . -23) (undo-tree-id1129 . -23) (undo-tree-id1130 . -23) (undo-tree-id1131 . -23) (undo-tree-id1132 . -23) (undo-tree-id1133 . -23) (undo-tree-id1134 . -23) (undo-tree-id1135 . -23) (undo-tree-id1136 . -38) 12927 (t 26473 30624 300283 593000)) nil (26473 30632 782833 72000) 0 nil])
([nil nil ((nil rear-nonsticky nil 12953 . 12954) (nil fontified nil 12237 . 12954) (12237 . 12954) (#("\\begin{figure}[H]
    \\centering
    \\begin{subfigure}[b]{0.45\\textwidth}
        \\centering
        \\includegraphics[width=\\textwidth]{media/ict/image1}
        \\caption*{Рис.1 - Программно-аппаратный комплекс идентификации личности по отпечаткам пальцев}
    \\end{subfigure}
    \\hspace{0.05\\textwidth} % Adjust horizontal space between the subfigures
    \\begin{subfigure}[b]{0.45\\textwidth}
        \\centering
        \\includegraphics[width=\\textwidth]{media/ict/image2}
        \\caption*{Рис.2 - Схема электрического обеспечения: 1- солнечная панель, 2) контроллер заряда, 3) розетка для заряда внешнего аккумулятора, 4) внешний аккумулятор}
    \\end{subfigure}
\\end{figure}" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 22 (fontified t) 22 32 (face font-lock-keyword-face fontified t) 32 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 53 (face font-lock-function-name-face latex-env-pair t fontified t) 53 54 (latex-env-pair t fontified t) 54 62 (fontified t) 62 72 (face font-lock-keyword-face fontified t) 72 82 (fontified t) 82 92 (face font-lock-keyword-face fontified t) 92 101 (fontified t) 101 117 (face font-lock-keyword-face fontified t) 117 124 (fontified t) 124 134 (face font-lock-keyword-face fontified t) 134 136 (fontified t) 136 152 (face font-lock-builtin-face fontified t) 152 154 (fontified t) 154 162 (fontified t) 162 171 (face font-lock-keyword-face fontified t) 171 257 (fontified t) 257 261 (fontified t) 261 265 (face font-lock-keyword-face fontified t) 265 266 (fontified t latex-env-pair t) 266 275 (face font-lock-function-name-face fontified t latex-env-pair t) 275 276 (fontified t latex-env-pair t) 276 281 (fontified t) 281 288 (face font-lock-keyword-face fontified t) 288 293 (fontified t) 293 303 (face font-lock-keyword-face fontified t) 303 305 (fontified t) 305 354 (face font-lock-comment-face fontified t) 354 358 (fontified t) 358 364 (face font-lock-keyword-face fontified t) 364 365 (fontified t latex-env-pair t) 365 374 (face font-lock-function-name-face fontified t latex-env-pair t) 374 375 (fontified t latex-env-pair t) 375 383 (fontified t) 383 393 (face font-lock-keyword-face fontified t) 393 403 (fontified t) 403 413 (face font-lock-keyword-face fontified t) 413 422 (fontified t) 422 438 (face font-lock-keyword-face fontified t) 438 445 (fontified t) 445 455 (face font-lock-keyword-face fontified t) 455 457 (fontified t) 457 473 (face font-lock-builtin-face fontified t) 473 475 (fontified t) 475 483 (fontified t) 483 492 (face font-lock-keyword-face fontified t) 492 647 (fontified t) 647 651 (fontified t) 651 655 (face font-lock-keyword-face fontified t) 655 656 (fontified t latex-env-pair t) 656 665 (face font-lock-function-name-face fontified t latex-env-pair t) 665 666 (fontified t latex-env-pair t) 666 667 (fontified t) 667 671 (face font-lock-keyword-face fontified t) 671 672 (fontified t latex-env-pair t) 672 678 (face font-lock-function-name-face fontified t latex-env-pair t) 678 679 (fontified t latex-env-pair t rear-nonsticky t)) . 12237) (undo-tree-id1137 . -678) (undo-tree-id1138 . 180) (undo-tree-id1139 . -11) (undo-tree-id1140 . -678) (undo-tree-id1141 . -11) (undo-tree-id1142 . -678) (undo-tree-id1143 . -11) (undo-tree-id1144 . -11) (undo-tree-id1145 . -11) (undo-tree-id1146 . -11) (undo-tree-id1147 . -11) (undo-tree-id1148 . -11) (undo-tree-id1149 . -11) (undo-tree-id1150 . -11) (undo-tree-id1151 . -11) (undo-tree-id1152 . -11) (undo-tree-id1153 . -11) (undo-tree-id1154 . -11) (undo-tree-id1155 . -11) (undo-tree-id1156 . -11) (undo-tree-id1157 . -11) (undo-tree-id1158 . -11) (undo-tree-id1159 . -11) (undo-tree-id1160 . -11) (undo-tree-id1161 . -11) (undo-tree-id1162 . -11) (undo-tree-id1163 . -11) (undo-tree-id1164 . -11) (undo-tree-id1165 . -11) (undo-tree-id1166 . -11) (undo-tree-id1167 . -11) (undo-tree-id1168 . -11) (undo-tree-id1169 . -11) (undo-tree-id1170 . -11) (undo-tree-id1171 . -11) (undo-tree-id1172 . -11) (undo-tree-id1173 . -11) (undo-tree-id1174 . -11) (undo-tree-id1175 . -11) (undo-tree-id1176 . -11) (undo-tree-id1177 . -11) (undo-tree-id1178 . -11) (undo-tree-id1179 . -11) (undo-tree-id1180 . -11) (undo-tree-id1181 . -11) (undo-tree-id1182 . -29) (undo-tree-id1183 . -29) (undo-tree-id1184 . -29) (undo-tree-id1185 . -29) (undo-tree-id1186 . -29) (undo-tree-id1187 . -29) (undo-tree-id1188 . -29) (undo-tree-id1189 . -29) (undo-tree-id1190 . -29) (undo-tree-id1191 . -29) (undo-tree-id1192 . -29) (undo-tree-id1193 . -29) (undo-tree-id1194 . -29) (undo-tree-id1195 . -29) (undo-tree-id1196 . -29) (undo-tree-id1197 . -29) (undo-tree-id1198 . -29) (undo-tree-id1199 . -44) (undo-tree-id1200 . -44) (undo-tree-id1201 . -44) (undo-tree-id1202 . -44) (undo-tree-id1203 . -44) (undo-tree-id1204 . -85) (undo-tree-id1205 . -85) (undo-tree-id1206 . -85) (undo-tree-id1207 . -85) (undo-tree-id1208 . -85) (undo-tree-id1209 . -104) (undo-tree-id1210 . -104) (undo-tree-id1211 . -104) (undo-tree-id1212 . -104) (undo-tree-id1213 . -104) (undo-tree-id1214 . -165) (undo-tree-id1215 . -165) (undo-tree-id1216 . -165) (undo-tree-id1217 . -165) (undo-tree-id1218 . -165) (undo-tree-id1219 . -268) (undo-tree-id1220 . -268) (undo-tree-id1221 . -268) (undo-tree-id1222 . -268) (undo-tree-id1223 . -268) (undo-tree-id1224 . -288) (undo-tree-id1225 . -288) (undo-tree-id1226 . -288) (undo-tree-id1227 . -288) (undo-tree-id1228 . -288) (undo-tree-id1229 . -365) (undo-tree-id1230 . -365) (undo-tree-id1231 . -365) (undo-tree-id1232 . -365) (undo-tree-id1233 . -365) (undo-tree-id1234 . -406) (undo-tree-id1235 . -406) (undo-tree-id1236 . -406) (undo-tree-id1237 . -406) (undo-tree-id1238 . -406) (undo-tree-id1239 . -425) (undo-tree-id1240 . -425) (undo-tree-id1241 . -425) (undo-tree-id1242 . -425) (undo-tree-id1243 . -425) (undo-tree-id1244 . -486) (undo-tree-id1245 . -486) (undo-tree-id1246 . -486) (undo-tree-id1247 . -486) (undo-tree-id1248 . -486) (undo-tree-id1249 . -658) (undo-tree-id1250 . -658) (undo-tree-id1251 . -658) (undo-tree-id1252 . -658) (undo-tree-id1253 . -658) (undo-tree-id1254 . -678) (undo-tree-id1255 . -678) (undo-tree-id1256 . -678) (undo-tree-id1257 . -678) (undo-tree-id1258 . -678) (undo-tree-id1259 . -667) (undo-tree-id1260 . -678) (undo-tree-id1261 . -678) (undo-tree-id1262 . -678) (undo-tree-id1263 . -678) (undo-tree-id1264 . -678) (undo-tree-id1265 . -678) (undo-tree-id1266 . -678) (undo-tree-id1267 . -678) (undo-tree-id1268 . -678) (undo-tree-id1269 . -678) (undo-tree-id1270 . -678) (undo-tree-id1271 . -678) (undo-tree-id1272 . -678) (undo-tree-id1273 . -678) (undo-tree-id1274 . -678) (undo-tree-id1275 . -678) (undo-tree-id1276 . -678) (undo-tree-id1277 . -679) 12917 (t 26473 30632 790192 267000)) nil (26473 30685 475528 814000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 12638) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (t 26473 30685 479625 303000)) nil (26473 30724 374623 489000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 12298) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1)) nil (26473 30724 374619 91000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image3}
	\\caption*{Рис.3 - Результаты работы программно-аппаратного комплекса}
\\end{figure}

\\begin{multicols}{2}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 97 (face font-lock-builtin-face fontified t) 97 102 (face font-lock-builtin-face fontified t) 102 104 (fontified t) 104 105 (fontified t) 105 113 (face font-lock-keyword-face fontified t) 113 114 (face font-lock-keyword-face fontified t) 114 115 (fontified t) 115 172 (fontified t) 172 173 (fontified t rear-nonsticky t) 173 175 (fontified t) 175 179 (face font-lock-keyword-face fontified t) 179 180 (fontified t latex-env-pair t) 180 186 (face font-lock-function-name-face fontified t latex-env-pair t) 186 187 (fontified t latex-env-pair t) 187 188 (fontified t) 188 189 (fontified t) 189 195 (face font-lock-keyword-face fontified t) 195 196 (fontified t latex-env-pair t) 196 205 (face font-lock-function-name-face fontified t latex-env-pair t) 205 206 (fontified t latex-env-pair t) 206 210 (fontified t)) . 13879) (undo-tree-id1283 . -209) (undo-tree-id1284 . -189) (undo-tree-id1285 . -189) (undo-tree-id1286 . -188) (undo-tree-id1287 . -188) (undo-tree-id1288 . -189) 14068 (t 26473 30724 384206 406000)) nil (26473 30748 791681 241000) 0 nil])
([nil nil ((13878 . 13879) 13830) nil (26473 30748 791677 113000) 0 nil])
([nil nil ((nil rear-nonsticky nil 14433 . 14434) (#("
" 0 1 (fontified nil)) . -14643) (14433 . 14644) 14394) nil (26473 30748 791676 211000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 14644) (undo-tree-id1282 . -1)) nil (26473 30748 791672 685000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -14507) (t 26473 30748 799943 412000) (14508 . 14509) 14507 (t 26473 30748 799943 412000)) nil (26473 30773 836746 128000) 0 nil])
([nil nil ((15021 . 15022) (t 26473 30773 843673 619000)) nil (26473 30796 583545 124000) 0 nil])
([nil nil ((15020 . 15021)) nil (26473 30796 583544 593000) 0 nil])
([nil nil ((15044 . 15045)) nil (26473 30796 583544 62000) 0 nil])
([nil nil ((15043 . 15044)) nil (26473 30796 583539 173000) 0 nil])
([nil nil ((17397 . 17398) (t 26473 30796 588435 933000)) nil (26473 30821 99338 789000) 0 nil])
([nil nil ((17396 . 17397)) nil (26473 30821 99335 82000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17396) (t 26473 30821 104203 437000)) nil (26473 30847 572742 25000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 17397)) nil (26473 30847 572741 273000) 0 nil])
([nil nil ((17404 . 17405)) nil (26473 30847 572737 336000) 0 nil])
([nil nil ((17404 . 17405) (#("|" 0 1 (fontified t)) . -17404) (undo-tree-id1289 . -1) 17405 (17404 . 17405) (#("?" 0 1 (fontified t)) . -17404) (undo-tree-id1290 . -1) 17405 (17404 . 17405) (t 26473 30847 577952 143000)) nil (26473 30861 624135 24000) 0 nil])
([nil nil ((18954 . 18955) (t 26473 30861 630818 687000)) nil (26473 30887 374576 227000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . -18954) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) 18955) nil (26473 30887 374575 426000) 0 nil])
([nil nil ((18954 . 18955)) nil (26473 30887 374564 926000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -18954) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) 18955) nil (26473 30887 374563 654000) 0 nil])
([nil nil ((18954 . 18956)) nil (26473 30887 374542 955000) 0 nil])
([nil nil ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 18954) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -2) (undo-tree-id1345 . -2) (undo-tree-id1346 . -2) (undo-tree-id1347 . -2) (undo-tree-id1348 . -2) (undo-tree-id1349 . -2) (undo-tree-id1350 . -2) (undo-tree-id1351 . -2) (undo-tree-id1352 . -2) (undo-tree-id1353 . -2) (undo-tree-id1354 . -2) (undo-tree-id1355 . -2) (undo-tree-id1356 . -2) (undo-tree-id1357 . -2) (undo-tree-id1358 . -2) (undo-tree-id1359 . -2) (undo-tree-id1360 . -2) (undo-tree-id1361 . -2) (undo-tree-id1362 . -2) (undo-tree-id1363 . -2) (undo-tree-id1364 . -2) (undo-tree-id1365 . -2) (undo-tree-id1366 . -2) (undo-tree-id1367 . -2) (undo-tree-id1368 . -2) (undo-tree-id1369 . -2) (undo-tree-id1370 . -2) (undo-tree-id1371 . -2) (undo-tree-id1372 . -2) (undo-tree-id1373 . -2) (undo-tree-id1374 . -2) (undo-tree-id1375 . -2) (undo-tree-id1376 . -2) (undo-tree-id1377 . -2) (undo-tree-id1378 . -2) (undo-tree-id1379 . -2) (undo-tree-id1380 . -2) (undo-tree-id1381 . -2) (undo-tree-id1382 . -2) (undo-tree-id1383 . -2) (undo-tree-id1384 . -2) (undo-tree-id1385 . -2) (undo-tree-id1386 . -2) (undo-tree-id1387 . -2) (undo-tree-id1388 . -2) (undo-tree-id1389 . -2) (undo-tree-id1390 . -2) (undo-tree-id1391 . -2) (undo-tree-id1392 . -2) (undo-tree-id1393 . -2) (undo-tree-id1394 . -2) (undo-tree-id1395 . -2) (undo-tree-id1396 . -2) (undo-tree-id1397 . -2) (undo-tree-id1398 . -2) (undo-tree-id1399 . -2) (undo-tree-id1400 . -2) (undo-tree-id1401 . -2) (undo-tree-id1402 . -2) (undo-tree-id1403 . -2) (undo-tree-id1404 . -2) (undo-tree-id1405 . -2) (undo-tree-id1406 . -2) (undo-tree-id1407 . -2) (undo-tree-id1408 . -2) (undo-tree-id1409 . -2) (undo-tree-id1410 . -2) (undo-tree-id1411 . -2) (undo-tree-id1412 . -2) (undo-tree-id1413 . -2) (undo-tree-id1414 . -2) (undo-tree-id1415 . -2) (undo-tree-id1416 . -2) (undo-tree-id1417 . -2) (undo-tree-id1418 . -2) (undo-tree-id1419 . -2) (undo-tree-id1420 . -2) (undo-tree-id1421 . -2) (undo-tree-id1422 . -2) (undo-tree-id1423 . -2) (undo-tree-id1424 . -2) (undo-tree-id1425 . -2) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -2) (undo-tree-id1466 . -2) (t 26473 30887 382574 17000)) nil (26473 30896 656397 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 18953 . 18954) (nil fontified nil 18952 . 18954) (18952 . 18954) 18951) nil (26473 30898 79705 275000) 0 nil] [nil nil ((nil rear-nonsticky nil 18954 . 18955) (nil fontified nil 18953 . 18955) (18953 . 18955) 18952) ((#("\\-" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 18953) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (nil rear-nonsticky t 18954 . 18955)) (26473 30896 656174 922000) 0 nil])
([nil nil ((19386 . 19388) (t 26473 30898 87472 258000)) nil (26473 30919 949379 477000) 0 nil])
nil
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -19388) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (19388 . 19389) (t 26473 30919 953264 311000)) nil (26473 30927 54034 606000) 0 nil])
([nil nil ((#("\\-" 0 2 (face font-lock-keyword-face fontified t)) . 19386) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -2) (undo-tree-id1476 . -2) (undo-tree-id1477 . -2) (undo-tree-id1478 . -2) (undo-tree-id1479 . -2) (undo-tree-id1480 . -2) (undo-tree-id1481 . -2) (undo-tree-id1482 . -2) (undo-tree-id1483 . -2) (undo-tree-id1484 . -2) (undo-tree-id1485 . -2) (undo-tree-id1486 . -2) (undo-tree-id1487 . -2) (undo-tree-id1488 . -2) (undo-tree-id1489 . -2) (undo-tree-id1490 . -2) (undo-tree-id1491 . -2) (undo-tree-id1492 . -2) (undo-tree-id1493 . -2) (undo-tree-id1494 . -2) (undo-tree-id1495 . -2) (undo-tree-id1496 . -2) (undo-tree-id1497 . -2) (undo-tree-id1498 . -2) (undo-tree-id1499 . -2) (undo-tree-id1500 . -2) (undo-tree-id1501 . -2) (undo-tree-id1502 . -2) (undo-tree-id1503 . -2) (undo-tree-id1504 . -2) (undo-tree-id1505 . -2) (undo-tree-id1506 . -2) (undo-tree-id1507 . -2) (undo-tree-id1508 . -2) (undo-tree-id1509 . -2) (undo-tree-id1510 . -2) (undo-tree-id1511 . -2) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) (undo-tree-id1514 . -2) (undo-tree-id1515 . -2) (undo-tree-id1516 . -2) (undo-tree-id1517 . -2) (undo-tree-id1518 . -2) (undo-tree-id1519 . -2) (undo-tree-id1520 . -2) (undo-tree-id1521 . -2) (undo-tree-id1522 . -2) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -2) 19387 (t 26473 30919 953264 311000)) nil (26473 30927 54097 233000) 0 nil])
([nil nil ((nil rear-nonsticky nil 19388 . 19389) (nil fontified nil 19387 . 19389) (19387 . 19389) 19386) nil (26473 30927 900096 464000) 0 nil] [nil nil ((nil rear-nonsticky nil 19389 . 19390) (nil fontified nil 19388 . 19390) (19388 . 19390) 19387) ((#("\\-" 0 1 (face font-lock-keyword-face fontified nil) 1 2 (face font-lock-keyword-face rear-nonsticky nil fontified nil)) . 19388) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (nil rear-nonsticky t 19389 . 19390)) (26473 30927 53975 45000) 0 nil])
([nil current ((814 . 819) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -814) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (806 . 815) (t 26474 22916 22024 826000)) nil (26474 23214 868638 835000) 0 nil])
nil
nil
