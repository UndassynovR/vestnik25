(undo-tree-save-format-version . 1)
"151c28bcdc04748e560818e9af08d59afcba4d7d"
[nil nil nil nil (26474 23268 429209 183000) 0 nil]
([nil nil ((nil rear-nonsticky nil 647 . 648) (nil fontified nil 635 . 648) (635 . 648) (t 26474 22916 24024 768000)) nil (26474 23268 429208 21000) 0 nil])
([nil nil ((53518 . 53519) 647) nil (26474 23268 429204 441000) 0 nil])
([nil nil ((709 . 710) (#("
" 0 1 (fontified t)) . -709) (undo-tree-id0 . -1) 647 (t 26474 23268 447821 916000)) nil (26474 23271 63048 811000) 0 nil])
([nil nil ((#("\\bfseries " 0 9 (face font-lock-keyword-face fontified t) 9 10 (face (bold) fontified t)) . 23) (undo-tree-id14 . -9) (t 26474 23271 88745 442000)) nil (26475 36873 670320 271000) 0 nil])
([nil nil (23) nil (26475 36873 670319 242000) 0 nil])
([nil nil ((31 . 43) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -31) (undo-tree-id12 . -1) (27 . 32) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -27) (undo-tree-id13 . -1) (22 . 28)) nil (26475 36873 670318 435000) 0 nil])
([nil nil ((nil rear-nonsticky nil 261 . 262) (nil fontified nil 42 . 262) (42 . 262) 41) nil (26475 36873 670314 469000) 0 nil])
([nil nil ((321 . 322) (#("
" 0 1 (fontified t)) . -321) (185 . 186) (#("
" 0 1 (fontified t)) . -185) (152 . 153) (#("
" 0 1 (fontified t)) . -152) (84 . 85) (#("
" 0 1 (fontified t)) . -84) 83) nil (26475 36873 670313 627000) 0 nil])
([nil nil ((#("\\textsuperscript{\\envelope }" 0 16 (face font-lock-keyword-face fontified t) 16 17 (fontified t) 17 26 (face font-lock-keyword-face fontified t) 26 28 (fontified t)) . 55) (undo-tree-id10 . -27) (undo-tree-id11 . -28)) nil (26475 36873 670312 744000) 0 nil])
([nil nil ((#("\\textsuperscript{1,3}" 0 16 (face font-lock-keyword-face fontified t) 16 21 (fontified t)) . 57) (undo-tree-id9 . -20)) nil (26475 36873 670311 240000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 69) (undo-tree-id7 . -18) (undo-tree-id8 . -19)) nil (26475 36873 670310 110000) 0 nil])
([nil nil ((#("\\textsuperscript{1,2}" 0 16 (face font-lock-keyword-face fontified t) 16 21 (fontified t)) . 85) (undo-tree-id6 . -20)) nil (26475 36873 670308 639000) 0 nil])
([nil nil ((#("\\textsuperscript{1}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t)) . 97) (undo-tree-id4 . -18) (undo-tree-id5 . -19)) nil (26475 36873 670307 352000) 0 nil])
([nil nil ((#("\\textsuperscript{,{\\bfseries 3}" 0 16 (face font-lock-keyword-face fontified t) 16 19 (fontified t) 19 28 (face font-lock-keyword-face fontified t) 28 30 (face (bold) fontified t) 30 31 (fontified t)) . 98) (undo-tree-id2 . -30) (undo-tree-id3 . -31)) nil (26475 36873 670305 407000) 0 nil])
([nil nil ((#("}}" 0 1 (fontified t) 1 2 (fontified t)) . 97) (undo-tree-id1 . -1)) nil (26475 36874 536184 712000) 0 nil])
([nil nil ((#("{\\bfseries " 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (face (bold) fontified t)) . 97)) ((97 . 108)) (26475 36883 815165 588000) 0 nil])
([nil nil ((nil rear-nonsticky nil 21 . 22) (#("
" 0 1 (fontified nil)) . -43) (21 . 44) (t 26475 36875 909687 12000)) nil (26475 36894 217709 474000) 0 nil] [nil nil ((nil rear-nonsticky nil 185 . 186) (#("
" 0 1 (fontified nil)) . -207) (185 . 208) 97 (t 26475 36875 909687 12000)) ((#("
\\begin{articleheader}
" 0 1 (rear-nonsticky nil fontified nil) 1 7 (face font-lock-keyword-face fontified nil) 7 8 (fontified nil latex-env-pair t) 8 21 (face font-lock-function-name-face fontified nil latex-env-pair t) 21 22 (fontified nil latex-env-pair t) 22 23 (fontified nil)) . 185) (undo-tree-id15 . -1) (undo-tree-id16 . -22) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (207 . 208) (nil rear-nonsticky t 185 . 186)) (26475 36883 814886 931000) 0 nil] [nil nil ((#("}" 0 1 (fontified t)) . 413)) ((413 . 414)) (26475 36873 670281 882000) 0 nil])
([nil nil ((nil rear-nonsticky nil 462 . 463) (#("
" 0 1 (fontified nil)) . -503) (462 . 504) 385) nil (26475 36894 217708 850000) 0 nil])
nil
nil
([nil nil ((#("
" 0 1 (fontified t)) . 504) (undo-tree-id21 . -1)) nil (26475 36894 217707 661000) 0 nil])
([nil nil ((nil rear-nonsticky nil 929 . 930) (#("
" 0 1 (fontified nil)) . -947) (929 . 948) 926) nil (26475 36894 217695 679000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3079 . 3080) (#("
" 0 1 (fontified nil)) . -3101) (3079 . 3102) (t 26475 36894 239154 572000)) nil (26475 36904 537805 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3412 . 3413) (#("
" 0 1 (fontified nil)) . -3453) (3412 . 3454)) nil (26475 36904 537803 977000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 3412) (undo-tree-id22 . -1)) nil (26475 36904 537803 201000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3766 . 3767) (#("
" 0 1 (fontified nil)) . -3784) (3766 . 3785) 3733) nil (26475 36904 537791 798000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6587 . 6588) (#("
" 0 1 (fontified nil)) . -6609) (6587 . 6610) (t 26475 36904 579854 185000)) nil (26475 36930 318498 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6937 . 6938) (#("
" 0 1 (fontified nil)) . -6978) (6937 . 6979) 6871) nil (26475 36930 318497 815000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6979)) nil (26475 36930 318497 48000) 0 nil])
([nil nil ((7053 . 7054) 7041) nil (26475 36930 318496 478000) 0 nil])
([nil nil ((7129 . 7130) 7117) nil (26475 36930 318496 28000) 0 nil])
([nil nil ((7213 . 7214) 7201) nil (26475 36930 318495 621000) 0 nil])
([nil nil ((7040 . 7041) (#("
" 0 1 (fontified t)) . -7040) 6979) nil (26475 36930 318495 91000) 0 nil])
([nil nil ((7116 . 7117) (#("
" 0 1 (fontified t)) . -7116) (undo-tree-id43 . -1) 7115) nil (26475 36930 318494 568000) 0 nil])
([nil nil ((7200 . 7201) (#("
" 0 1 (fontified t)) . -7200) 7192) nil (26475 36930 318493 457000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 7212)) nil (26475 36930 318492 949000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 7211)) nil (26475 36930 318492 580000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 7128)) nil (26475 36930 318492 217000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 7127)) nil (26475 36930 318491 859000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-warning-face fontified t)) . 7052) (undo-tree-id41 . -1) (undo-tree-id42 . -1)) nil (26475 36930 318491 311000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . 7051) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1)) nil (26475 36930 318489 210000) 0 nil])
([nil nil ((7216 . 7217) (#("
" 0 1 (fontified t)) . -7216) (undo-tree-id23 . -1) 7215) nil (26475 36930 318476 486000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7295 . 7296) (#("
" 0 1 (fontified nil)) . -7313) (7295 . 7314) 7216) nil (26475 36930 318465 369000) 0 nil])
([nil nil ((10160 . 10181) (22389 . 22405) (t 26475 36930 378104 757000)) nil (26475 37024 291794 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39906 . 39907) (nil fontified nil 39253 . 39907) (39253 . 39907) (#("% \\begin{longtable}[]{@{}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1061}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1212}}
%   >{\\raggedright\\arraybackslash}p{(\\columnwidth - 14\\tabcolsep) * \\real{0.1666}}@{}}
% \\toprule\\noalign{}
% \\begin{minipage}[b]{\\linewidth}\\raggedright
% Metrics
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% Decision Tree
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% Random Forest
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% XGBoost
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% DNN
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% LSTM
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% GRU
% \\end{minipage} & \\begin{minipage}[b]{\\linewidth}\\raggedright
% Proposed LSTM-GRU model
% \\end{minipage} \\\\
% \\midrule\\noalign{}
% \\endhead
% \\bottomrule\\noalign{}
% \\endlastfoot
% Ассurасy & 0.988 & 0.992 & 0.989 & 0.959 & 0.972 & 0.971 & 0.986 \\\\
% Рrесisiоn & 0.985 & 0.991 & 0.987 & 0.962 & 0.972 & 0.966 & 0.981 \\\\
% Rесаll & 0.991 & 0.993 & 0.991 & 0.957 & 0.972 & 0.976 & 0.989 \\\\
% F1-sсоrе & 0.988 & 0.992 & 0.989 & 0.960 & 0.972 & 0.971 & 0.985 \\\\
% \\end{longtable}" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 8 (fontified t face font-lock-comment-face) 8 14 (fontified t face font-lock-comment-face latex-env-pair t) 14 19 (face font-lock-comment-face latex-env-pair t fontified t) 19 26 (face font-lock-comment-face fontified t) 26 30 (face font-lock-comment-delimiter-face fontified t) 30 109 (face font-lock-comment-face fontified t) 109 113 (face font-lock-comment-delimiter-face fontified t) 113 192 (face font-lock-comment-face fontified t) 192 196 (face font-lock-comment-delimiter-face fontified t) 196 275 (face font-lock-comment-face fontified t) 275 279 (face font-lock-comment-delimiter-face fontified t) 279 358 (face font-lock-comment-face fontified t) 358 362 (face font-lock-comment-delimiter-face fontified t) 362 441 (face font-lock-comment-face fontified t) 441 445 (face font-lock-comment-delimiter-face fontified t) 445 524 (face font-lock-comment-face fontified t) 524 528 (face font-lock-comment-delimiter-face fontified t) 528 607 (face font-lock-comment-face fontified t) 607 611 (face font-lock-comment-delimiter-face fontified t) 611 694 (face font-lock-comment-face fontified t) 694 696 (face font-lock-comment-delimiter-face fontified t) 696 715 (face font-lock-comment-face fontified t) 715 717 (face font-lock-comment-delimiter-face fontified t) 717 723 (face font-lock-comment-face fontified t) 723 733 (face font-lock-comment-face latex-env-pair t fontified t) 733 761 (face font-lock-comment-face fontified t) 761 763 (face font-lock-comment-delimiter-face fontified t) 763 771 (face font-lock-comment-face fontified t) 771 773 (face font-lock-comment-delimiter-face fontified t) 773 777 (face font-lock-comment-face fontified t) 777 787 (face font-lock-comment-face latex-env-pair t fontified t) 787 796 (face font-lock-comment-face fontified t) 796 806 (face font-lock-comment-face latex-env-pair t fontified t) 806 834 (face font-lock-comment-face fontified t) 834 836 (face font-lock-comment-delimiter-face fontified t) 836 850 (face font-lock-comment-face fontified t) 850 852 (face font-lock-comment-delimiter-face fontified t) 852 856 (face font-lock-comment-face fontified t) 856 866 (face font-lock-comment-face latex-env-pair t fontified t) 866 875 (face font-lock-comment-face fontified t) 875 885 (face font-lock-comment-face latex-env-pair t fontified t) 885 913 (face font-lock-comment-face fontified t) 913 915 (face font-lock-comment-delimiter-face fontified t) 915 929 (face font-lock-comment-face fontified t) 929 931 (face font-lock-comment-delimiter-face fontified t) 931 935 (face font-lock-comment-face fontified t) 935 945 (face font-lock-comment-face latex-env-pair t fontified t) 945 954 (face font-lock-comment-face fontified t) 954 964 (face font-lock-comment-face latex-env-pair t fontified t) 964 992 (face font-lock-comment-face fontified t) 992 994 (face font-lock-comment-delimiter-face fontified t) 994 1002 (face font-lock-comment-face fontified t) 1002 1004 (face font-lock-comment-delimiter-face fontified t) 1004 1008 (face font-lock-comment-face fontified t) 1008 1018 (face font-lock-comment-face latex-env-pair t fontified t) 1018 1027 (face font-lock-comment-face fontified t) 1027 1037 (face font-lock-comment-face latex-env-pair t fontified t) 1037 1065 (face font-lock-comment-face fontified t) 1065 1067 (face font-lock-comment-delimiter-face fontified t) 1067 1071 (face font-lock-comment-face fontified t) 1071 1073 (face font-lock-comment-delimiter-face fontified t) 1073 1077 (face font-lock-comment-face fontified t) 1077 1087 (face font-lock-comment-face latex-env-pair t fontified t) 1087 1096 (face font-lock-comment-face fontified t) 1096 1106 (face font-lock-comment-face latex-env-pair t fontified t) 1106 1134 (face font-lock-comment-face fontified t) 1134 1136 (face font-lock-comment-delimiter-face fontified t) 1136 1141 (face font-lock-comment-face fontified t) 1141 1143 (face font-lock-comment-delimiter-face fontified t) 1143 1147 (face font-lock-comment-face fontified t) 1147 1157 (face font-lock-comment-face latex-env-pair t fontified t) 1157 1166 (face font-lock-comment-face fontified t) 1166 1176 (face font-lock-comment-face latex-env-pair t fontified t) 1176 1204 (face font-lock-comment-face fontified t) 1204 1206 (face font-lock-comment-delimiter-face fontified t) 1206 1210 (face font-lock-comment-face fontified t) 1210 1212 (face font-lock-comment-delimiter-face fontified t) 1212 1216 (face font-lock-comment-face fontified t) 1216 1226 (face font-lock-comment-face latex-env-pair t fontified t) 1226 1235 (face font-lock-comment-face fontified t) 1235 1245 (face font-lock-comment-face latex-env-pair t fontified t) 1245 1273 (face font-lock-comment-face fontified t) 1273 1275 (face font-lock-comment-delimiter-face fontified t) 1275 1299 (face font-lock-comment-face fontified t) 1299 1301 (face font-lock-comment-delimiter-face fontified t) 1301 1305 (face font-lock-comment-face fontified t) 1305 1315 (face font-lock-comment-face latex-env-pair t fontified t) 1315 1319 (face font-lock-comment-face fontified t) 1319 1321 (face font-lock-comment-delimiter-face fontified t) 1321 1340 (face font-lock-comment-face fontified t) 1340 1342 (face font-lock-comment-delimiter-face fontified t) 1342 1351 (face font-lock-comment-face fontified t) 1351 1353 (face font-lock-comment-delimiter-face fontified t) 1353 1375 (face font-lock-comment-face fontified t) 1375 1377 (face font-lock-comment-delimiter-face fontified t) 1377 1390 (face font-lock-comment-face fontified t) 1390 1392 (face font-lock-comment-delimiter-face fontified t) 1392 1460 (face font-lock-comment-face fontified t) 1460 1462 (face font-lock-comment-delimiter-face fontified t) 1462 1514 (face font-lock-comment-face fontified t) 1514 1531 (fontified t face font-lock-comment-face) 1531 1533 (face font-lock-comment-delimiter-face fontified t) 1533 1599 (face font-lock-comment-face fontified t) 1599 1601 (face font-lock-comment-delimiter-face fontified t) 1601 1669 (face font-lock-comment-face fontified t) 1669 1671 (face font-lock-comment-delimiter-face fontified t) 1671 1675 (face font-lock-comment-face fontified t) 1675 1686 (face font-lock-comment-face latex-env-pair t fontified t)) . 39253) (undo-tree-id117 . -109) (undo-tree-id118 . -1685) (undo-tree-id119 . -9) (undo-tree-id120 . -1678) (undo-tree-id121 . -1678) 40940 (t 26475 37024 356374 553000)) nil (26475 37089 739774 247000) 0 nil])
([nil nil ((39267 . 39268)) nil (26475 37089 739770 627000) 0 nil])
([nil nil ((#("{\\bfseries Table 1. The values of Malware classification}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 56 (face (bold) fontified t) 56 57 (fontified t)) . -39194) (undo-tree-id65 . -14) (undo-tree-id66 . -14) (undo-tree-id67 . -14) (undo-tree-id68 . -14) (undo-tree-id69 . -14) (undo-tree-id70 . -14) (undo-tree-id71 . -14) (undo-tree-id72 . -14) (undo-tree-id73 . -14) (undo-tree-id74 . -14) (undo-tree-id75 . -14) (undo-tree-id76 . -14) (undo-tree-id77 . -14) (undo-tree-id78 . -14) (undo-tree-id79 . -14) (undo-tree-id80 . -14) (undo-tree-id81 . -14) (undo-tree-id82 . -14) (undo-tree-id83 . -14) (undo-tree-id84 . -14) (undo-tree-id85 . -14) (undo-tree-id86 . -14) (undo-tree-id87 . -14) (undo-tree-id88 . -14) (undo-tree-id89 . -14) (undo-tree-id90 . -14) (undo-tree-id91 . -14) (undo-tree-id92 . -14) (undo-tree-id93 . -14) (undo-tree-id94 . -14) (undo-tree-id95 . -14) (undo-tree-id96 . -14) (undo-tree-id97 . -14) (undo-tree-id98 . -14) (undo-tree-id99 . -14) (undo-tree-id100 . -14) (undo-tree-id101 . -14) (undo-tree-id102 . -14) (undo-tree-id103 . -14) (undo-tree-id104 . -14) (undo-tree-id105 . -14) (undo-tree-id106 . -14) (undo-tree-id107 . -14) (undo-tree-id108 . -14) (undo-tree-id109 . -14) (undo-tree-id110 . -14) (undo-tree-id111 . -14) (undo-tree-id112 . -14) (undo-tree-id113 . -14) (undo-tree-id114 . -14) (undo-tree-id115 . -14) (undo-tree-id116 . -14) 39208) nil (26475 37089 739769 324000) 0 nil])
([nil nil ((39218 . 39223) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -39218) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (39213 . 39219) (39212 . 39213) 39196) nil (26475 37089 739736 917000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39267 . 39268) (nil fontified nil 39223 . 39268) (39223 . 39268) 39222) nil (26475 37089 739731 833000) 0 nil])
([nil nil ((39268 . 39269)) nil (26475 37089 739730 992000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39194) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1)) nil (26475 37089 739730 54000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39194) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1)) nil (26475 37089 739719 640000) 0 nil])
([nil nil ((39404 . 39416) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -39404) (undo-tree-id122 . -1) (39399 . 39405) (t 26475 37089 802473 88000)) nil (26475 37348 718917 208000) 0 nil])
([nil nil ((39416 . 39417)) nil (26475 37348 718907 655000) 0 nil])
([nil nil ((39440 . 39441)) nil (26475 37348 718903 414000) 0 nil])
([nil nil ((#("{\\bfseries Figure 2-Decision Tree}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 16 (face (bold) fontified t) 16 33 (fontified t face (bold)) 33 34 (fontified t)) . -27017) (undo-tree-id183 . -29) (undo-tree-id184 . -29) 27046 (t 26475 37348 777947 523000)) nil (26475 43924 795970 732000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27021 . 27022) (nil fontified nil 27000 . 27022) (27000 . 27022)) nil (26475 43924 795968 750000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27037) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1)) nil (26475 43924 795967 863000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27037) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1)) nil (26475 43924 795959 228000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27037)) nil (26475 43924 795952 119000) 0 nil])
([nil nil ((#("{\\bfseries Figure 3 - Random Forest}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 35 (face (bold) fontified t) 35 36 (fontified t)) . -27154) (undo-tree-id156 . -15) (undo-tree-id157 . -15) 27169) nil (26475 43924 795951 582000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27160 . 27161) (nil fontified nil 27137 . 27161) (27137 . 27161)) nil (26475 43924 795950 45000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27177) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1)) nil (26475 43924 795949 74000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27177) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1)) nil (26475 43924 795939 283000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27177)) nil (26475 43924 795915 913000) 0 nil])
([nil nil ((#("{\\bfseries Figure 4 - Dense neural network}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 42 (face (bold) fontified t) 42 43 (fontified t)) . -29061) (undo-tree-id471 . -17) (undo-tree-id472 . -17) 29078 (t 26475 43924 842116 22000)) nil (26475 43973 103716 431000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29074 . 29075) (nil fontified nil 29044 . 29075) (29044 . 29075)) nil (26475 43973 103715 84000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29090) (undo-tree-id470 . -1)) nil (26475 43973 103714 478000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29090) (undo-tree-id468 . -1) (undo-tree-id469 . -1)) nil (26475 43973 103713 380000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29090)) nil (26475 43973 103711 962000) 0 nil])
([nil nil ((#("{\\bfseries Figure 5 - Long short-term memory neural network}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 59 (face (bold) fontified t) 59 60 (fontified t)) . -32289) (undo-tree-id466 . -16) (undo-tree-id467 . -16) 32305) nil (26475 43973 103711 323000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32319 . 32320) (nil fontified nil 32272 . 32320) (32272 . 32320)) nil (26475 43973 103709 923000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32335) (undo-tree-id465 . -1)) nil (26475 43973 103709 418000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32335) (undo-tree-id463 . -1) (undo-tree-id464 . -1)) nil (26475 43973 103708 538000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32335)) nil (26475 43973 103707 163000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 32843)) nil (26475 43973 103706 831000) 0 nil])
([nil nil ((#("{\\bfseries Figure 6 - Gated recurrent unit neural network}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 57 (face (bold) fontified t) 57 58 (fontified t)) . -35323) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -7) (undo-tree-id378 . -7) (undo-tree-id379 . -7) (undo-tree-id380 . -7) (undo-tree-id381 . -7) (undo-tree-id382 . -8) (undo-tree-id383 . -8) (undo-tree-id384 . -8) (undo-tree-id385 . -8) (undo-tree-id386 . -8) (undo-tree-id387 . -9) (undo-tree-id388 . -9) (undo-tree-id389 . -9) (undo-tree-id390 . -9) (undo-tree-id391 . -9) (undo-tree-id392 . -10) (undo-tree-id393 . -10) (undo-tree-id394 . -10) (undo-tree-id395 . -10) (undo-tree-id396 . -10) (undo-tree-id397 . -11) (undo-tree-id398 . -11) (undo-tree-id399 . -11) (undo-tree-id400 . -11) (undo-tree-id401 . -11) (undo-tree-id402 . -12) (undo-tree-id403 . -12) (undo-tree-id404 . -12) (undo-tree-id405 . -12) (undo-tree-id406 . -12) (undo-tree-id407 . -13) (undo-tree-id408 . -13) (undo-tree-id409 . -13) (undo-tree-id410 . -13) (undo-tree-id411 . -13) (undo-tree-id412 . -14) (undo-tree-id413 . -14) (undo-tree-id414 . -14) (undo-tree-id415 . -14) (undo-tree-id416 . -14) (undo-tree-id417 . -15) (undo-tree-id418 . -15) (undo-tree-id419 . -15) (undo-tree-id420 . -15) (undo-tree-id421 . -15) (undo-tree-id422 . -16) (undo-tree-id423 . -16) (undo-tree-id424 . -16) (undo-tree-id425 . -16) (undo-tree-id426 . -16) (undo-tree-id427 . -16) (undo-tree-id428 . -16) (undo-tree-id429 . -16) (undo-tree-id430 . -16) (undo-tree-id431 . -16) (undo-tree-id432 . -16) (undo-tree-id433 . -16) (undo-tree-id434 . -16) (undo-tree-id435 . -16) (undo-tree-id436 . -16) (undo-tree-id437 . -16) (undo-tree-id438 . -16) (undo-tree-id439 . -16) (undo-tree-id440 . -16) (undo-tree-id441 . -16) (undo-tree-id442 . -16) (undo-tree-id443 . -16) (undo-tree-id444 . -16) (undo-tree-id445 . -16) (undo-tree-id446 . -16) (undo-tree-id447 . -16) (undo-tree-id448 . -16) (undo-tree-id449 . -16) (undo-tree-id450 . -16) (undo-tree-id451 . -16) (undo-tree-id452 . -16) (undo-tree-id453 . -16) (undo-tree-id454 . -16) (undo-tree-id455 . -16) (undo-tree-id456 . -16) (undo-tree-id457 . -16) (undo-tree-id458 . -16) (undo-tree-id459 . -16) (undo-tree-id460 . -16) (undo-tree-id461 . -16) (undo-tree-id462 . -16) 35339) nil (26475 43973 103705 164000) 0 nil])
([nil nil ((nil rear-nonsticky nil 35351 . 35352) (nil fontified nil 35306 . 35352) (35306 . 35352)) nil (26475 43973 103660 73000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35367) (undo-tree-id371 . -1)) nil (26475 43973 103659 427000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35367) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1)) nil (26475 43973 103657 331000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35367)) nil (26475 43973 103599 530000) 0 nil])
([nil nil ((#("{\\bfseries Figure 7 - LSTM-GRU neural network}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 45 (face (bold) fontified t) 45 46 (fontified t)) . -36874) (undo-tree-id235 . -45) (undo-tree-id236 . -45) (undo-tree-id237 . -45) (undo-tree-id238 . -45) (undo-tree-id239 . -45) (undo-tree-id240 . -45) (undo-tree-id241 . -45) (undo-tree-id242 . -45) (undo-tree-id243 . -45) (undo-tree-id244 . -45) (undo-tree-id245 . -44) (undo-tree-id246 . -44) (undo-tree-id247 . -44) (undo-tree-id248 . -44) (undo-tree-id249 . -44) (undo-tree-id250 . -44) (undo-tree-id251 . -44) (undo-tree-id252 . -44) (undo-tree-id253 . -44) (undo-tree-id254 . -44) (undo-tree-id255 . -44) (undo-tree-id256 . -44) (undo-tree-id257 . -44) (undo-tree-id258 . -44) (undo-tree-id259 . -44) (undo-tree-id260 . -44) (undo-tree-id261 . -44) (undo-tree-id262 . -44) (undo-tree-id263 . -44) (undo-tree-id264 . -44) (undo-tree-id265 . -44) (undo-tree-id266 . -44) (undo-tree-id267 . -44) (undo-tree-id268 . -44) (undo-tree-id269 . -44) (undo-tree-id270 . -44) (undo-tree-id271 . -44) (undo-tree-id272 . -44) (undo-tree-id273 . -44) (undo-tree-id274 . -44) (undo-tree-id275 . -44) (undo-tree-id276 . -44) (undo-tree-id277 . -44) (undo-tree-id278 . -44) (undo-tree-id279 . -44) (undo-tree-id280 . -44) 36918) nil (26475 43973 103598 361000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36890 . 36891) (nil fontified nil 36857 . 36891) (36857 . 36891)) nil (26475 43973 103545 327000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 36906) (undo-tree-id234 . -1)) nil (26475 43973 103544 805000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 36906) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1)) nil (26475 43973 103543 88000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 36906)) nil (26475 43973 103519 311000) 0 nil])
([nil nil ((#("{\\bfseries Figure 7-Histograms and an AUC-ROC curve}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 51 (face (bold) fontified t) 51 52 (fontified t)) . -39952) (undo-tree-id187 . -16) (undo-tree-id188 . -16) 39968) nil (26475 43973 103518 789000) 0 nil])
([nil nil ((nil rear-nonsticky nil 39974 . 39975) (nil fontified nil 39935 . 39975) (39935 . 39975)) nil (26475 43973 103517 129000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39991) (undo-tree-id185 . -1) (undo-tree-id186 . -1)) nil (26475 43973 103516 239000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39991)) nil (26475 43973 103506 726000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 39991)) nil (26475 43973 103506 75000) 0 nil])
([nil nil ((39991 . 40012) (42952 . 42968)) nil (26475 43973 103505 384000) 0 nil])
([nil nil ((42990 . 43005) (43013 . 43026)) nil (26475 43973 103501 543000) 0 nil])
([nil nil ((#("{\\bfseries Figure 1-Class balancing with Random oversampling}" 0 1 (fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 60 (face (bold) fontified t) 60 61 (fontified t)) . -24861) (undo-tree-id503 . -24) (undo-tree-id504 . -24) 24885 (t 26475 43973 146718 761000)) nil (26475 44086 114861 523000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24892 . 24893) (nil fontified nil 24844 . 24893) (24844 . 24893)) nil (26475 44086 114859 618000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24908) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1)) nil (26475 44086 114858 820000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24908) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1)) nil (26475 44086 114849 145000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 24908) (undo-tree-id473 . -1)) nil (26475 44086 114836 857000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -24801) (t 26475 44086 148449 988000) (24802 . 24803) 24801 (t 26475 44086 148449 988000)) nil (26475 44099 766739 703000) 0 nil])
([nil nil ((nil fontified t 24801 . 24802) (#("7" 0 1 (fontified t)) . -24801) (24802 . 24803) 24801) nil (26475 44099 766735 3000) 0 nil])
([nil nil ((26942 . 26943) (#("8" 0 1 (fontified t)) . 26942) (undo-tree-id505 . -1) (t 26475 44099 789055 401000)) nil (26475 44143 248072 324000) 0 nil])
([nil nil ((27079 . 27080) (#("8" 0 1 (fontified t)) . 27079) (t 26475 44143 277797 372000)) nil (26475 44148 825738 459000) 0 nil])
([nil nil ((nil fontified t 24801 . 24802) (t 26475 44148 860635 872000) (#("6" 0 1 (fontified t)) . -24801) (t 26475 44148 860635 872000) (24802 . 24803) 24801 (t 26475 44148 860635 872000)) nil (26475 44203 25676 116000) 0 nil])
([nil nil ((50288 . 50307) (52802 . 52819) 50288 (t 26475 44203 58066 248000)) nil (26477 3546 593214 784000) 0 nil])
([nil nil ((nil rear-nonsticky nil 50318 . 50319) (nil fontified nil 50307 . 50319) (50307 . 50319)) nil (26477 3546 593288 655000) 0 nil])
([nil nil ((nil rear-nonsticky nil 51655 . 51656) (nil fontified nil 51644 . 51656) (51644 . 51656)) nil (26477 3547 858607 381000) 0 nil] [nil nil ((nil rear-nonsticky nil 51655 . 51656) (nil fontified nil 51644 . 51656) (51644 . 51656)) ((#("\\hspace{1em}" 0 7 (face font-lock-keyword-face fontified nil) 7 11 (fontified nil) 11 12 (fontified nil rear-nonsticky nil)) . 51644) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -11) (undo-tree-id3 . -11) (nil rear-nonsticky t 51655 . 51656)) (26477 3546 593209 695000) 0 nil])
([nil nil ((43027 . 43046) (50287 . 50304) 43027 (t 26477 3547 911287 495000)) nil (26477 3570 435451 835000) 0 nil])
nil
([nil nil ((22468 . 22472) (#("i" 0 1 (fontified nil)) . -22468) (undo-tree-id0 . -1) (22465 . 22469) (#("-" 0 1 (fontified t)) . -22465) (undo-tree-id1 . -1) 22466 (22458 . 22466) (#("m" 0 1 (face (subscript) display (raise -0.2) fontified t)) . -22458) (undo-tree-id2 . -1) 22459 (22451 . 22459) (#("i" 0 1 (fontified nil)) . -22451) (undo-tree-id3 . -1) (22446 . 22452) (22427 . 22446) (#("y" 0 1 (fontified t)) . -22427) (undo-tree-id4 . -1) 22428 (22427 . 22428) (22426 . 22427) (t 26477 28463 308887 433000) 22426) nil (26477 30370 453168 727000) 0 nil])
([nil nil ((22427 . 22444) (22473 . 22488)) nil (26477 30370 453148 750000) 0 nil])
([nil nil ((22489 . 22490) (t 26477 30370 458400 919000)) nil (26477 30389 823814 907000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image28}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 22506) (undo-tree-id5 . -113) (undo-tree-id6 . -16) (undo-tree-id7 . -113) (undo-tree-id8 . -16) (undo-tree-id9 . -16) (undo-tree-id10 . -16) (undo-tree-id11 . -16) (undo-tree-id12 . -16) (undo-tree-id13 . -16) (undo-tree-id14 . -16) (undo-tree-id15 . -16) (undo-tree-id16 . -16) (undo-tree-id17 . -16) (undo-tree-id18 . -16) (undo-tree-id19 . -16) (undo-tree-id20 . -16) (undo-tree-id21 . -16) (undo-tree-id22 . -16) (undo-tree-id23 . -16) (undo-tree-id24 . -16) (undo-tree-id25 . -16) (undo-tree-id26 . -16) (undo-tree-id27 . -16) (undo-tree-id28 . -16) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . -16) (undo-tree-id33 . -16) (undo-tree-id34 . -16) (undo-tree-id35 . -16) (undo-tree-id36 . -16) (undo-tree-id37 . -16) (undo-tree-id38 . -16) (undo-tree-id39 . -16) (undo-tree-id40 . -16) (undo-tree-id41 . -16) (undo-tree-id42 . -16) (undo-tree-id43 . -16) (undo-tree-id44 . -16) (undo-tree-id45 . -29) (undo-tree-id46 . -29) (undo-tree-id47 . -29) (undo-tree-id48 . -29) (undo-tree-id49 . -29) (undo-tree-id50 . -29) (undo-tree-id51 . -29) (undo-tree-id52 . -29) (undo-tree-id53 . -29) (undo-tree-id54 . -29) (undo-tree-id55 . -29) (undo-tree-id56 . -29) (undo-tree-id57 . -29) (undo-tree-id58 . -29) (undo-tree-id59 . -29) (undo-tree-id60 . -29) (undo-tree-id61 . -29) (undo-tree-id62 . -43) (undo-tree-id63 . -43) (undo-tree-id64 . -43) (undo-tree-id65 . -43) (undo-tree-id66 . -43) (undo-tree-id67 . -43) (undo-tree-id68 . -100) (undo-tree-id69 . -100) (undo-tree-id70 . -100) (undo-tree-id71 . -100) (undo-tree-id72 . -100) (undo-tree-id73 . -100) (undo-tree-id74 . -101) (undo-tree-id75 . -113) (undo-tree-id76 . -113) (undo-tree-id77 . -113) (undo-tree-id78 . -113) (undo-tree-id79 . -113) (undo-tree-id80 . -113) (undo-tree-id81 . -113) (undo-tree-id82 . -113) (undo-tree-id83 . -113) (undo-tree-id84 . -113) (undo-tree-id85 . -113) (undo-tree-id86 . -113) (undo-tree-id87 . -113) (undo-tree-id88 . -113) (undo-tree-id89 . -113) (undo-tree-id90 . -113) (undo-tree-id91 . -113) (undo-tree-id92 . -113) (undo-tree-id93 . -113) (undo-tree-id94 . -113) (undo-tree-id95 . -113) (undo-tree-id96 . -113) (undo-tree-id97 . -113) (undo-tree-id98 . -113) (undo-tree-id99 . -16) (undo-tree-id100 . -113) (undo-tree-id101 . -113) (undo-tree-id102 . -113) (undo-tree-id103 . -113) (undo-tree-id104 . -114) (undo-tree-id105 . -113) 22619) nil (26477 30389 823810 879000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image29}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image30}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 22508) (undo-tree-id124 . -216) (undo-tree-id125 . -216) (undo-tree-id126 . -228) (undo-tree-id127 . -216) 22724 (t 26477 30389 831195 83000)) nil (26477 30454 345377 456000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image31}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image32}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 22529) (undo-tree-id120 . -216) (undo-tree-id121 . -216) (undo-tree-id122 . -228) (undo-tree-id123 . -216) 22745) nil (26477 30454 345375 914000) 0 nil])
([nil nil ((22528 . 22529) (#("
" 0 1 (fontified t)) . -22528) (undo-tree-id111 . 1) (#("
" 0 1 (fontified t)) . -22528) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) 22509) nil (26477 30454 345373 730000) 0 nil])
([nil nil ((22547 . 22549) (22545 . 22547) (22544 . 22545) (#("i" 0 1 (fontified nil)) . -22544) (undo-tree-id106 . -1) (22529 . 22545) (#("i" 0 1 (fontified nil)) . -22529) (undo-tree-id107 . -1) (22527 . 22530) (#("i" 0 1 (fontified nil)) . -22527) (undo-tree-id108 . -1) (22525 . 22528) (#("i" 0 1 (fontified nil)) . -22525) (undo-tree-id109 . -1) (22524 . 22526) (22519 . 22524) (#("i" 0 1 (fontified nil)) . -22519) (undo-tree-id110 . -1) (22515 . 22520) (22509 . 22515)) nil (26477 30454 345368 59000) 0 nil])
([nil nil ((22538 . 22539)) nil (26477 30454 345355 165000) 0 nil])
([nil nil ((#("$" 0 1 (face tex-math fontified t)) . -22597) (undo-tree-id128 . -1) 22598 (22591 . 22598) (22587 . 22591) (#("i" 0 1 (fontified nil)) . -22587) (undo-tree-id129 . -1) (22579 . 22588) (#("i" 0 1 (fontified nil)) . -22579) (undo-tree-id130 . -1) (22570 . 22580) (t 26477 30454 349509 294000)) nil (26477 30491 287504 896000) 0 nil])
([nil nil ((22578 . 22579)) nil (26477 30491 287494 487000) 0 nil])
([nil nil ((22602 . 22613) (22598 . 22602)) nil (26477 30491 287490 439000) 0 nil])
([nil nil ((22613 . 22617) (#("i" 0 1 (fontified nil)) . -22613) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (22612 . 22614) (#("i" 0 1 (fontified t)) . -22612) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 22613 (22612 . 22613) (t 26477 30491 295116 446000) (#("i" 0 1 (face tex-math fontified nil)) . -22612) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (22612 . 22613) (t 26477 30491 295116 446000)) nil (26477 30497 193963 128000) 0 nil])
([nil nil ((23120 . 23124) (23108 . 23120) (23099 . 23108) (23095 . 23099) (#("@" 0 1 (fontified t)) . -23095) (undo-tree-id181 . -1) 23096 (23094 . 23096) (#("{" 0 1 (fontified t)) . -23094) (undo-tree-id182 . -1) 23095 (23094 . 23095) (23094 . 23095) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image33}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 23094) (undo-tree-id183 . -113) (undo-tree-id184 . -16) (undo-tree-id185 . -113) (undo-tree-id186 . -113) (undo-tree-id187 . -113) 23207 (t 26477 30497 202053 626000)) nil (26477 30559 967229 207000) 0 nil])
([nil nil ((23094 . 23111) (23125 . 23140)) nil (26477 30612 52795 662000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image34}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 23159) (undo-tree-id342 . -113) (undo-tree-id343 . -16) (undo-tree-id344 . -113) (undo-tree-id345 . -113) (undo-tree-id346 . -113) (undo-tree-id347 . -113) 23272 (t 26477 30612 611825 638000)) nil (26477 30640 319629 983000) 0 nil] [nil nil ((23139 . 23140) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 23139) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (t 26477 30559 971385 859000)) ((23139 . 23140) (#("i" 0 1 (face (subscript) display (raise -0.2) fontified t)) . 23139) (t 26477 30600 287956 817000)) (26477 30600 283503 608000) 0 nil])
([nil nil ((23171 . 23174) (#("i" 0 1 (fontified nil)) . -23171) (undo-tree-id341 . -1) (23166 . 23172) (23159 . 23166)) nil (26477 30640 319626 576000) 0 nil])
nil
([nil nil ((23173 . 23174) (#(" " 0 1 (fontified nil)) . 23173) (#("
" 0 1 (fontified t)) . -23174) (undo-tree-id339 . 1) (undo-tree-id340 . 1) 23173) nil (26477 30640 319625 54000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image35}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image36}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t) 114 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 148 (face font-lock-keyword-face fontified t) 148 158 (face font-lock-keyword-face fontified t) 158 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 173 (face font-lock-keyword-face fontified t) 173 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 203 (fontified t) 203 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 23198) (undo-tree-id334 . -228) (undo-tree-id335 . -13) (undo-tree-id336 . -228) (undo-tree-id337 . -228) (undo-tree-id338 . -228) 23426) nil (26477 30640 319622 499000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image37}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 39 (face font-lock-keyword-face fontified t) 39 40 (face font-lock-keyword-face fontified t) 40 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 23217) (undo-tree-id330 . -101) (undo-tree-id331 . -101) (undo-tree-id332 . -113) (undo-tree-id333 . -101) 23318) nil (26477 30640 319617 509000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23243 . 23244) (nil fontified nil 23197 . 23244) (23197 . 23244) 23196 (t 26477 30640 324530 585000)) nil (26477 30673 688169 355000) 0 nil])
([nil nil ((23197 . 23198)) nil (26477 30673 688168 503000) 0 nil])
([nil nil ((#("computed as (3):
" 0 17 (fontified t)) . 23247) (undo-tree-id377 . -16) (undo-tree-id378 . -16) (undo-tree-id379 . -16) (undo-tree-id380 . -16) (undo-tree-id381 . -16) (undo-tree-id382 . -16) (undo-tree-id383 . -15) 23262) nil (26477 30673 688168 12000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 23246) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1)) nil (26477 30673 688164 636000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -23204) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (23202 . 23205) (#("}" 0 1 (fontified t)) . -23202) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) 23203 (23198 . 23203)) nil (26477 30673 688159 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23236 . 23237) (nil fontified nil 23231 . 23237) (23231 . 23237) 23230 (t 26477 30673 696175 211000)) nil (26477 30681 504275 856000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 23236) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1)) nil (26477 30681 504272 89000) 0 nil])
([nil nil ((23261 . 23277) (23258 . 23261) (t 26477 30681 509092 1000)) nil (26477 30718 775744 617000) 0 nil])
([nil nil ((23271 . 23272)) nil (26477 30718 775744 276000) 0 nil])
([nil nil ((23278 . 23298)) nil (26477 30718 775744 116000) 0 nil])
([nil nil ((23298 . 23307)) nil (26477 30718 775743 905000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-keyword-face fontified t)) . -23306) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) 23307) nil (26477 30718 775743 94000) 0 nil])
([nil nil ((23306 . 23313)) nil (26477 30718 775724 619000) 0 nil])
([nil nil ((23258 . 23275) (23314 . 23329) (t 26477 30718 783694 932000)) nil (26477 30720 527939 90000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23369 . 23370) (nil fontified nil 23258 . 23370) (23258 . 23370) (#("\\begin{equation}
U_j=\\frac{row\\_total\\cross column\\_total}{grand\\_total}
\\end{equation}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 15 (face font-lock-function-name-face latex-env-pair t fontified t) 15 16 (latex-env-pair t fontified t) 16 17 (fontified t) 17 19 (fontified t) 19 20 (face (subscript) fontified t display (raise -0.2)) 20 21 (fontified t) 21 26 (face font-lock-keyword-face fontified t) 26 30 (fontified t) 30 32 (face font-lock-keyword-face fontified t) 32 33 (fontified t display nil) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 50 (fontified t) 50 52 (face font-lock-keyword-face fontified t) 52 64 (fontified t) 64 66 (face font-lock-keyword-face fontified t) 66 72 (fontified t) 72 73 (fontified t) 73 77 (face font-lock-keyword-face fontified t) 77 78 (fontified t latex-env-pair t) 78 86 (face font-lock-function-name-face fontified t latex-env-pair t) 86 87 (fontified t latex-env-pair t) 87 88 (fontified t)) . 23258) (undo-tree-id423 . -88) (undo-tree-id424 . 16) (undo-tree-id425 . -15) (undo-tree-id426 . -87) (undo-tree-id427 . -87) (undo-tree-id428 . -15) (undo-tree-id429 . -87) (undo-tree-id430 . -73) (undo-tree-id431 . -87) (undo-tree-id432 . -87) (undo-tree-id433 . -87) (undo-tree-id434 . -87) (undo-tree-id435 . -87) (undo-tree-id436 . -87) (undo-tree-id437 . -87) (undo-tree-id438 . -87) (undo-tree-id439 . -71) (undo-tree-id440 . -87) (undo-tree-id441 . -87) (undo-tree-id442 . -87) (undo-tree-id443 . -88) (undo-tree-id444 . -88) 23346 (t 26477 30720 532676 297000)) nil (26477 30783 770375 899000) 0 nil])
([nil nil ((#("times" 0 5 (face font-lock-keyword-face fontified t)) . 23306) (undo-tree-id445 . -4) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (t 26477 30783 777002 316000)) nil (26477 30803 26473 469000) 0 nil])
([nil nil ((23306 . 23311)) nil (26477 30803 26461 96000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-keyword-face fontified t)) . -23306) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -23307) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (#("o" 0 1 (face font-lock-keyword-face fontified t)) . -23308) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -23309) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -23310) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) 23311 (t 26477 30803 31797 72000)) nil (26477 30838 574250 118000) 0 nil])
([nil nil ((23306 . 23312)) nil (26477 30838 573891 378000) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-keyword-face fontified t)) . -23307) (undo-tree-id1685 . -1) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -23308) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -23309) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -23310) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (#("r" 0 1 (face font-lock-keyword-face fontified t)) . -23311) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) 23312 (t 26477 30838 581418 34000)) nil (26477 30957 685550 95000) 0 nil])
([nil nil ((23307 . 23308)) nil (26477 30957 685365 149000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-keyword-face fontified t)) . -23306) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (#("t" 0 1 (face font-lock-keyword-face fontified t)) . -23307) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (undo-tree-id1684 . -1) 23308) nil (26477 30957 685362 193000) 0 nil])
([nil nil ((23307 . 23311) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -23307) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (23306 . 23308)) nil (26477 30957 685204 890000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22507) (t 26477 30957 694147 257000)) nil (26477 30987 866377 901000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 22507)) nil (26477 30987 866447 320000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (latex-env-pair t fontified t) 5 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 16 (fontified t)) . 22410) (undo-tree-id2325 . -15)) nil (26477 30994 351706 640000) 0 nil] [nil nil ((22507 . 22528) (23091 . 23107)) ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 23091) (undo-tree-id2324 . 16) (#("\\begin{multicols}{2}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 16 (face font-lock-function-name-face latex-env-pair t fontified t) 16 17 (latex-env-pair t fontified t) 17 21 (fontified t)) . 22507)) (26477 30987 866372 481000) 0 nil])
([nil nil ((nil rear-nonsticky nil 23978 . 23979) (#("
" 0 1 (fontified nil)) . -23994) (23978 . 23995) 23926) nil (26477 30994 351695 329000) 0 nil])
nil
([nil nil ((24160 . 24181) (26136 . 26152) (t 26477 30994 356755 906000)) nil (26477 31083 860503 257000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image41}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image42}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 219 (face font-lock-keyword-face fontified t) 219 220 (fontified t face font-lock-keyword-face) 220 221 (fontified t latex-env-pair t) 221 227 (fontified t face font-lock-function-name-face latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 27438) (undo-tree-id2433 . -216) (undo-tree-id2434 . -216) (undo-tree-id2435 . -228) (undo-tree-id2436 . -216) 27654) nil (26477 31187 966716 274000) 0 nil] [nil nil ((#("
XGBoost {[}14{]} is a very strong machine-learning algorithm widely used
in the classification task. It lies in a series of boosting algorithms
that combine the predictions of multiple learners. XGBoost is known for
its efficiency and high performance. Employing an ensemble approach
corrects the errors made in previous iterations through the next model.
During each step, the deviations of the ensemble's predictions are
assessed on the training data, and the model is optimized by introducing
new tree forecasts to reduce the overall deviation. This process
continues until the desired error threshold is met or an early stopping
condition is triggered.

A Dense neural network (DNN) {[}15{]} is a fundamental type of neural
network in which each neuron in one layer is connected to every neuron
in the subsequent layer. It is the simplest architecture in neural
networks, typically used as the basic one in deep learning. In this
architecture, the input layer receives the input data
" 0 590 (fontified t) 590 634 (fontified t) 634 797 (fontified t) 797 800 (fontified t) 800 854 (fontified t) 854 867 (fontified t) 867 989 (fontified t)) . 26449) (undo-tree-id2326 . -935) (undo-tree-id2327 . -935) (undo-tree-id2328 . -988) (undo-tree-id2329 . -935) 27384 (t 26477 31011 271575 304000)) ((26449 . 27438)) (26477 31083 483390 155000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image43}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 27458) (undo-tree-id2429 . -101) (undo-tree-id2430 . -101) (undo-tree-id2431 . -113) (undo-tree-id2432 . -101) 27559) nil (26477 31187 966714 711000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26156 . 26157) (#("
" 0 1 (fontified nil)) . -27145) (26156 . 27146) 26104) ((#("

XGBoost {[}14{]} is a very strong machine-learning algorithm widely used
in the classification task. It lies in a series of boosting algorithms
that combine the predictions of multiple learners. XGBoost is known for
its efficiency and high performance. Employing an ensemble approach
corrects the errors made in previous iterations through the next model.
During each step, the deviations of the ensemble's predictions are
assessed on the training data, and the model is optimized by introducing
new tree forecasts to reduce the overall deviation. This process
continues until the desired error threshold is met or an early stopping
condition is triggered.

A Dense neural network (DNN) {[}15{]} is a fundamental type of neural
network in which each neuron in one layer is connected to every neuron
in the subsequent layer. It is the simplest architecture in neural
networks, typically used as the basic one in deep learning. In this
architecture, the input layer receives the input data
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 591 (fontified t) 591 635 (fontified t) 635 798 (fontified t) 798 801 (fontified t) 801 855 (fontified t) 855 868 (fontified t) 868 936 (fontified t) 936 989 (fontified nil) 989 990 (fontified nil)) . 26156) (undo-tree-id2330 . -498) (undo-tree-id2331 . -1) (undo-tree-id2332 . -989) (undo-tree-id2333 . -989) (undo-tree-id2334 . -989) (undo-tree-id2335 . -989) (undo-tree-id2336 . -989) (undo-tree-id2337 . -989) (undo-tree-id2338 . -989) (undo-tree-id2339 . -989) (undo-tree-id2340 . -989) (undo-tree-id2341 . -989) (undo-tree-id2342 . -989) (undo-tree-id2343 . -989) (undo-tree-id2344 . -989) (undo-tree-id2345 . -989) (undo-tree-id2346 . -989) (undo-tree-id2347 . -989) (undo-tree-id2348 . -989) (undo-tree-id2349 . -989) (undo-tree-id2350 . -989) (undo-tree-id2351 . -989) (undo-tree-id2352 . -989) (undo-tree-id2353 . -989) (undo-tree-id2354 . -989) (undo-tree-id2355 . -989) (undo-tree-id2356 . -989) (undo-tree-id2357 . -989) (undo-tree-id2358 . -989) (undo-tree-id2359 . -989) (undo-tree-id2360 . -989) (undo-tree-id2361 . -989) (undo-tree-id2362 . -989) (undo-tree-id2363 . -989) (undo-tree-id2364 . -989) (undo-tree-id2365 . -989) (undo-tree-id2366 . -989) (undo-tree-id2367 . -989) (undo-tree-id2368 . -989) (undo-tree-id2369 . -989) (undo-tree-id2370 . -989) (undo-tree-id2371 . -989) (undo-tree-id2372 . -989) (undo-tree-id2373 . -989) (undo-tree-id2374 . -989) (undo-tree-id2375 . -989) (undo-tree-id2376 . -989) (undo-tree-id2377 . -989) (undo-tree-id2378 . -989) (undo-tree-id2379 . -989) (undo-tree-id2380 . -989) (undo-tree-id2381 . -989) (undo-tree-id2382 . -989) (undo-tree-id2383 . -989) (undo-tree-id2384 . -1) (27145 . 27146) (nil rear-nonsticky t 26156 . 26157) (t 26477 31053 919119 932000)) (26477 31053 913190 284000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -27502) (undo-tree-id2419 . -1) (#("o" 0 1 (fontified t)) . -27503) (undo-tree-id2420 . -1) (#("f" 0 1 (fontified t)) . -27504) (undo-tree-id2421 . -1) (#(" " 0 1 (fontified t)) . -27505) (undo-tree-id2422 . -1) 27506 (27497 . 27506) (#("i" 0 1 (fontified nil)) . -27497) (undo-tree-id2423 . -1) (27486 . 27498) (27476 . 27486) (27466 . 27476) (#("w" 0 1 (fontified t)) . -27466) (undo-tree-id2424 . -1) 27467 (27460 . 27467) (#(" " 0 1 (fontified t)) . -27460) (undo-tree-id2425 . -1) (#("a" 0 1 (fontified t)) . -27461) (undo-tree-id2426 . -1) (#("n" 0 1 (fontified t)) . -27462) (undo-tree-id2427 . -1) (#("d" 0 1 (fontified t)) . -27463) (undo-tree-id2428 . -1) 27464 (27459 . 27464) (27441 . 27459) (27437 . 27441)) nil (26477 31187 966712 186000) 0 nil])
nil
([nil nil ((27502 . 27503) (#("
" 0 1 (fontified t)) . -27502) (undo-tree-id2417 . 1) (#("
" 0 1 (fontified t)) . -27502) (undo-tree-id2418 . 1) 27501) nil (26477 31187 966705 374000) 0 nil])
([nil nil ((27521 . 27522)) nil (26477 31187 966704 101000) 0 nil])
([nil nil ((nil rear-nonsticky nil 27541 . 27542) (nil fontified nil 27522 . 27542) (27522 . 27542) 27521) nil (26477 31187 966703 310000) 0 nil])
([nil nil ((27523 . 27524) (#("w" 0 1 (face tex-math fontified t)) . 27523) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1)) nil (26477 31187 966702 488000) 0 nil])
([nil nil ((27527 . 27528) (#("w" 0 1 (face tex-math fontified t)) . 27527)) nil (26477 31187 966699 72000) 0 nil])
([nil nil ((27538 . 27539) (#("w" 0 1 (face tex-math fontified t)) . 27538) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1)) nil (26477 31187 966695 134000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 27543) (undo-tree-id2437 . -1) (t 26477 31187 974687 538000)) nil (26477 31239 47219 152000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.6\\textwidth]{media/ict/image40}
	\\caption*{Figure 3 - Random Forest}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 126 (fontified t) 126 130 (face font-lock-keyword-face fontified t) 130 131 (fontified t latex-env-pair t) 131 137 (face font-lock-function-name-face fontified t latex-env-pair t) 137 138 (fontified t latex-env-pair t) 138 139 (fontified t)) . 26310) (undo-tree-id2616 . -126) (undo-tree-id2617 . -126) (undo-tree-id2618 . -138) (undo-tree-id2619 . -139) (undo-tree-id2620 . -139) (undo-tree-id2621 . -126) 26436) nil (26477 31245 38953 139000) 0 nil] [nil nil ((#("
XGBoost {[}14{]} is a very strong machine-learning algorithm widely used
in the classification task. It lies in a series of boosting algorithms
that combine the predictions of multiple learners. XGBoost is known for
its efficiency and high performance. Employing an ensemble approach
corrects the errors made in previous iterations through the next model.
During each step, the deviations of the ensemble's predictions are
assessed on the training data, and the model is optimized by introducing
new tree forecasts to reduce the overall deviation. This process
continues until the desired error threshold is met or an early stopping
condition is triggered.

A Dense neural network (DNN) {[}15{]} is a fundamental type of neural
network in which each neuron in one layer is connected to every neuron
in the subsequent layer. It is the simplest architecture in neural
networks, typically used as the basic one in deep learning. In this
architecture, the input layer receives the input data $x=x_1,x_2,\\ldots,x_n$, and $w_1,w_2,\\ldots,w_n$ present weights of each level, and $b_1,b_2,\\ldots,b_n$
of the input layer. The hidden layers consist of neurons that apply
weights to the input features, followed by an activation function that
produces non-linearity. There are usually many hidden layers in a neural
network. The output layer shows the final prediction that usually
corresponds to the number of classes: binary (two -- 0 or 1) and
multiclass (three or more). The scheme of DNN is presented in Figure 4.
" 0 590 (fontified t) 590 634 (fontified t) 634 797 (fontified t) 797 800 (fontified t) 800 854 (fontified t) 854 867 (fontified t) 867 935 (fontified t) 935 989 (fontified t) 989 994 (face tex-math fontified t) 994 995 (face (tex-math subscript) display (raise -0.2) fontified t) 995 998 (face tex-math fontified t) 998 999 (face (tex-math subscript) display (raise -0.2) fontified t) 999 1000 (face tex-math fontified t) 1000 1006 (face tex-math fontified t) 1006 1009 (face tex-math fontified t) 1009 1010 (face (tex-math subscript) display (raise -0.2) fontified t) 1010 1011 (face tex-math fontified t) 1011 1017 (fontified t) 1017 1020 (face tex-math fontified t) 1020 1021 (face (tex-math subscript) display (raise -0.2) fontified t) 1021 1024 (face tex-math fontified t) 1024 1025 (face (tex-math subscript) display (raise -0.2) fontified t) 1025 1026 (face tex-math fontified t) 1026 1032 (face tex-math fontified t) 1032 1035 (face tex-math fontified t) 1035 1036 (face (tex-math subscript) display (raise -0.2) fontified t) 1036 1037 (face tex-math fontified t) 1037 1053 (fontified t) 1053 1054 (fontified t) 1054 1073 (fontified t) 1073 1074 (face tex-math fontified t) 1074 1075 (face tex-math fontified t) 1075 1076 (face tex-math fontified t) 1076 1077 (face (tex-math subscript) display (raise -0.2) fontified t) 1077 1078 (face tex-math fontified t) 1078 1079 (face tex-math fontified t) 1079 1080 (face tex-math fontified t) 1080 1081 (face (tex-math subscript) display (raise -0.2) fontified t) 1081 1089 (face tex-math fontified t) 1089 1090 (face tex-math fontified t) 1090 1091 (face tex-math fontified t) 1091 1092 (face (tex-math subscript) display (raise -0.2) fontified t) 1092 1093 (face tex-math rear-nonsticky t fontified t) 1093 1094 (fontified t) 1094 1161 (fontified t) 1161 1162 (fontified t) 1162 1509 (fontified t)) . 26449) (undo-tree-id2438 . -1437) (undo-tree-id2439 . 416) (undo-tree-id2440 . -1437) (undo-tree-id2441 . -1508) (undo-tree-id2442 . -1036) (undo-tree-id2443 . -1074) (undo-tree-id2444 . -1074) (undo-tree-id2445 . -1074) (undo-tree-id2446 . -1074) (undo-tree-id2447 . -1074) (t 26477 31192 515639 0)) ((26449 . 27958)) (26477 31238 531554 172000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26967 . 26968) (#("
" 0 1 (fontified nil)) . -27106) (26967 . 27107) 26944) nil (26477 31245 38938 823000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26156 . 26157) (#("
" 0 1 (fontified nil)) . -27665) (26156 . 27666) 26104) ((#("

XGBoost {[}14{]} is a very strong machine-learning algorithm widely used
in the classification task. It lies in a series of boosting algorithms
that combine the predictions of multiple learners. XGBoost is known for
its efficiency and high performance. Employing an ensemble approach
corrects the errors made in previous iterations through the next model.
During each step, the deviations of the ensemble's predictions are
assessed on the training data, and the model is optimized by introducing
new tree forecasts to reduce the overall deviation. This process
continues until the desired error threshold is met or an early stopping
condition is triggered.

A Dense neural network (DNN) {[}15{]} is a fundamental type of neural
network in which each neuron in one layer is connected to every neuron
in the subsequent layer. It is the simplest architecture in neural
networks, typically used as the basic one in deep learning. In this
architecture, the input layer receives the input data $x=x_1,x_2,\\ldots,x_n$, and $w_1,w_2,\\ldots,w_n$ present weights of each level, and $b_1,b_2,\\ldots,b_n$
of the input layer. The hidden layers consist of neurons that apply
weights to the input features, followed by an activation function that
produces non-linearity. There are usually many hidden layers in a neural
network. The output layer shows the final prediction that usually
corresponds to the number of classes: binary (two -- 0 or 1) and
multiclass (three or more). The scheme of DNN is presented in Figure 4.
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (fontified nil) 2 591 (fontified t) 591 635 (fontified t) 635 798 (fontified t) 798 801 (fontified t) 801 855 (fontified t) 855 868 (fontified t) 868 936 (fontified t) 936 990 (fontified t) 990 995 (face tex-math fontified t) 995 996 (face (tex-math subscript) fontified t display (raise -0.2)) 996 999 (face tex-math fontified t) 999 1000 (face (tex-math subscript) fontified t display (raise -0.2)) 1000 1001 (face tex-math fontified t) 1001 1007 (face tex-math fontified t) 1007 1010 (face tex-math fontified t) 1010 1011 (face (tex-math subscript) fontified t display (raise -0.2)) 1011 1012 (face tex-math fontified t) 1012 1018 (fontified t) 1018 1021 (face tex-math fontified t) 1021 1022 (face (tex-math subscript) fontified t display (raise -0.2)) 1022 1025 (face tex-math fontified t) 1025 1026 (face (tex-math subscript) fontified t display (raise -0.2)) 1026 1027 (face tex-math fontified t) 1027 1033 (face tex-math fontified t) 1033 1036 (face tex-math fontified t) 1036 1037 (face (tex-math subscript) fontified t display (raise -0.2)) 1037 1038 (face tex-math fontified t) 1038 1054 (fontified t) 1054 1055 (fontified t) 1055 1074 (fontified t) 1074 1075 (face tex-math fontified t) 1075 1076 (face tex-math fontified t) 1076 1077 (face tex-math fontified t) 1077 1078 (face (tex-math subscript) fontified t display (raise -0.2)) 1078 1079 (face tex-math fontified t) 1079 1080 (face tex-math fontified t) 1080 1081 (face tex-math fontified t) 1081 1082 (face (tex-math subscript) fontified t display (raise -0.2)) 1082 1090 (face tex-math fontified t) 1090 1091 (face tex-math fontified t) 1091 1092 (face tex-math fontified t) 1092 1093 (face (tex-math subscript) fontified t display (raise -0.2)) 1093 1094 (face tex-math fontified t rear-nonsticky t) 1094 1095 (fontified t) 1095 1162 (fontified t) 1162 1163 (fontified t) 1163 1438 (fontified t) 1438 1448 (fontified nil) 1448 1509 (fontified nil) 1509 1510 (fontified nil)) . 26156) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1509) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (27665 . 27666) (nil rear-nonsticky t 26156 . 26157) (t 26477 31224 91301 404000)) (26477 31224 83327 373000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -26230) (t 26477 31245 45077 363000) (26231 . 26232) 26230 (t 26477 31245 45077 363000)) nil (26477 31265 193054 836000) 0 nil])
nil
([nil nil ((#("6" 0 1 (fontified t)) . -27025) (27026 . 27027) 27025) nil (26477 31281 522274 225000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.7\\textwidth]{media/ict/image39}
	\\caption*{Figure 2-Decision Tree}
\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 73 (fontified t) 73 74 (fontified t) 74 81 (face font-lock-keyword-face fontified t) 81 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 103 (face font-lock-builtin-face fontified t) 103 105 (fontified t) 105 106 (fontified t) 106 115 (face font-lock-keyword-face fontified t) 115 140 (fontified t) 140 144 (face font-lock-keyword-face fontified t) 144 145 (fontified t latex-env-pair t) 145 151 (face font-lock-function-name-face fontified t latex-env-pair t) 151 152 (fontified t latex-env-pair t) 152 153 (fontified t)) . 26157) (undo-tree-id2737 . -140) (undo-tree-id2738 . -140) (undo-tree-id2739 . -152) (undo-tree-id2740 . -153) (undo-tree-id2741 . -140) (undo-tree-id2742 . -140) (undo-tree-id2743 . -153) (undo-tree-id2744 . -16) (undo-tree-id2745 . -140) 26297 (t 26477 31265 200861 829000)) nil (26477 31292 389576 649000) 0 nil] [nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.7\\textwidth]{media/ict/image39}
	\\caption*{Figure 2-Decision Tree}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 57 (fontified t) 57 58 (fontified t) 58 65 (face font-lock-keyword-face fontified t) 65 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 89 (fontified t) 89 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 124 (fontified t) 124 128 (face font-lock-keyword-face fontified t) 128 129 (fontified t latex-env-pair t) 129 135 (face font-lock-function-name-face fontified t latex-env-pair t) 135 136 (fontified t latex-env-pair t) 136 137 (fontified t)) . 26173) (undo-tree-id2622 . -124) (undo-tree-id2623 . -124) (undo-tree-id2624 . -136) (undo-tree-id2625 . -137) (undo-tree-id2626 . -124) (undo-tree-id2627 . -124) (undo-tree-id2628 . -137) (undo-tree-id2629 . -137) (undo-tree-id2630 . -137) (undo-tree-id2631 . -137) (undo-tree-id2632 . -137) (undo-tree-id2633 . -137) (undo-tree-id2634 . -137) (undo-tree-id2635 . -137) (undo-tree-id2636 . -135) (undo-tree-id2637 . -135) (undo-tree-id2638 . -135) (undo-tree-id2639 . -135) (undo-tree-id2640 . -135) (undo-tree-id2641 . -115) (undo-tree-id2642 . -115) (undo-tree-id2643 . -115) (undo-tree-id2644 . -115) (undo-tree-id2645 . -115) (undo-tree-id2646 . -57) (undo-tree-id2647 . -57) (undo-tree-id2648 . -57) (undo-tree-id2649 . -57) (undo-tree-id2650 . -57) (undo-tree-id2651 . -29) (undo-tree-id2652 . -29) (undo-tree-id2653 . -29) (undo-tree-id2654 . -29) (undo-tree-id2655 . -29) (undo-tree-id2656 . -17) (undo-tree-id2657 . -17) (undo-tree-id2658 . -17) (undo-tree-id2659 . -17) (undo-tree-id2660 . -17) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -19) (undo-tree-id2679 . -19) (undo-tree-id2680 . -19) (undo-tree-id2681 . -19) (undo-tree-id2682 . -19) (undo-tree-id2683 . -31) (undo-tree-id2684 . -31) (undo-tree-id2685 . -31) (undo-tree-id2686 . -31) (undo-tree-id2687 . -31) (undo-tree-id2688 . -31) (undo-tree-id2689 . -31) (undo-tree-id2690 . -31) (undo-tree-id2691 . -31) (undo-tree-id2692 . -31) (undo-tree-id2693 . -89) (undo-tree-id2694 . -89) (undo-tree-id2695 . -89) (undo-tree-id2696 . -89) (undo-tree-id2697 . -89) (undo-tree-id2698 . -89) (undo-tree-id2699 . -89) (undo-tree-id2700 . -89) (undo-tree-id2701 . -89) (undo-tree-id2702 . -89) (undo-tree-id2703 . -89) (undo-tree-id2704 . -89) (undo-tree-id2705 . -89) (undo-tree-id2706 . -89) (undo-tree-id2707 . -89) (undo-tree-id2708 . -89) (undo-tree-id2709 . -89) (undo-tree-id2710 . -89) (undo-tree-id2711 . -89) (undo-tree-id2712 . -89) (undo-tree-id2713 . -124) (undo-tree-id2714 . -124) (undo-tree-id2715 . -124) (undo-tree-id2716 . -124) (undo-tree-id2717 . -124) (undo-tree-id2718 . -124) (undo-tree-id2719 . -124) (undo-tree-id2720 . -124) (undo-tree-id2721 . -124) (undo-tree-id2722 . -124) (undo-tree-id2723 . -124) (undo-tree-id2724 . -124) (undo-tree-id2725 . -124) (undo-tree-id2726 . -124) (undo-tree-id2727 . -124) (undo-tree-id2728 . -124) (undo-tree-id2729 . -124) (undo-tree-id2730 . -124) (undo-tree-id2731 . -124) (undo-tree-id2732 . -124) (undo-tree-id2733 . -124) (undo-tree-id2734 . -124) (undo-tree-id2735 . -124) (undo-tree-id2736 . -137) 26297 (t 26477 31265 200861 829000)) ((26173 . 26310)) (26477 31281 521968 293000) 0 nil])
([nil nil ((nil rear-nonsticky nil 25307 . 25308) (#("
" 0 1 (fontified nil)) . -25460) (25307 . 25461) 25281) nil (26477 31292 389565 28000) 0 nil])
nil
([nil nil ((25462 . 25483) (26968 . 26984)) nil (26477 31292 389561 311000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.7\\textwidth]{media/ict/image40}
	\\caption*{Figure 3 - Random Forest}
\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 47 (fontified t) 47 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 73 (fontified t) 73 74 (fontified t) 74 84 (fontified t face font-lock-keyword-face) 84 86 (fontified t) 86 103 (fontified t face font-lock-builtin-face) 103 105 (fontified t) 105 106 (fontified t) 106 115 (face font-lock-keyword-face fontified t) 115 142 (fontified t) 142 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t latex-env-pair t) 147 153 (face font-lock-function-name-face fontified t latex-env-pair t) 153 154 (fontified t latex-env-pair t) 154 155 (fontified t)) . 26989) (undo-tree-id2746 . -142) (undo-tree-id2747 . -142) (undo-tree-id2748 . -154) (undo-tree-id2749 . -142) 27131 (t 26477 31292 397570 923000)) nil (26477 31339 501816 671000) 0 nil])
([nil nil ((nil rear-nonsticky nil 26330 . 26331) (#("
" 0 1 (fontified nil)) . -26485) (26330 . 26486) 26278) nil (26477 31339 501803 597000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image44}
	\\caption*{Figure 4 - Dense neural network}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 133 (fontified t) 133 137 (face font-lock-keyword-face fontified t) 137 138 (fontified t latex-env-pair t) 138 144 (face font-lock-function-name-face fontified t latex-env-pair t) 144 145 (fontified t latex-env-pair t) 145 146 (fontified t)) . 27995) (undo-tree-id2750 . -133) (undo-tree-id2751 . -133) (undo-tree-id2752 . -145) (undo-tree-id2753 . -1) (undo-tree-id2754 . -1) (undo-tree-id2755 . -1) (undo-tree-id2756 . -1) (undo-tree-id2757 . -1) (undo-tree-id2758 . -1) (undo-tree-id2759 . -1) (undo-tree-id2760 . -1) (undo-tree-id2761 . -1) (undo-tree-id2762 . -1) (undo-tree-id2763 . -1) (undo-tree-id2764 . -1) (undo-tree-id2765 . -1) (undo-tree-id2766 . -1) (undo-tree-id2767 . -1) (undo-tree-id2768 . -1) (undo-tree-id2769 . -19) (undo-tree-id2770 . -19) (undo-tree-id2771 . -19) (undo-tree-id2772 . -19) (undo-tree-id2773 . -19) (undo-tree-id2774 . -19) (undo-tree-id2775 . -31) (undo-tree-id2776 . -31) (undo-tree-id2777 . -31) (undo-tree-id2778 . -31) (undo-tree-id2779 . -31) (undo-tree-id2780 . -31) (undo-tree-id2781 . -31) (undo-tree-id2782 . -31) (undo-tree-id2783 . -31) (undo-tree-id2784 . -31) (undo-tree-id2785 . -31) (undo-tree-id2786 . -31) (undo-tree-id2787 . -31) (undo-tree-id2788 . -31) (undo-tree-id2789 . -31) (undo-tree-id2790 . -31) (undo-tree-id2791 . -31) (undo-tree-id2792 . -31) (undo-tree-id2793 . -31) (undo-tree-id2794 . -31) (undo-tree-id2795 . -31) (undo-tree-id2796 . -89) (undo-tree-id2797 . -89) (undo-tree-id2798 . -89) (undo-tree-id2799 . -89) (undo-tree-id2800 . -89) (undo-tree-id2801 . -89) (undo-tree-id2802 . -89) (undo-tree-id2803 . -89) (undo-tree-id2804 . -89) (undo-tree-id2805 . -89) (undo-tree-id2806 . -89) (undo-tree-id2807 . -89) (undo-tree-id2808 . -89) (undo-tree-id2809 . -89) (undo-tree-id2810 . -89) (undo-tree-id2811 . -89) (undo-tree-id2812 . -133) (undo-tree-id2813 . -133) (undo-tree-id2814 . -133) (undo-tree-id2815 . -133) (undo-tree-id2816 . -133) (undo-tree-id2817 . -133) (undo-tree-id2818 . -133) (undo-tree-id2819 . -133) (undo-tree-id2820 . -133) (undo-tree-id2821 . -133) (undo-tree-id2822 . -133) (undo-tree-id2823 . -133) (undo-tree-id2824 . -133) (undo-tree-id2825 . -133) (undo-tree-id2826 . -133) (undo-tree-id2827 . -133) (undo-tree-id2828 . -133) (undo-tree-id2829 . -133) (undo-tree-id2830 . -133) (undo-tree-id2831 . -133) (undo-tree-id2832 . -133) (undo-tree-id2833 . -133) (undo-tree-id2834 . -133) (undo-tree-id2835 . -133) (undo-tree-id2836 . -146) 28128 (t 26477 31339 513066 842000)) nil (26477 31353 655344 719000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28576 . 28577) (#("
" 0 1 (fontified nil)) . -28722) (28576 . 28723) 28557) nil (26477 31353 655260 883000) 0 nil])
([nil nil ((37608 . 37618) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -37608) (undo-tree-id2846 . -1) (37607 . 37609) (37603 . 37607) (#("i" 0 1 (fontified nil)) . -37603) (undo-tree-id2847 . -1) (37601 . 37604) (#("i" 0 1 (fontified nil)) . -37601) (undo-tree-id2848 . -1) (37587 . 37602) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -37587) (undo-tree-id2849 . -1) (37586 . 37588) (#("c" 0 1 (face font-lock-keyword-face fontified t)) . -37586) (undo-tree-id2850 . -1) 37587 (37575 . 37587) (#("f" 0 1 (fontified t)) . -37575) (undo-tree-id2851 . -1) 37576 (37575 . 37576) (37575 . 37576) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image84}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (latex-env-pair t fontified t) 106 112 (face font-lock-function-name-face latex-env-pair t fontified t) 112 113 (latex-env-pair t fontified t) 113 114 (fontified t)) . 37575) (undo-tree-id2852 . -113) (undo-tree-id2853 . -12) (undo-tree-id2854 . -113) (undo-tree-id2855 . -113) (undo-tree-id2856 . -113) 37688 (t 26477 31353 663915 418000)) nil (26477 31521 656019 430000) 0 nil])
([nil nil ((37612 . 37625) (#("Recall" 0 6 (face font-lock-keyword-face fontified t)) . 37612) (undo-tree-id2844 . -6) (undo-tree-id2845 . -5)) nil (26477 31521 656014 721000) 0 nil])
([nil nil ((37597 . 37613) (#("Precision" 0 9 (fontified t)) . -37597) (undo-tree-id2841 . -8) (undo-tree-id2842 . -8) (undo-tree-id2843 . -8) 37606) nil (26477 31521 656012 717000) 0 nil])
([nil nil ((37578 . 37590) (#("score" 0 5 (fontified t)) . -37578) (undo-tree-id2839 . -4) (undo-tree-id2840 . -4) 37583) nil (26477 31521 656009 842000) 0 nil])
([nil nil ((37639 . 37641)) nil (26477 31521 656008 630000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37675 . 37676) (nil fontified nil 37641 . 37676) (37641 . 37676) 37640) nil (26477 31521 656008 289000) 0 nil])
([nil nil ((37676 . 37677)) nil (26477 31521 656007 668000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 37657)) nil (26477 31521 656007 167000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37657)) nil (26477 31521 656006 345000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 37657)) nil (26477 31521 656005 273000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 37657)) nil (26477 31521 656004 622000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 37657)) nil (26477 31521 656003 801000) 0 nil])
([nil nil ((37657 . 37658) (#(")" 0 1 (fontified t)) . 37657) (undo-tree-id2837 . -1) (37657 . 37658) (#("s" 0 1 (fontified t)) . 37657) (undo-tree-id2838 . -1)) nil (26477 31524 659161 991000) 0 nil])
([nil nil ((37575 . 37592) (37673 . 37688) (t 26477 31521 665116 605000)) nil (26477 31526 974569 433000) 0 nil] [nil nil ((37575 . 37679) (#("F1-\\text{score}=2\\times\\frac{\\text{Precision}\\times\\text{Recall}}{\\text{Precision}+\\text{Recall}}
" 0 3 (fontified t) 3 8 (face font-lock-keyword-face fontified t) 8 15 (fontified t) 15 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 34 (face font-lock-keyword-face fontified t) 34 45 (fontified t) 45 51 (face font-lock-keyword-face fontified t) 51 56 (face font-lock-keyword-face fontified t) 56 66 (fontified t) 66 71 (face font-lock-keyword-face fontified t) 71 82 (fontified t) 82 83 (fontified t) 83 88 (face font-lock-keyword-face fontified t) 88 95 (fontified t) 95 96 (rear-nonsticky t fontified t) 96 97 (fontified t) 97 98 (fontified t)) . -37575) (undo-tree-id2857 . 1) (undo-tree-id2858 . -82) (undo-tree-id2859 . -82) (undo-tree-id2860 . -82) (undo-tree-id2861 . -82) (undo-tree-id2862 . -29) (undo-tree-id2863 . -63) (undo-tree-id2864 . -63) (undo-tree-id2865 . -82) (undo-tree-id2866 . -82) (undo-tree-id2867 . -82) (undo-tree-id2868 . -82) (undo-tree-id2869 . -82) (undo-tree-id2870 . -82) (undo-tree-id2871 . -82) (undo-tree-id2872 . -82) (undo-tree-id2873 . -82) (undo-tree-id2874 . -82) (undo-tree-id2875 . -82) (undo-tree-id2876 . -82) (undo-tree-id2877 . -82) (undo-tree-id2878 . -82) (undo-tree-id2879 . -82) (undo-tree-id2880 . -82) (undo-tree-id2881 . -82) (undo-tree-id2882 . -82) (undo-tree-id2883 . -82) (undo-tree-id2884 . -82) (undo-tree-id2885 . -82) (undo-tree-id2886 . -82) (undo-tree-id2887 . -82) (undo-tree-id2888 . -82) (undo-tree-id2889 . -82) (undo-tree-id2890 . -82) (undo-tree-id2891 . -82) (undo-tree-id2892 . -82) (undo-tree-id2893 . -82) (undo-tree-id2894 . -82) (undo-tree-id2895 . -82) (undo-tree-id2896 . -82) (undo-tree-id2897 . -82) (undo-tree-id2898 . -82) (undo-tree-id2899 . -82) (undo-tree-id2900 . -82) (undo-tree-id2901 . -82) (undo-tree-id2902 . -82) (undo-tree-id2903 . -82) (undo-tree-id2904 . -82) (undo-tree-id2905 . -82) (undo-tree-id2906 . -82) (undo-tree-id2907 . -82) (undo-tree-id2908 . -82) (undo-tree-id2909 . -82) (undo-tree-id2910 . -82) (undo-tree-id2911 . -82) (undo-tree-id2912 . -82) (undo-tree-id2913 . -82) (undo-tree-id2914 . -82) (undo-tree-id2915 . -82) (undo-tree-id2916 . -82) (undo-tree-id2917 . -82) (undo-tree-id2918 . -82) (undo-tree-id2919 . -82) (undo-tree-id2920 . -82) (undo-tree-id2921 . -82) (undo-tree-id2922 . -82) (undo-tree-id2923 . -82) (undo-tree-id2924 . -82) (undo-tree-id2925 . -82) (undo-tree-id2926 . -82) (undo-tree-id2927 . -82) (undo-tree-id2928 . -82) (undo-tree-id2929 . -82) (undo-tree-id2930 . -82) (undo-tree-id2931 . -82) (undo-tree-id2932 . -82) (undo-tree-id2933 . -82) (undo-tree-id2934 . -82) (undo-tree-id2935 . -82) (undo-tree-id2936 . -82) (undo-tree-id2937 . -82) (undo-tree-id2938 . -82) (undo-tree-id2939 . -82) (undo-tree-id2940 . -82) (undo-tree-id2941 . -82) (undo-tree-id2942 . -82) (undo-tree-id2943 . -82) (undo-tree-id2944 . -82) (undo-tree-id2945 . -82) (undo-tree-id2946 . -82) (undo-tree-id2947 . -82) (undo-tree-id2948 . -82) (undo-tree-id2949 . -82) (undo-tree-id2950 . -82) (undo-tree-id2951 . -82) (undo-tree-id2952 . -82) (undo-tree-id2953 . -82) (undo-tree-id2954 . -82) (undo-tree-id2955 . -82) (undo-tree-id2956 . -82) (undo-tree-id2957 . -82) (undo-tree-id2958 . -82) (undo-tree-id2959 . -98) 37673 (t 26477 31521 665116 605000)) ((37575 . 37673) (#("\\text{F1-\\text{score}=2\\times\\frac{\\text{Precision}\\times\\text{Recall}}{\\text{Precision}+\\text{Recall}}}" 0 5 (face font-lock-keyword-face fontified t) 5 9 (fontified t) 9 14 (face font-lock-keyword-face fontified t) 14 23 (fontified t) 23 29 (face font-lock-keyword-face fontified t) 29 34 (face font-lock-keyword-face fontified t) 34 35 (fontified t) 35 40 (face font-lock-keyword-face fontified t) 40 51 (fontified t) 51 57 (face font-lock-keyword-face fontified t) 57 62 (face font-lock-keyword-face fontified t) 62 72 (fontified t) 72 77 (face font-lock-keyword-face fontified t) 77 89 (fontified t) 89 94 (face font-lock-keyword-face fontified t) 94 104 (fontified t)) . 37575)) (26477 31524 658857 973000) 0 nil])
([nil nil ((37369 . 37371) (37348 . 37369) (37348 . 37349) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image83}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (latex-env-pair t fontified t) 106 112 (face font-lock-function-name-face latex-env-pair t fontified t) 112 113 (latex-env-pair t fontified t) 113 114 (fontified t)) . 37348) (undo-tree-id2960 . -101) (undo-tree-id2961 . -101) (undo-tree-id2962 . -113) (undo-tree-id2963 . -114) (undo-tree-id2964 . -114) (undo-tree-id2965 . -114) (undo-tree-id2966 . -114) (undo-tree-id2967 . -114) (undo-tree-id2968 . -101) (undo-tree-id2969 . -101) (undo-tree-id2970 . -101) (undo-tree-id2971 . -101) (undo-tree-id2972 . -101) (undo-tree-id2973 . -101) (undo-tree-id2974 . -101) (undo-tree-id2975 . -101) (undo-tree-id2976 . -101) (undo-tree-id2977 . -101) (undo-tree-id2978 . -88) (undo-tree-id2979 . -88) (undo-tree-id2980 . -88) (undo-tree-id2981 . -88) (undo-tree-id2982 . -88) (undo-tree-id2983 . -88) (undo-tree-id2984 . -88) (undo-tree-id2985 . -88) (undo-tree-id2986 . -88) (undo-tree-id2987 . -88) (undo-tree-id2988 . -88) (undo-tree-id2989 . -88) (undo-tree-id2990 . -88) (undo-tree-id2991 . -88) (undo-tree-id2992 . -88) (undo-tree-id2993 . -101) (undo-tree-id2994 . -101) (undo-tree-id2995 . -101) (undo-tree-id2996 . -101) (undo-tree-id2997 . -101) (undo-tree-id2998 . -101) (undo-tree-id2999 . -101) (undo-tree-id3000 . -101) (undo-tree-id3001 . -101) (undo-tree-id3002 . -101) (undo-tree-id3003 . -101) (undo-tree-id3004 . -101) (undo-tree-id3005 . -101) (undo-tree-id3006 . -101) (undo-tree-id3007 . -101) (undo-tree-id3008 . -101) (undo-tree-id3009 . -101) (undo-tree-id3010 . -101) (undo-tree-id3011 . -101) (undo-tree-id3012 . -101) (undo-tree-id3013 . -101) (undo-tree-id3014 . -101) (undo-tree-id3015 . -101) (undo-tree-id3016 . -101) (undo-tree-id3017 . -101) (undo-tree-id3018 . -101) (undo-tree-id3019 . -101) (undo-tree-id3020 . -101) (undo-tree-id3021 . -101) (undo-tree-id3022 . -101) (undo-tree-id3023 . -101) (undo-tree-id3024 . -101) (undo-tree-id3025 . -101) (undo-tree-id3026 . -101) (undo-tree-id3027 . -101) (undo-tree-id3028 . -101) (undo-tree-id3029 . -101) (undo-tree-id3030 . -88) (undo-tree-id3031 . -88) (undo-tree-id3032 . -88) (undo-tree-id3033 . -88) (undo-tree-id3034 . -88) (undo-tree-id3035 . -88) (undo-tree-id3036 . -88) (undo-tree-id3037 . -88) (undo-tree-id3038 . -88) (undo-tree-id3039 . -88) (undo-tree-id3040 . -88) (undo-tree-id3041 . -88) (undo-tree-id3042 . -88) (undo-tree-id3043 . -88) (undo-tree-id3044 . -88) (undo-tree-id3045 . -88) (undo-tree-id3046 . -88) (undo-tree-id3047 . -30) (undo-tree-id3048 . -30) (undo-tree-id3049 . -30) (undo-tree-id3050 . -30) (undo-tree-id3051 . -30) (undo-tree-id3052 . -30) (undo-tree-id3053 . -30) (undo-tree-id3054 . -30) (undo-tree-id3055 . -30) (undo-tree-id3056 . -30) (undo-tree-id3057 . -30) (undo-tree-id3058 . -30) (undo-tree-id3059 . -30) (undo-tree-id3060 . -30) (undo-tree-id3061 . -30) (undo-tree-id3062 . -18) (undo-tree-id3063 . -18) (undo-tree-id3064 . -18) (undo-tree-id3065 . -18) (undo-tree-id3066 . -18) (undo-tree-id3067 . -18) (undo-tree-id3068 . -18) (undo-tree-id3069 . -18) (undo-tree-id3070 . -18) (undo-tree-id3071 . -18) (undo-tree-id3072 . -18) (undo-tree-id3073 . -18) (undo-tree-id3074 . -18) (undo-tree-id3075 . -18) (undo-tree-id3076 . -18) (undo-tree-id3077 . -114) (undo-tree-id3078 . -114) (t 26477 31526 984059 634000)) nil (26477 31569 578525 123000) 0 nil])
nil
([nil nil ((37348 . 37365) (37372 . 37387)) nil (26477 31569 578407 964000) 0 nil])
([nil nil ((37548 . 37549) (#("}" 0 1 (fontified t)) . 37548) (t 26477 31569 583603 219000)) nil (26477 31591 226495 801000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 37537)) nil (26477 31591 226495 431000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37537)) nil (26477 31591 226495 100000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 37537)) nil (26477 31591 226494 739000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 37537)) nil (26477 31591 226494 238000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37537) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1)) nil (26477 31591 226493 738000) 0 nil])
([nil nil ((37537 . 37538) (#("{" 0 1 (fontified t)) . 37537)) nil (26477 31591 226479 912000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 37558) (t 26477 31591 232371 220000)) nil (26477 31620 239202 222000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37558)) nil (26477 31620 239201 971000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 37558)) nil (26477 31620 239201 721000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 37558)) nil (26477 31620 239201 410000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37558)) nil (26477 31620 239201 150000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 37558)) nil (26477 31620 239200 759000) 0 nil])
([nil nil ((37567 . 37568) (#("}" 0 1 (fontified t)) . 37567)) nil (26477 31620 239200 448000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -37575) (undo-tree-id3112 . -1) (37574 . 37576) (#("s" 0 1 (face font-lock-keyword-face fontified t)) . -37574) (undo-tree-id3113 . -1) (#(" " 0 1 (fontified t)) . -37575) (undo-tree-id3114 . -1) 37576 (37574 . 37576) (#(" " 0 1 (fontified t)) . -37574) (undo-tree-id3115 . -1) (#("s" 0 1 (fontified t)) . -37575) (undo-tree-id3116 . -1) 37576 (37574 . 37576) (#("\\text{" 0 5 (face font-lock-keyword-face fontified t) 5 6 (fontified t)) . 37574) (undo-tree-id3117 . -5) (undo-tree-id3118 . -5) (undo-tree-id3119 . -5) (undo-tree-id3120 . -5) 37579) nil (26477 31620 239199 687000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 37581)) nil (26477 31620 239194 968000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 37583)) nil (26477 31620 239194 628000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37583)) nil (26477 31620 239194 267000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 37583)) nil (26477 31620 239194 87000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 37583)) nil (26477 31620 239193 756000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37583)) nil (26477 31620 239193 445000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 37583)) nil (26477 31620 239193 165000) 0 nil])
([nil nil ((37592 . 37593) (#("}" 0 1 (fontified t)) . 37592)) nil (26477 31620 239192 944000) 0 nil])
([nil nil ((37594 . 37595) (#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 37594) (undo-tree-id3111 . -1)) nil (26477 31620 239192 524000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37595) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1)) nil (26477 31620 239191 923000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 37595) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1)) nil (26477 31620 239190 740000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 37595) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1)) nil (26477 31620 239183 797000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 37595) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1)) nil (26477 31620 239182 505000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 37595) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1)) nil (26477 31620 239180 431000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t rear-nonsticky t)) . 37601) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1)) nil (26477 31620 239177 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 37214 . 37215) (#("
" 0 1 (fontified nil)) . -37270) (37214 . 37271) 37213 (t 26477 31620 248060 284000)) nil (26477 31659 873879 873000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image82}
	\\caption*{}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (latex-env-pair t fontified t) 8 14 (face font-lock-function-name-face latex-env-pair t fontified t) 14 15 (latex-env-pair t fontified t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 102 (fontified t) 102 106 (face font-lock-keyword-face fontified t) 106 107 (latex-env-pair t fontified t) 107 113 (face font-lock-function-name-face latex-env-pair t fontified t) 113 114 (latex-env-pair t fontified t) 114 115 (rear-nonsticky t fontified t)) . 37100) (undo-tree-id3140 . -102) (undo-tree-id3141 . -102) (undo-tree-id3142 . -114) (undo-tree-id3143 . -102) 37202) nil (26477 31659 873879 332000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -37100) (undo-tree-id3139 . -1) (37099 . 37101) 37094) nil (26477 31659 873877 108000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -37127) (undo-tree-id3135 . -1) (37124 . 37128) (#("i" 0 1 (fontified nil)) . -37124) (undo-tree-id3136 . -1) (37122 . 37125) (#("i" 0 1 (fontified nil)) . -37122) (undo-tree-id3137 . -1) (37118 . 37123) (#("Recall" 0 6 (fontified t)) . 37118) (undo-tree-id3138 . -5)) nil (26477 31659 873875 795000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -37143) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (37141 . 37144) (#("FN" 0 2 (fontified t)) . 37141) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -2) (undo-tree-id3134 . -2)) nil (26477 31659 873869 884000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37160) (undo-tree-id3144 . -1) (t 26477 31659 879635 414000)) nil (26477 31661 469627 970000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37348) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (t 26477 31661 477618 277000)) nil (26477 31693 227109 576000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 37561)) nil (26477 31693 227104 196000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image81}
	\\caption*{}
\\end{figure}

" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (latex-env-pair t fontified t) 106 112 (face font-lock-function-name-face latex-env-pair t fontified t) 112 113 (latex-env-pair t fontified t) 113 115 (fontified t)) . 36832) (undo-tree-id3156 . -114) (undo-tree-id3157 . -114) (undo-tree-id3158 . -114) (undo-tree-id3159 . -114) 36946) nil (26477 31693 227103 755000) 0 nil])
([nil nil ((nil rear-nonsticky nil 36831 . 36832) (#("
" 0 1 (fontified nil)) . -36890) (36831 . 36891)) nil (26477 31693 227101 270000) 0 nil])
([nil nil ((36849 . 36857) (#("Precision" 0 9 (fontified t)) . 36849) (undo-tree-id3155 . -8)) nil (26477 31693 227100 869000) 0 nil])
([nil nil ((36867 . 36869) (36866 . 36867)) nil (26477 31693 227100 88000) 0 nil])
([nil nil ((#("T" 0 1 (fontified t)) . 36871) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1)) nil (26477 31693 227099 807000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . 36871) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1)) nil (26477 31693 227098 425000) 0 nil])
([nil nil ((#("+" 0 1 (fontified t)) . 36871) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1)) nil (26477 31693 227097 383000) 0 nil])
([nil nil ((#("F" 0 1 (fontified t)) . 36871) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1)) nil (26477 31693 227096 261000) 0 nil])
([nil nil ((#("P" 0 1 (fontified t)) . 36871) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1)) nil (26477 31693 227094 798000) 0 nil])
([nil nil ((36887 . 36890) (36871 . 36887)) nil (26477 31693 227074 440000) 0 nil])
([nil nil ((36884 . 36885) (t 26477 31693 235277 724000)) nil (26477 31710 126556 662000) 0 nil])
([nil nil ((36876 . 36877)) nil (26477 31710 126552 414000) 0 nil])
([nil nil ((36883 . 36884) (t 26477 31710 135096 494000)) nil (26477 31806 360386 874000) 0 nil])
([nil nil ((#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -36884) (undo-tree-id3172 . -1) (36884 . 36885) (t 26477 31806 370064 169000)) nil (26477 31899 485770 258000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -34314) (t 26477 31806 370064 169000) (34315 . 34316) 34314 (t 26477 31806 370064 169000)) nil (26477 31899 485761 712000) 0 nil])
([nil nil ((nil fontified t 34314 . 34315) (#("7" 0 1 (fontified t)) . -34314) (34315 . 34316) 34314) nil (26477 31899 485757 494000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -24052) (t 26478 11576 882293 147000) (24053 . 24054) 24052 (t 26478 11576 882293 147000)) nil (26478 12665 211961 508000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t)) . -25381) (25382 . 25383) 25381) nil (26478 12667 690929 310000) 0 nil] [nil nil ((nil fontified t 24052 . 24053) (#("6" 0 1 (fontified t)) . -24052) (24053 . 24054) 24052) ((#("7" 0 1 (fontified nil)) . 24053) (24052 . 24053) (t 26478 12653 617976 523000)) (26478 12653 583343 76000) 0 nil])
([nil nil ((#("7" 0 1 (fontified t)) . -26404) (t 26478 12667 741552 45000) (26405 . 26406) 26404 (t 26478 12667 741552 45000)) nil (26478 12688 648708 429000) 0 nil])
nil
([nil nil ((26487 . 26508) (28577 . 28593) (t 26478 12688 681922 665000)) nil (26478 12697 715758 629000) 0 nil])
([nil nil ((26405 . 26406) (t 26478 12697 748650 149000)) nil (26478 12795 546942 770000) 0 nil])
([nil nil ((25382 . 25383) (t 26478 12795 601708 646000)) nil (26478 12817 593989 595000) 0 nil])
([nil nil ((34014 . 34019) (34014 . 34015) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image78}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (latex-env-pair t fontified t) 7 13 (face font-lock-function-name-face latex-env-pair t fontified t) 13 14 (latex-env-pair t fontified t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (latex-env-pair t fontified t) 106 112 (face font-lock-function-name-face latex-env-pair t fontified t) 112 113 (latex-env-pair t fontified t) 113 114 (fontified t)) . 34014) (undo-tree-id13 . -113) (undo-tree-id14 . -113) (undo-tree-id15 . -16) (undo-tree-id16 . -113) (undo-tree-id17 . -113) 34127 (t 26478 12817 649045 805000)) nil (26478 13287 409896 987000) 0 nil])
([nil nil ((34013 . 34014) (#("
" 0 1 (fontified t)) . -34013) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 33971) nil (26478 13287 409891 834000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 34020) (undo-tree-id6 . 1)) nil (26478 13287 409883 282000) 0 nil])
([nil nil ((34020 . 34032) (#("i" 0 1 (fontified nil)) . -34020) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (34019 . 34021)) nil (26478 13287 409877 758000) 0 nil])
([nil nil ((apply -15 33853 33983 undo--wrap-and-run-primitive-undo 33853 33983 ((33966 . 33969) (33950 . 33953) (33889 . 33892) (33874 . 33877) (33853 . 33856)))) nil (26478 13293 490116 521000) 0 nil])
([nil nil ((apply -15 33737 33867 undo--wrap-and-run-primitive-undo 33737 33867 ((33850 . 33853) (33834 . 33837) (33773 . 33776) (33758 . 33761) (33737 . 33740) 33851))) nil (26478 13411 372499 128000) 0 nil] [nil nil ((apply -15 34216 34392 undo--wrap-and-run-primitive-undo 34216 34392 ((34375 . 34378) (34313 . 34316) (34252 . 34255) (34237 . 34240) (34216 . 34219) 34376))) ((apply 15 34216 34377 undo--wrap-and-run-primitive-undo 34216 34377 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 34216) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 34237) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 34252) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 34313) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 34375)))) (26478 13293 490020 140000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 33867) (undo-tree-id18 . -1)) nil (26478 13411 372496 12000) 0 nil])
nil
([nil nil ((#("%% \\begin{figure}[H]
%% 	\\centering
%% 	\\includegraphics[width=0.8\\textwidth]{media/ict/image77}
%% 	\\caption*{}
%% \\end{figure}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 10 (face font-lock-comment-face fontified t latex-env-pair t) 10 16 (face font-lock-comment-face fontified t latex-env-pair t) 16 17 (face font-lock-comment-face fontified t latex-env-pair t) 17 20 (face font-lock-comment-face fontified t) 20 21 (face font-lock-comment-face fontified t) 21 24 (face font-lock-comment-delimiter-face fontified t) 24 25 (face font-lock-comment-face fontified t) 25 35 (face font-lock-comment-face fontified t) 35 36 (face font-lock-comment-face fontified t) 36 39 (face font-lock-comment-delimiter-face fontified t) 39 40 (face font-lock-comment-face fontified t) 40 56 (face font-lock-comment-face fontified t) 56 66 (face font-lock-comment-face fontified t) 66 76 (face font-lock-comment-face fontified t) 76 78 (face font-lock-comment-face fontified t) 78 95 (face font-lock-comment-face fontified t) 95 97 (face font-lock-comment-face fontified t) 97 100 (face font-lock-comment-delimiter-face fontified t) 100 101 (face font-lock-comment-face fontified t) 101 110 (face font-lock-comment-face fontified t) 110 113 (face font-lock-comment-face fontified t) 113 116 (face font-lock-comment-delimiter-face fontified t) 116 120 (face font-lock-comment-face fontified t) 120 121 (face font-lock-comment-face fontified t latex-env-pair t) 121 127 (face font-lock-comment-face fontified t latex-env-pair t) 127 128 (face font-lock-comment-face fontified t latex-env-pair t) 128 129 (face font-lock-comment-face fontified t)) . 33867) (undo-tree-id71 . -113) (undo-tree-id72 . -128) (undo-tree-id73 . -113) (undo-tree-id74 . -21) (undo-tree-id75 . -21) (undo-tree-id76 . -21) (undo-tree-id77 . -21) (undo-tree-id78 . -21) (undo-tree-id79 . -21) (undo-tree-id80 . -21) (undo-tree-id81 . -21) (undo-tree-id82 . -21) (undo-tree-id83 . -21) (undo-tree-id84 . -21) (undo-tree-id85 . -21) (undo-tree-id86 . -21) (undo-tree-id87 . -21) (undo-tree-id88 . -21) (undo-tree-id89 . -21) (undo-tree-id90 . -21) (undo-tree-id91 . -36) (undo-tree-id92 . -36) (undo-tree-id93 . -36) (undo-tree-id94 . -36) (undo-tree-id95 . -36) (undo-tree-id96 . -97) (undo-tree-id97 . -97) (undo-tree-id98 . -97) (undo-tree-id99 . -97) (undo-tree-id100 . -97) (undo-tree-id101 . -97) (undo-tree-id102 . -97) (undo-tree-id103 . -97) (undo-tree-id104 . -97) (undo-tree-id105 . -97) (undo-tree-id106 . -97) (undo-tree-id107 . -97) (undo-tree-id108 . -97) (undo-tree-id109 . -97) (undo-tree-id110 . -97) (undo-tree-id111 . -97) (undo-tree-id112 . -97) (undo-tree-id113 . -97) (undo-tree-id114 . -97) (undo-tree-id115 . -97) (undo-tree-id116 . -113) (undo-tree-id117 . -113) (undo-tree-id118 . -113) (undo-tree-id119 . -113) (undo-tree-id120 . -113) (undo-tree-id121 . -113) (undo-tree-id122 . -113) (undo-tree-id123 . -113) (undo-tree-id124 . -113) (undo-tree-id125 . -113) (undo-tree-id126 . -113) (undo-tree-id127 . -113) (undo-tree-id128 . -113) (undo-tree-id129 . -113) (undo-tree-id130 . -113) (undo-tree-id131 . -113) (undo-tree-id132 . -113) (undo-tree-id133 . -113) (undo-tree-id134 . -113) (undo-tree-id135 . -113) (undo-tree-id136 . -113) (undo-tree-id137 . -113) (undo-tree-id138 . -113) (undo-tree-id139 . -129) 33980 (t 26478 13411 429021 313000)) nil (26478 13436 997772 735000) 0 nil])
([nil nil ((33880 . 33885) (#("i" 0 1 (fontified nil)) . -33880) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (33878 . 33881) (#("'" 0 1 (face tex-math fontified t)) . -33878) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("'" 0 1 (face tex-math fontified t)) . -33879) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) 33880 (nil fontified t 33878 . 33880) (nil face (tex-math subscript) 33878 . 33880) (33878 . 33880) (33868 . 33878)) nil (26478 13436 997630 501000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 33866) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (t 26478 13437 61241 414000)) nil (26478 13441 632878 70000) 0 nil])
([nil nil ((22584 . 22585) (t 26478 35274 37120 259000)) nil (26478 39878 485494 398000) 0 nil])
([nil nil ((23110 . 23111) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 23110) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (t 26478 39878 495016 521000)) nil (26478 39917 48194 133000) 0 nil])
([nil nil ((23114 . 23115) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 23114)) nil (26478 39917 48190 456000) 0 nil])
([nil nil ((23122 . 23123) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 23122) (undo-tree-id0 . -1)) nil (26478 39931 452201 478000) 0 nil])
([nil nil ((23260 . 23261) (#("j" 0 1 (face (subscript) fontified t display (raise -0.2))) . 23260) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (t 26478 39917 54730 870000)) nil (26478 39943 245187 468000) 0 nil] [nil nil ((#("i}
\\end{equation}" 0 1 (face (subscript) display (raise -0.2) fontified t) 1 3 (fontified t) 3 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 16 (face font-lock-function-name-face fontified t latex-env-pair t) 16 17 (fontified t latex-env-pair t)) . 23122) (undo-tree-id7 . -16) (undo-tree-id8 . -17) (t 26478 39917 54730 870000)) ((23122 . 23139)) (26478 39931 448599 335000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 23270) (t 26478 39934 681600 336000)) nil (26478 39960 858523 123000) 0 nil] [nil nil ((#("\\text" 0 5 (face font-lock-keyword-face fontified t)) . 23270) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -5) 23274 (t 26478 39934 681600 336000)) ((23270 . 23275)) (26478 39943 245004 386000) 0 nil])
nil
([nil nil ((#("t" 0 1 (fontified t)) . 23270)) nil (26478 39960 858522 512000) 0 nil])
nil
([nil nil ((#("e" 0 1 (fontified t)) . 23270)) nil (26478 39960 858521 841000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 23270) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1)) nil (26478 39960 858521 129000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 23270)) nil (26478 39960 858516 651000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 23270) (undo-tree-id87 . 1)) nil (26478 39960 858516 80000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 23280)) nil (26478 39960 858514 487000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 23288)) nil (26478 39960 858514 166000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 23288)) nil (26478 39960 858513 805000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 23288)) nil (26478 39960 858513 415000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 23288)) nil (26478 39960 858512 984000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 23288)) nil (26478 39960 858512 603000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 23288)) nil (26478 39960 858512 263000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 23301)) nil (26478 39960 858511 842000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 23303)) nil (26478 39960 858511 501000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 23303)) nil (26478 39960 858511 50000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 23303)) nil (26478 39960 858510 610000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 23303)) nil (26478 39960 858510 409000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 23303)) nil (26478 39960 858510 129000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t)) . 23303)) nil (26478 39960 858509 748000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t)) . 23315)) nil (26478 39960 858508 966000) 0 nil])
([nil nil ((23308 . 23317) (#("\\_" 0 2 (face font-lock-keyword-face fontified t)) . -23308) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -2) 23310) nil (26478 39960 858507 884000) 0 nil])
([nil nil ((23294 . 23303) (#("\\_" 0 2 (face font-lock-keyword-face fontified t)) . -23294) (undo-tree-id48 . -1) 23296) nil (26478 39960 858492 425000) 0 nil])
([nil nil ((23273 . 23282) (#("\\_" 0 2 (face font-lock-keyword-face fontified t)) . -23273) (undo-tree-id36 . -1) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -2) 23275) nil (26478 39960 858488 999000) 0 nil])
([nil nil ((28832 . 28841) (28825 . 28832) (#("t" 0 1 (face (subscript) display (raise -0.2) fontified t)) . -28825) (undo-tree-id94 . -1) (#("-" 0 1 (fontified t)) . -28826) (undo-tree-id95 . -1) 28827 (28822 . 28827) (28813 . 28822) (#(" " 0 1 (fontified t)) . -28813) (undo-tree-id96 . -1) 28814 (28813 . 28814) (28809 . 28813) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -28809) (undo-tree-id97 . -1) (28803 . 28810) (28803 . 28804) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image45}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 28803) (undo-tree-id98 . -113) (undo-tree-id99 . -113) (undo-tree-id100 . -16) (undo-tree-id101 . -113) (undo-tree-id102 . -113) 28916 (t 26478 39960 868406 397000)) nil (26478 40038 386412 563000) 0 nil])
([nil nil ((28803 . 28820) (28842 . 28857)) nil (26478 40038 386398 727000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image46}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 26 (face font-lock-keyword-face fontified t) 26 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 28876) (undo-tree-id66 . -101) (undo-tree-id67 . -113) (undo-tree-id68 . -101) (undo-tree-id69 . -101) 28977 (t 26478 40038 395832 96000)) nil (26478 40124 150334 45000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image47}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 28897) (undo-tree-id54 . -101) (undo-tree-id55 . -113) (undo-tree-id56 . -101) (undo-tree-id57 . -101) (undo-tree-id58 . -101) (undo-tree-id59 . -101) (undo-tree-id60 . -101) (undo-tree-id61 . -101) (undo-tree-id62 . -101) (undo-tree-id63 . -101) (undo-tree-id64 . -101) (undo-tree-id65 . -114) 28998) nil (26478 40124 150331 961000) 0 nil])
([nil nil ((28889 . 28894) (#("i" 0 1 (fontified nil)) . -28889) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (28877 . 28890)) nil (26478 40124 150326 401000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28914) (undo-tree-id46 . 1) (undo-tree-id47 . -1)) nil (26478 40124 150323 816000) 0 nil])
([nil nil ((28923 . 28928) (#("i" 0 1 (fontified nil)) . -28923) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (28917 . 28924) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -28917) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (28914 . 28918)) nil (26478 40124 150321 311000) 0 nil])
([nil nil ((28933 . 28935) (#("i" 0 1 (fontified nil)) . -28933) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (28929 . 28934) (#("i" 0 1 (fontified nil)) . -28929) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (28927 . 28930) (#("a" 0 1 (fontified t)) . -28927) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 28928 (28927 . 28928)) nil (26478 40124 150279 684000) 0 nil])
([nil nil ((28959 . 28962) (28957 . 28959) (28957 . 28958) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image48}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 28957) (undo-tree-id74 . -113) (undo-tree-id75 . -113) (undo-tree-id76 . -16) (undo-tree-id77 . -113) (undo-tree-id78 . -16) (undo-tree-id79 . -113) 29070 (t 26478 40124 157196 933000)) nil (26478 40145 8506 742000) 0 nil])
([nil nil ((28962 . 28963) (#("
" 0 1 (fontified t)) . -28962) (undo-tree-id71 . 1) (undo-tree-id72 . 1) (#("
" 0 1 (fontified t)) . -28962) (undo-tree-id73 . 1) 28961) nil (26478 40145 8502 333000) 0 nil])
([nil nil ((28982 . 28983) (28973 . 28982) (#("i" 0 1 (fontified nil)) . -28973) (undo-tree-id70 . -1) (28963 . 28974)) nil (26478 40145 8497 665000) 0 nil])
([nil nil ((#("the " 0 4 (fontified t)) . 28967) (undo-tree-id80 . -3) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -4) (undo-tree-id84 . -4) (undo-tree-id85 . -4) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -4) (t 26478 40145 16042 424000)) nil (26478 40147 455563 868000) 0 nil])
([nil nil ((28996 . 29004) (28996 . 28997) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image49}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 60 (face font-lock-keyword-face fontified t) 60 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 28996) (undo-tree-id255 . -110) (undo-tree-id256 . -113) (undo-tree-id257 . -9) (undo-tree-id258 . -110) (undo-tree-id259 . -110) 29106 (t 26478 40147 462024 309000)) nil (26478 40189 537341 916000) 0 nil])
([nil nil ((29004 . 29005)) nil (26478 40189 537340 203000) 0 nil])
([nil nil ((29005 . 29006) (#("
" 0 1 (fontified t)) . -29005) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . -1) (#("
" 0 1 (fontified t)) . -29005) (undo-tree-id253 . 1) (undo-tree-id254 . -1) 29004) nil (26478 40189 537339 441000) 0 nil])
([nil nil ((29041 . 29046) (29041 . 29042) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image50}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 90 (face font-lock-keyword-face fontified t) 90 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29041) (undo-tree-id114 . -109) (undo-tree-id115 . -113) (undo-tree-id116 . -8) (undo-tree-id117 . -109) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -23) (undo-tree-id158 . -23) (undo-tree-id159 . -23) (undo-tree-id160 . -23) (undo-tree-id161 . -23) (undo-tree-id162 . -23) (undo-tree-id163 . -23) (undo-tree-id164 . -23) (undo-tree-id165 . -23) (undo-tree-id166 . -23) (undo-tree-id167 . -23) (undo-tree-id168 . -23) (undo-tree-id169 . -23) (undo-tree-id170 . -23) (undo-tree-id171 . -23) (undo-tree-id172 . -23) (undo-tree-id173 . -23) (undo-tree-id174 . -35) (undo-tree-id175 . -35) (undo-tree-id176 . -35) (undo-tree-id177 . -35) (undo-tree-id178 . -35) (undo-tree-id179 . -93) (undo-tree-id180 . -93) (undo-tree-id181 . -93) (undo-tree-id182 . -93) (undo-tree-id183 . -93) (undo-tree-id184 . -93) (undo-tree-id185 . -93) (undo-tree-id186 . -93) (undo-tree-id187 . -93) (undo-tree-id188 . -93) (undo-tree-id189 . -93) (undo-tree-id190 . -93) (undo-tree-id191 . -93) (undo-tree-id192 . -93) (undo-tree-id193 . -93) (undo-tree-id194 . -93) (undo-tree-id195 . -93) (undo-tree-id196 . -93) (undo-tree-id197 . -93) (undo-tree-id198 . -93) (undo-tree-id199 . -101) (undo-tree-id200 . -109) (undo-tree-id201 . -109) (undo-tree-id202 . -109) (undo-tree-id203 . -109) (undo-tree-id204 . -109) (undo-tree-id205 . -109) (undo-tree-id206 . -109) (undo-tree-id207 . -109) (undo-tree-id208 . -109) (undo-tree-id209 . -109) (undo-tree-id210 . -109) (undo-tree-id211 . -109) (undo-tree-id212 . -109) (undo-tree-id213 . -109) (undo-tree-id214 . -109) (undo-tree-id215 . -109) (undo-tree-id216 . -109) (undo-tree-id217 . -109) (undo-tree-id218 . -109) (undo-tree-id219 . -109) (undo-tree-id220 . -109) (undo-tree-id221 . -109) (undo-tree-id222 . -109) (undo-tree-id223 . -109) (undo-tree-id224 . -109) (undo-tree-id225 . -109) (undo-tree-id226 . -109) (undo-tree-id227 . -109) (undo-tree-id228 . -109) (undo-tree-id229 . -109) (undo-tree-id230 . -109) (undo-tree-id231 . -109) (undo-tree-id232 . -109) (undo-tree-id233 . -109) (undo-tree-id234 . -109) (undo-tree-id235 . -109) (undo-tree-id236 . -109) (undo-tree-id237 . -109) (undo-tree-id238 . -109) (undo-tree-id239 . -109) (undo-tree-id240 . -109) (undo-tree-id241 . -109) (undo-tree-id242 . -109) (undo-tree-id243 . -109) (undo-tree-id244 . -109) (undo-tree-id245 . -109) (undo-tree-id246 . -109) (undo-tree-id247 . -109) (undo-tree-id248 . -114) (undo-tree-id249 . -114) 29150) nil (26478 40189 537335 334000) 0 nil])
([nil nil ((29060 . 29065) (#("i" 0 1 (fontified nil)) . -29060) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (29047 . 29061) (#("i" 0 1 (fontified nil)) . -29047) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (29046 . 29048)) nil (26478 40189 537239 224000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image51}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29067) (undo-tree-id359 . -114) (undo-tree-id360 . -113) (undo-tree-id361 . -113) (undo-tree-id362 . -16) (undo-tree-id363 . -113) (undo-tree-id364 . -113) (undo-tree-id365 . -113) 29180 (t 26478 40189 546712 608000)) nil (26478 40211 868021 742000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29066) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1)) nil (26478 40211 868019 218000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29066) (undo-tree-id348 . 1) (undo-tree-id349 . -1)) nil (26478 40211 868014 809000) 0 nil])
([nil nil ((29080 . 29082) (#("o" 0 1 (fontified t)) . -29080) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#("s" 0 1 (fontified t)) . -29081) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) 29082 (29079 . 29082) (#("i" 0 1 (fontified nil)) . -29079) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (29073 . 29080) (#("i" 0 1 (fontified nil)) . -29073) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (29071 . 29074) (29067 . 29071) (29065 . 29067)) nil (26478 40211 868011 874000) 0 nil])
([nil nil ((#("a " 0 2 (fontified t)) . 29076) (undo-tree-id260 . -1) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -2)) nil (26478 40211 867983 551000) 0 nil])
([nil nil ((29174 . 29177) (#("i" 0 1 (fontified nil)) . -29174) (undo-tree-id366 . -1) (29171 . 29175) (29161 . 29171) (#("t" 0 1 (face (subscript) display (raise -0.2) fontified t)) . -29161) (undo-tree-id367 . -1) 29162 (29153 . 29162) (29152 . 29153) (#("i" 0 1 (fontified nil)) . -29152) (undo-tree-id368 . -1) (29145 . 29153) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29145) (undo-tree-id369 . -1) (29139 . 29146) (#("i" 0 1 (fontified nil)) . -29139) (undo-tree-id370 . -1) (29139 . 29140) (#("$" 0 1 (fontified t)) . -29139) (undo-tree-id371 . -1) 29140 (29139 . 29140) (29139 . 29140) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image52}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29139) (undo-tree-id372 . -113) (undo-tree-id373 . -113) (undo-tree-id374 . -16) (undo-tree-id375 . -113) (undo-tree-id376 . -113) 29252 (t 26478 40211 877547 232000)) nil (26478 40257 986985 904000) 0 nil])
([nil nil ((29139 . 29156) (29178 . 29193)) nil (26478 40257 986965 526000) 0 nil])
([nil nil ((29169 . 29170) (#("i" 0 1 (face (subscript) fontified t display (raise -0.2))) . 29169) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (t 26478 40257 997205 650000)) nil (26478 40274 22790 168000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image53}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image54}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 29212) (undo-tree-id614 . -88) (undo-tree-id615 . -228) (undo-tree-id616 . -228) (undo-tree-id617 . -12) (undo-tree-id618 . -228) (undo-tree-id619 . -228) 29440 (t 26478 40274 32086 871000)) nil (26478 40350 919087 912000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image55}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29241) (undo-tree-id610 . -101) (undo-tree-id611 . -113) (undo-tree-id612 . -101) (undo-tree-id613 . -101) 29342) nil (26478 40350 919085 337000) 0 nil])
([nil nil ((29245 . 29252) (#("i" 0 1 (fontified nil)) . -29245) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (29243 . 29246) (#("w" 0 1 (fontified t)) . -29243) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 29244 (29242 . 29244) (29241 . 29242) (29232 . 29241) (29230 . 29232) (#("i" 0 1 (fontified nil)) . -29230) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (29230 . 29231) (#("p" 0 1 (fontified t)) . -29230) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) 29231 (29224 . 29231) (#("i" 0 1 (fontified nil)) . -29224) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (29220 . 29225) (#("t" 0 1 (fontified t)) . -29220) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) 29221 (29219 . 29221) (#("i" 0 1 (fontified nil)) . -29219) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (29212 . 29220)) nil (26478 40350 919081 660000) 0 nil])
([nil nil ((29251 . 29252) (#(" " 0 1 (fontified nil)) . 29251) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (#("
" 0 1 (fontified t)) . -29252) (undo-tree-id528 . 1) (undo-tree-id529 . -1) 29251) nil (26478 40350 919013 12000) 0 nil])
([nil nil ((29293 . 29301) (29290 . 29293) (#("i" 0 1 (fontified nil)) . -29290) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (29289 . 29291) (#("a" 0 1 (fontified t)) . -29289) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (#(" " 0 1 (fontified t)) . -29290) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 29291 (29286 . 29291) (#("i" 0 1 (fontified nil)) . -29286) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (29283 . 29287) (#("i" 0 1 (fontified nil)) . -29283) (undo-tree-id490 . -1) (29280 . 29284) (29279 . 29280) 29251) nil (26478 40350 918994 797000) 0 nil])
([nil nil ((29301 . 29302) (#("
" 0 1 (fontified t)) . -29301) (undo-tree-id408 . 1) (undo-tree-id409 . 1) (undo-tree-id410 . -1) (#("
" 0 1 (fontified t)) . -29301) (undo-tree-id411 . -1) (undo-tree-id412 . 1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) 29300) nil (26478 40350 918964 791000) 0 nil])
([nil nil ((29389 . 29390) (#("." 0 1 (fontified t)) . -29389) (undo-tree-id620 . -1) 29390 (29386 . 29390) (29371 . 29386) (29358 . 29371) (#("h" 0 1 (face font-lock-keyword-face fontified t)) . -29358) (undo-tree-id621 . -1) 29359 (29353 . 29359) (29353 . 29354) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image56}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 63 (face font-lock-keyword-face fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29353) (undo-tree-id622 . -113) (undo-tree-id623 . -113) (undo-tree-id624 . -16) (undo-tree-id625 . -113) (undo-tree-id626 . -113) (undo-tree-id627 . -113) 29466 (t 26478 40350 932517 275000)) nil (26478 40380 566328 228000) 0 nil])
([nil nil ((29353 . 29370) (29391 . 29406)) nil (26478 40380 566311 897000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-keyword-face fontified t)) . 29374) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (t 26478 40380 576297 728000)) nil (26478 40434 22567 229000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image57}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image58}
	\\caption*{}
\\end{figure}
" 0 1 (face font-lock-keyword-face fontified t) 1 2 (face font-lock-keyword-face fontified t) 2 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-keyword-face fontified t) 33 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 117 (face font-lock-keyword-face fontified t) 117 118 (face font-lock-keyword-face fontified t) 118 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 133 (fontified t) 133 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 29424) (undo-tree-id706 . -219) (undo-tree-id707 . -228) (undo-tree-id708 . -3) (undo-tree-id709 . -219) (undo-tree-id710 . -219) 29643 (t 26478 40434 32901 733000)) nil (26478 40529 915564 548000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image59}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 15 (fontified t) 15 16 (fontified t) 16 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29453) (undo-tree-id702 . -101) (undo-tree-id703 . -113) (undo-tree-id704 . -101) (undo-tree-id705 . -101) 29554) nil (26478 40529 915562 444000) 0 nil])
([nil nil ((29515 . 29523) (29500 . 29515) (#("i" 0 1 (fontified nil)) . -29500) (undo-tree-id698 . -1) (29496 . 29501) (#("i" 0 1 (fontified nil)) . -29496) (undo-tree-id699 . -1) (29494 . 29497) (29490 . 29494) (29489 . 29490) (29473 . 29489) (29464 . 29473) (#("i" 0 1 (fontified nil)) . -29464) (undo-tree-id700 . -1) (29452 . 29465) (29451 . 29452) (29444 . 29451) (29435 . 29444) (#("i" 0 1 (fontified nil)) . -29435) (undo-tree-id701 . -1) (29423 . 29436)) nil (26478 40529 915560 70000) 0 nil])
([nil nil ((#("weights for the cell state;
" 0 22 (fontified t) 22 28 (fontified t)) . 29525) (undo-tree-id661 . -28) (undo-tree-id662 . -27) (undo-tree-id663 . -28) (undo-tree-id664 . -28) (undo-tree-id665 . -28) (undo-tree-id666 . -28) (undo-tree-id667 . -28) (undo-tree-id668 . -26) (undo-tree-id669 . -26) (undo-tree-id670 . -26) (undo-tree-id671 . -26) (undo-tree-id672 . -26) (undo-tree-id673 . -26) (undo-tree-id674 . -26) (undo-tree-id675 . -26) (undo-tree-id676 . -26) (undo-tree-id677 . -26) (undo-tree-id678 . -26) (undo-tree-id679 . -26) (undo-tree-id680 . -26) (undo-tree-id681 . -26) (undo-tree-id682 . -26) (undo-tree-id683 . -26) (undo-tree-id684 . -26) (undo-tree-id685 . -26) (undo-tree-id686 . -26) (undo-tree-id687 . -26) (undo-tree-id688 . -26) (undo-tree-id689 . -26) (undo-tree-id690 . -26) (undo-tree-id691 . -26) (undo-tree-id692 . -26) (undo-tree-id693 . -26) (undo-tree-id694 . -26) (undo-tree-id695 . -26) (undo-tree-id696 . -26) (undo-tree-id697 . -28) 29551) nil (26478 40529 915557 445000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29525) (undo-tree-id659 . 1) (undo-tree-id660 . -1)) nil (26478 40529 915541 74000) 0 nil])
([nil nil ((#("cell state.
" 0 11 (fontified t) 11 12 (fontified t)) . 29525) (undo-tree-id655 . -11) (undo-tree-id656 . 12) (undo-tree-id657 . -11) (undo-tree-id658 . -12)) nil (26478 40529 915539 762000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29525) (undo-tree-id654 . 1)) nil (26478 40529 915537 47000) 0 nil])
([nil nil ((29596 . 29600) (29589 . 29596) (#("{" 0 1 (fontified t)) . -29589) (undo-tree-id646 . -1) 29590 (29576 . 29590) (29568 . 29576) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -29568) (undo-tree-id647 . -1) (29566 . 29569) (#("/" 0 1 (fontified t)) . -29566) (undo-tree-id648 . -1) 29567 (29566 . 29567) (#("@" 0 1 (fontified t)) . -29566) (undo-tree-id649 . -1) 29567 (29562 . 29567) (29562 . 29563) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image60}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 96 (face font-lock-keyword-face fontified t) 96 97 (face font-lock-keyword-face fontified t) 97 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 29562) (undo-tree-id650 . -101) (undo-tree-id651 . -113) (undo-tree-id652 . -101) (undo-tree-id653 . -101) 29663) nil (26478 40529 915535 644000) 0 nil])
([nil nil ((29562 . 29579) (29601 . 29616)) nil (26478 40529 915529 513000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29633) (undo-tree-id645 . -1)) nil (26478 40529 915526 447000) 0 nil])
([nil nil ((nil fontified nil 29602 . 29603) (nil face (subscript) 29602 . 29603) (29602 . 29603) (#("h" 0 1 (face (subscript) fontified t display (raise -0.2))) . 29602) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (t 26478 40529 926191 535000)) nil (26478 40553 22424 679000) 0 nil])
([nil nil ((29672 . 29674) (#("i" 0 1 (fontified nil)) . -29672) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (29666 . 29673) (29665 . 29666) (29664 . 29665) (29655 . 29664) (29646 . 29655) (#("i" 0 1 (fontified nil)) . -29646) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (29634 . 29647) (29634 . 29635) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image61}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image62}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 17 (fontified t) 17 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 130 (fontified t) 130 131 (fontified t) 131 132 (fontified t) 132 133 (fontified t) 133 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 29634) (undo-tree-id749 . -228) (undo-tree-id750 . -228) (undo-tree-id751 . -16) (undo-tree-id752 . -228) (undo-tree-id753 . -16) (undo-tree-id754 . -16) (undo-tree-id755 . -16) (undo-tree-id756 . -16) (undo-tree-id757 . -16) (undo-tree-id758 . -16) (undo-tree-id759 . -16) (undo-tree-id760 . -16) (undo-tree-id761 . -16) (undo-tree-id762 . -16) (undo-tree-id763 . -16) (undo-tree-id764 . -16) (undo-tree-id765 . -16) (undo-tree-id766 . -16) (undo-tree-id767 . -16) (undo-tree-id768 . -16) (undo-tree-id769 . -16) (undo-tree-id770 . -16) (undo-tree-id771 . -16) (undo-tree-id772 . -16) (undo-tree-id773 . -16) (undo-tree-id774 . -16) (undo-tree-id775 . -16) (undo-tree-id776 . -16) (undo-tree-id777 . -16) (undo-tree-id778 . -16) (undo-tree-id779 . -16) (undo-tree-id780 . -16) (undo-tree-id781 . -16) (undo-tree-id782 . -16) (undo-tree-id783 . -16) (undo-tree-id784 . -16) (undo-tree-id785 . -16) (undo-tree-id786 . -16) (undo-tree-id787 . -16) (undo-tree-id788 . -16) (undo-tree-id789 . -16) (undo-tree-id790 . -16) (undo-tree-id791 . -16) (undo-tree-id792 . -16) (undo-tree-id793 . -16) (undo-tree-id794 . -16) (undo-tree-id795 . -29) (undo-tree-id796 . -29) (undo-tree-id797 . -29) (undo-tree-id798 . -29) (undo-tree-id799 . -29) (undo-tree-id800 . -29) (undo-tree-id801 . -29) (undo-tree-id802 . -29) (undo-tree-id803 . -29) (undo-tree-id804 . -29) (undo-tree-id805 . -29) (undo-tree-id806 . -29) (undo-tree-id807 . -29) (undo-tree-id808 . -29) (undo-tree-id809 . -29) (undo-tree-id810 . -29) (undo-tree-id811 . -29) (undo-tree-id812 . -43) (undo-tree-id813 . -43) (undo-tree-id814 . -43) (undo-tree-id815 . -43) (undo-tree-id816 . -43) (undo-tree-id817 . -100) (undo-tree-id818 . -100) (undo-tree-id819 . -100) (undo-tree-id820 . -100) (undo-tree-id821 . -100) (undo-tree-id822 . -100) (undo-tree-id823 . -113) (undo-tree-id824 . -113) (undo-tree-id825 . -113) (undo-tree-id826 . -113) (undo-tree-id827 . -113) (undo-tree-id828 . -113) (undo-tree-id829 . -114) (undo-tree-id830 . -114) (undo-tree-id831 . -114) (undo-tree-id832 . -114) (undo-tree-id833 . -114) (undo-tree-id834 . -114) (undo-tree-id835 . -131) (undo-tree-id836 . -131) (undo-tree-id837 . -131) (undo-tree-id838 . -131) (undo-tree-id839 . -131) (undo-tree-id840 . -131) (undo-tree-id841 . -144) (undo-tree-id842 . -144) (undo-tree-id843 . -144) (undo-tree-id844 . -144) (undo-tree-id845 . -144) (undo-tree-id846 . -144) (undo-tree-id847 . -158) (undo-tree-id848 . -158) (undo-tree-id849 . -158) (undo-tree-id850 . -158) (undo-tree-id851 . -158) (undo-tree-id852 . -158) (undo-tree-id853 . -215) (undo-tree-id854 . -215) (undo-tree-id855 . -215) (undo-tree-id856 . -215) (undo-tree-id857 . -215) (undo-tree-id858 . -215) (undo-tree-id859 . -215) (undo-tree-id860 . -215) (undo-tree-id861 . -215) (undo-tree-id862 . -215) (undo-tree-id863 . -215) (undo-tree-id864 . -215) (undo-tree-id865 . -215) (undo-tree-id866 . -215) (undo-tree-id867 . -215) (undo-tree-id868 . -215) (undo-tree-id869 . -215) (undo-tree-id870 . -215) (undo-tree-id871 . -215) (undo-tree-id872 . -215) (undo-tree-id873 . -215) (undo-tree-id874 . -216) (undo-tree-id875 . -228) (undo-tree-id876 . -228) (undo-tree-id877 . -228) (undo-tree-id878 . -228) (undo-tree-id879 . -228) (undo-tree-id880 . -228) (undo-tree-id881 . -228) (undo-tree-id882 . -228) (undo-tree-id883 . -228) (undo-tree-id884 . -228) (undo-tree-id885 . -228) (undo-tree-id886 . -228) (undo-tree-id887 . -228) (undo-tree-id888 . -228) (undo-tree-id889 . -228) (undo-tree-id890 . -228) (undo-tree-id891 . -228) (undo-tree-id892 . -228) (undo-tree-id893 . -228) (undo-tree-id894 . -228) (undo-tree-id895 . -228) (undo-tree-id896 . -228) (undo-tree-id897 . -228) (undo-tree-id898 . -228) (undo-tree-id899 . -228) (undo-tree-id900 . -228) (undo-tree-id901 . -228) (undo-tree-id902 . -228) (undo-tree-id903 . -229) (undo-tree-id904 . -229) 29862 (t 26478 40553 33020 371000)) nil (26478 40587 250846 662000) 0 nil])
([nil nil ((29674 . 29675) (#("
" 0 1 (fontified t)) . -29674) (undo-tree-id732 . 1) (undo-tree-id733 . 1) (undo-tree-id734 . -1) (#("
" 0 1 (fontified t)) . -29674) (undo-tree-id735 . 1) (undo-tree-id736 . -1) 29673) nil (26478 40587 250659 421000) 0 nil])
([nil nil ((30336 . 30348) (30333 . 30336) (#("h" 0 1 (fontified t)) . -30333) (undo-tree-id905 . -1) (#("-" 0 1 (fontified t)) . -30334) (undo-tree-id906 . -1) 30335 (30322 . 30335) (30316 . 30322) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30316) (undo-tree-id907 . -1) (30310 . 30317) (30310 . 30311) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image64}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 41 (face font-lock-keyword-face fontified t) 41 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 79 (face font-lock-builtin-face fontified t) 79 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 93 (face font-lock-keyword-face fontified t) 93 94 (face font-lock-keyword-face fontified t) 94 95 (face font-lock-keyword-face fontified t) 95 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30310) (undo-tree-id908 . -108) (undo-tree-id909 . -113) (undo-tree-id910 . -7) (undo-tree-id911 . -108) (undo-tree-id912 . -108) 30418 (t 26478 40587 258766 823000)) nil (26478 40638 181049 354000) 0 nil])
([nil nil ((30310 . 30327) (30349 . 30364)) nil (26478 40638 181033 905000) 0 nil])
([nil nil ((nil fontified nil 30351 . 30352) (nil face (subscript) 30351 . 30352) (30351 . 30352) (#("_" 0 1 (face (subscript) fontified t display (raise -0.2))) . 30351) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (t 26478 40638 188389 667000)) nil (26478 40658 987129 676000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image65}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image47}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 201 (face font-lock-builtin-face fontified t) 201 204 (fontified t) 204 210 (face font-lock-keyword-face fontified t) 210 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 30382) (undo-tree-id1610 . -228) (undo-tree-id1611 . -228) (undo-tree-id1612 . -16) (undo-tree-id1613 . -228) (undo-tree-id1614 . -228) 30610 (t 26478 40658 995235 557000)) nil (26478 40775 738716 631000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image66}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 63 (face font-lock-keyword-face fontified t) 63 64 (face font-lock-keyword-face fontified t) 64 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 92 (face font-lock-keyword-face fontified t) 92 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 104 (face font-lock-keyword-face fontified t) 104 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30414) (undo-tree-id1606 . -101) (undo-tree-id1607 . -113) (undo-tree-id1608 . -101) (undo-tree-id1609 . -101) 30515) nil (26478 40775 738713 726000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -30425) (undo-tree-id1600 . -1) (#(" " 0 1 (fontified t)) . -30426) (undo-tree-id1601 . -1) 30427 (30422 . 30427) (#("i" 0 1 (fontified nil)) . -30422) (undo-tree-id1602 . -1) (30416 . 30423) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30416) (undo-tree-id1603 . -1) (30413 . 30417) (#("\\" 0 1 (fontified t)) . -30413) (undo-tree-id1604 . -1) 30414 (30413 . 30414) (30403 . 30413) (30394 . 30403) (#("i" 0 1 (fontified nil)) . -30394) (undo-tree-id1605 . -1) (30382 . 30395)) nil (26478 40775 738711 301000) 0 nil])
([nil nil ((30424 . 30425) (#(" " 0 1 (fontified nil)) . 30424) (#("
" 0 1 (fontified t)) . -30425) (undo-tree-id1599 . 1) 30424) nil (26478 40775 738708 376000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -30413) (30412 . 30413)) nil (26478 40775 738707 93000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -30474) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (#("a" 0 1 (fontified t)) . -30475) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (#("t" 0 1 (fontified t)) . -30476) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (#("r" 0 1 (fontified t)) . -30477) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (#("i" 0 1 (fontified t)) . -30478) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (#("x" 0 1 (fontified t)) . -30479) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) 30480 (30478 . 30480) (#("i" 0 1 (fontified nil)) . -30478) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (30469 . 30479) (#("i" 0 1 (fontified nil)) . -30469) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (30464 . 30470) (30462 . 30464) (#("i" 0 1 (fontified nil)) . -30462) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (30456 . 30463)) nil (26478 40775 738699 519000) 0 nil])
([nil nil ((30473 . 30474) (#(" " 0 1 (fontified nil)) . 30473) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (#("
" 0 1 (fontified t)) . -30474) (undo-tree-id1081 . 1) (undo-tree-id1082 . 1) (undo-tree-id1083 . -1) 30473) nil (26478 40775 738521 746000) 0 nil])
([nil nil ((30568 . 30577) (30549 . 30568) (30545 . 30549) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30545) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (30539 . 30546) (30539 . 30540) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image67}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 24 (face font-lock-keyword-face fontified t) 24 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 63 (face font-lock-keyword-face fontified t) 63 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 76 (face font-lock-builtin-face fontified t) 76 77 (face font-lock-builtin-face fontified t) 77 78 (face font-lock-builtin-face fontified t) 78 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30539) (undo-tree-id1855 . -113) (undo-tree-id1856 . -113) (undo-tree-id1857 . -16) (undo-tree-id1858 . -113) (undo-tree-id1859 . -101) (undo-tree-id1860 . -113) (undo-tree-id1861 . -113) (undo-tree-id1862 . -113) (undo-tree-id1863 . -100) (undo-tree-id1864 . -113) (undo-tree-id1865 . -113) (undo-tree-id1866 . -113) (undo-tree-id1867 . -113) (undo-tree-id1868 . -114) (undo-tree-id1869 . -114) 30652 (t 26478 40775 749370 814000)) nil (26478 40804 813341 303000) 0 nil])
([nil nil ((30539 . 30556) (30578 . 30593)) nil (26478 40806 952583 564000) 0 nil] [nil nil ((30539 . 30540) (30539 . 30540) (#("r_t=\\sigma(W_r\\cdot[h_{t-1},x_t]+b_r),
" 0 2 (fontified t) 2 3 (face (subscript) display (raise -0.2) fontified t) 3 4 (fontified t) 4 10 (face font-lock-keyword-face fontified t) 10 13 (fontified t) 13 14 (face (subscript) display (raise -0.2) fontified t) 14 19 (face font-lock-keyword-face fontified t) 19 22 (fontified t) 22 27 (face (subscript) display (raise -0.2) fontified t) 27 30 (fontified t) 30 31 (face (subscript) display (raise -0.2) fontified t) 31 35 (fontified t) 35 36 (face (subscript) display (raise -0.2) fontified t) 36 38 (fontified t) 38 39 (fontified t)) . 30539) (undo-tree-id1615 . -37) (undo-tree-id1616 . 1) (undo-tree-id1617 . -38) (undo-tree-id1618 . -37) (undo-tree-id1619 . -37) (undo-tree-id1620 . -6) (undo-tree-id1621 . -6) (undo-tree-id1622 . -6) (undo-tree-id1623 . -6) (undo-tree-id1624 . -6) (undo-tree-id1625 . -29) (undo-tree-id1626 . -29) (undo-tree-id1627 . -29) (undo-tree-id1628 . -29) (undo-tree-id1629 . -29) (undo-tree-id1630 . -29) (undo-tree-id1631 . -29) (undo-tree-id1632 . -29) (undo-tree-id1633 . -29) (undo-tree-id1634 . -29) (undo-tree-id1635 . -29) (undo-tree-id1636 . -29) (undo-tree-id1637 . -30) (undo-tree-id1638 . -30) (undo-tree-id1639 . -30) (undo-tree-id1640 . -30) (undo-tree-id1641 . -30) (undo-tree-id1642 . -30) (undo-tree-id1643 . -30) (undo-tree-id1644 . -30) (undo-tree-id1645 . -30) (undo-tree-id1646 . -30) (undo-tree-id1647 . -30) (undo-tree-id1648 . -30) (undo-tree-id1649 . -30) (undo-tree-id1650 . -30) (undo-tree-id1651 . -30) (undo-tree-id1652 . -31) (undo-tree-id1653 . -31) (undo-tree-id1654 . -31) (undo-tree-id1655 . -31) (undo-tree-id1656 . -31) (undo-tree-id1657 . -31) (undo-tree-id1658 . -31) (undo-tree-id1659 . -31) (undo-tree-id1660 . -31) (undo-tree-id1661 . -31) (undo-tree-id1662 . -31) (undo-tree-id1663 . -31) (undo-tree-id1664 . -31) (undo-tree-id1665 . -31) (undo-tree-id1666 . -31) (undo-tree-id1667 . -31) (undo-tree-id1668 . -31) (undo-tree-id1669 . -31) (undo-tree-id1670 . -31) (undo-tree-id1671 . -31) (undo-tree-id1672 . -32) (undo-tree-id1673 . -32) (undo-tree-id1674 . -32) (undo-tree-id1675 . -32) (undo-tree-id1676 . -32) (undo-tree-id1677 . -32) (undo-tree-id1678 . -32) (undo-tree-id1679 . -32) (undo-tree-id1680 . -32) (undo-tree-id1681 . -32) (undo-tree-id1682 . -32) (undo-tree-id1683 . -32) (undo-tree-id1684 . -32) (undo-tree-id1685 . -32) (undo-tree-id1686 . -32) (undo-tree-id1687 . -32) (undo-tree-id1688 . -32) (undo-tree-id1689 . -32) (undo-tree-id1690 . -32) (undo-tree-id1691 . -32) (undo-tree-id1692 . -32) (undo-tree-id1693 . -32) (undo-tree-id1694 . -33) (undo-tree-id1695 . -33) (undo-tree-id1696 . -33) (undo-tree-id1697 . -33) (undo-tree-id1698 . -33) (undo-tree-id1699 . -33) (undo-tree-id1700 . -33) (undo-tree-id1701 . -33) (undo-tree-id1702 . -33) (undo-tree-id1703 . -33) (undo-tree-id1704 . -33) (undo-tree-id1705 . -33) (undo-tree-id1706 . -33) (undo-tree-id1707 . -33) (undo-tree-id1708 . -33) (undo-tree-id1709 . -33) (undo-tree-id1710 . -33) (undo-tree-id1711 . -33) (undo-tree-id1712 . -33) (undo-tree-id1713 . -33) (undo-tree-id1714 . -34) (undo-tree-id1715 . -34) (undo-tree-id1716 . -34) (undo-tree-id1717 . -34) (undo-tree-id1718 . -34) (undo-tree-id1719 . -34) (undo-tree-id1720 . -34) (undo-tree-id1721 . -34) (undo-tree-id1722 . -34) (undo-tree-id1723 . -34) (undo-tree-id1724 . -34) (undo-tree-id1725 . -34) (undo-tree-id1726 . -34) (undo-tree-id1727 . -34) (undo-tree-id1728 . -34) (undo-tree-id1729 . -34) (undo-tree-id1730 . -34) (undo-tree-id1731 . -34) (undo-tree-id1732 . -34) (undo-tree-id1733 . -34) (undo-tree-id1734 . -35) (undo-tree-id1735 . -35) (undo-tree-id1736 . -35) (undo-tree-id1737 . -35) (undo-tree-id1738 . -35) (undo-tree-id1739 . -35) (undo-tree-id1740 . -35) (undo-tree-id1741 . -35) (undo-tree-id1742 . -35) (undo-tree-id1743 . -35) (undo-tree-id1744 . -35) (undo-tree-id1745 . -35) (undo-tree-id1746 . -35) (undo-tree-id1747 . -35) (undo-tree-id1748 . -35) (undo-tree-id1749 . -36) (undo-tree-id1750 . -36) (undo-tree-id1751 . -36) (undo-tree-id1752 . -36) (undo-tree-id1753 . -36) (undo-tree-id1754 . -36) (undo-tree-id1755 . -36) (undo-tree-id1756 . -36) (undo-tree-id1757 . -36) (undo-tree-id1758 . -36) (undo-tree-id1759 . -36) (undo-tree-id1760 . -36) (undo-tree-id1761 . -36) (undo-tree-id1762 . -36) (undo-tree-id1763 . -36) (undo-tree-id1764 . -36) (undo-tree-id1765 . -36) (undo-tree-id1766 . -36) (undo-tree-id1767 . -36) (undo-tree-id1768 . -36) (undo-tree-id1769 . -37) (undo-tree-id1770 . -37) (undo-tree-id1771 . -37) (undo-tree-id1772 . -37) (undo-tree-id1773 . -37) (undo-tree-id1774 . -37) (undo-tree-id1775 . -37) (undo-tree-id1776 . -37) (undo-tree-id1777 . -37) (undo-tree-id1778 . -37) (undo-tree-id1779 . -37) (undo-tree-id1780 . -37) (undo-tree-id1781 . -37) (undo-tree-id1782 . -37) (undo-tree-id1783 . -37) (undo-tree-id1784 . -37) (undo-tree-id1785 . -37) (undo-tree-id1786 . -37) (undo-tree-id1787 . -37) (undo-tree-id1788 . -37) (undo-tree-id1789 . -37) (undo-tree-id1790 . -37) (undo-tree-id1791 . -38) (undo-tree-id1792 . -38) (undo-tree-id1793 . -38) (undo-tree-id1794 . -38) (undo-tree-id1795 . -38) (undo-tree-id1796 . -38) (undo-tree-id1797 . -38) (undo-tree-id1798 . -38) (undo-tree-id1799 . -38) (undo-tree-id1800 . -38) (undo-tree-id1801 . -38) (undo-tree-id1802 . -38) (undo-tree-id1803 . -38) (undo-tree-id1804 . -38) (undo-tree-id1805 . -38) (undo-tree-id1806 . -37) (undo-tree-id1807 . -37) (undo-tree-id1808 . -37) (undo-tree-id1809 . -37) (undo-tree-id1810 . -37) (undo-tree-id1811 . -37) (undo-tree-id1812 . -37) (undo-tree-id1813 . -37) (undo-tree-id1814 . -37) (undo-tree-id1815 . -37) (undo-tree-id1816 . -37) (undo-tree-id1817 . -37) (undo-tree-id1818 . -37) (undo-tree-id1819 . -37) (undo-tree-id1820 . -37) (undo-tree-id1821 . -37) (undo-tree-id1822 . -37) (undo-tree-id1823 . -37) (undo-tree-id1824 . -37) (undo-tree-id1825 . -37) (undo-tree-id1826 . -37) (undo-tree-id1827 . -37) (undo-tree-id1828 . -37) (undo-tree-id1829 . -37) (undo-tree-id1830 . -37) (undo-tree-id1831 . -37) (undo-tree-id1832 . -37) (undo-tree-id1833 . -37) (undo-tree-id1834 . -37) (undo-tree-id1835 . -37) (undo-tree-id1836 . -37) (undo-tree-id1837 . -37) (undo-tree-id1838 . -37) (undo-tree-id1839 . -37) (undo-tree-id1840 . -37) (undo-tree-id1841 . -37) (undo-tree-id1842 . -37) (undo-tree-id1843 . -37) (undo-tree-id1844 . -37) (undo-tree-id1845 . -37) (undo-tree-id1846 . -37) (undo-tree-id1847 . -39) (undo-tree-id1848 . -39) 30576) ((30539 . 30578) (#("
" 0 1 (fontified nil)) . 30539) (undo-tree-id1870 . 1) (#("e" 0 1 (fontified t)) . 30539)) (26478 40804 813171 234000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image68}
	\\caption*{}
\\end{figure}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image69}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t) 115 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t latex-env-pair t) 122 128 (face font-lock-function-name-face fontified t latex-env-pair t) 128 129 (fontified t latex-env-pair t) 129 134 (fontified t) 134 144 (face font-lock-keyword-face fontified t) 144 146 (fontified t) 146 162 (face font-lock-keyword-face fontified t) 162 172 (fontified t) 172 182 (face font-lock-keyword-face fontified t) 182 184 (fontified t) 184 191 (face font-lock-builtin-face fontified t) 191 192 (face font-lock-builtin-face fontified t) 192 193 (face font-lock-builtin-face fontified t) 193 201 (face font-lock-builtin-face fontified t) 201 203 (fontified t) 203 204 (fontified t) 204 213 (face font-lock-keyword-face fontified t) 213 216 (fontified t) 216 219 (face font-lock-keyword-face fontified t) 219 220 (face font-lock-keyword-face fontified t) 220 221 (fontified t latex-env-pair t) 221 227 (face font-lock-function-name-face fontified t latex-env-pair t) 227 228 (fontified t latex-env-pair t) 228 229 (fontified t)) . 30612) (undo-tree-id2343 . -228) (undo-tree-id2344 . -228) (undo-tree-id2345 . -15) (undo-tree-id2346 . -228) (undo-tree-id2347 . -228) 30840 (t 26478 40806 963139 613000)) nil (26478 40989 425408 912000) 0 nil])
nil
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image70}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30649) (undo-tree-id2339 . -101) (undo-tree-id2340 . -113) (undo-tree-id2341 . -101) (undo-tree-id2342 . -101) 30750) nil (26478 40989 425406 548000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image71}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30704) (undo-tree-id2335 . -101) (undo-tree-id2336 . -113) (undo-tree-id2337 . -101) (undo-tree-id2338 . -101) 30805) nil (26478 40989 425405 115000) 0 nil])
([nil nil ((30623 . 30639) (#("i" 0 1 (fontified nil)) . -30623) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (30618 . 30624) (30611 . 30618)) nil (26478 40989 425403 152000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -30640) (undo-tree-id2328 . -1)) nil (26478 40989 425400 687000) 0 nil])
([nil nil ((30646 . 30649) (#("i" 0 1 (fontified nil)) . -30646) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (30640 . 30647)) nil (26478 40989 425399 735000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -30709) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (#("e" 0 1 (fontified t)) . -30710) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (#("s" 0 1 (fontified t)) . -30711) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (#("e" 0 1 (fontified t)) . -30712) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (#("t" 0 1 (fontified t)) . -30713) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) 30714 (30709 . 30714) (30697 . 30709) (#("i" 0 1 (fontified nil)) . -30697) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (30691 . 30698) (#("i" 0 1 (fontified nil)) . -30691) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (30688 . 30692) (30685 . 30688)) nil (26478 40989 425392 81000) 0 nil])
([nil nil ((30708 . 30709) (#(" " 0 1 (fontified nil)) . 30708) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (#("
" 0 1 (fontified t)) . -30709) (undo-tree-id1983 . 1) (undo-tree-id1984 . -1) 30708) nil (26478 40989 425214 649000) 0 nil])
([nil nil ((30794 . 30799) (#("t" 0 1 (face (subscript) display (raise -0.2) fontified t)) . -30794) (undo-tree-id2348 . -1) (#("-" 0 1 (fontified t)) . -30795) (undo-tree-id2349 . -1) 30796 (30792 . 30796) (#("\\" 0 1 (fontified t)) . -30792) (undo-tree-id2350 . -1) 30793 (30780 . 30793) (30765 . 30780) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30765) (undo-tree-id2351 . -1) (30763 . 30766) (#("h" 0 1 (fontified t)) . -30763) (undo-tree-id2352 . -1) 30764 (30763 . 30764) (t 26478 40989 436788 29000)) nil (26478 41078 869644 214000) 0 nil])
([nil nil ((30792 . 30793)) nil (26478 41078 869628 474000) 0 nil])
([nil nil ((30800 . 30811)) nil (26478 41078 869627 573000) 0 nil])
([nil nil ((30763 . 30780) (30812 . 30827)) nil (26478 41078 869622 223000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image72}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30845) (undo-tree-id2365 . -113) (undo-tree-id2366 . -113) (undo-tree-id2367 . -16) (undo-tree-id2368 . -113) (undo-tree-id2369 . -113) 30958 (t 26478 41078 880125 592000)) nil (26478 41123 937673 318000) 0 nil])
([nil nil ((30864 . 30868) (#("i" 0 1 (fontified nil)) . -30864) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (30863 . 30865) (30854 . 30863) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -30854) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (30845 . 30855)) nil (26478 41123 937666 84000) 0 nil])
([nil nil ((30991 . 30996) (#("i" 0 1 (fontified nil)) . -30991) (undo-tree-id2402 . -1) (30987 . 30992) (30979 . 30987) (30970 . 30979) (#("i" 0 1 (fontified nil)) . -30970) (undo-tree-id2403 . -1) (30964 . 30971) (#("i" 0 1 (fontified nil)) . -30964) (undo-tree-id2404 . -1) (30958 . 30965) (30958 . 30959) (#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image73}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 30958) (undo-tree-id2405 . -113) (undo-tree-id2406 . -113) (undo-tree-id2407 . -16) (undo-tree-id2408 . -113) (undo-tree-id2409 . -16) (undo-tree-id2410 . -113) 31071 (t 26478 41123 949791 690000)) nil (26478 41182 803782 784000) 0 nil])
([nil nil ((#("$b_h$ is a bias term for the candidate
" 0 3 (face tex-math fontified t) 3 4 (face (tex-math subscript) display (raise -0.2) fontified t) 4 5 (face tex-math fontified t) 5 38 (fontified t) 38 39 (fontified t)) . 30958) (undo-tree-id2399 . 1) (undo-tree-id2400 . -38) (undo-tree-id2401 . -37) 30995) nil (26478 41182 803777 174000) 0 nil])
([nil nil ((nil rear-nonsticky nil 30997 . 30998) (#("
" 0 1 (fontified nil)) . -31036) (30997 . 31037) 30959) nil (26478 41182 803775 430000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image74}
	\\caption*{}
\\end{figure}
" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 18 (fontified t) 18 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 32 (face font-lock-keyword-face fontified t) 32 33 (face font-lock-keyword-face fontified t) 33 34 (face font-lock-keyword-face fontified t) 34 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 88 (fontified t) 88 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 114 (fontified t)) . 31037) (undo-tree-id2395 . -101) (undo-tree-id2396 . -113) (undo-tree-id2397 . -101) (undo-tree-id2398 . -101) 31138) nil (26478 41182 803774 849000) 0 nil])
([nil nil ((31036 . 31037) (#("
" 0 1 (fontified t)) . -31036) (undo-tree-id2388 . 1) (#("
" 0 1 (fontified t)) . -31036) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) 30998) nil (26478 41182 803772 705000) 0 nil])
([nil nil ((#("for the candidate " 0 17 (fontified t) 17 18 (fontified t)) . 31019) (undo-tree-id2384 . -17) (undo-tree-id2385 . -17) (undo-tree-id2386 . -17) (undo-tree-id2387 . -17) 31036) nil (26478 41182 803768 938000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 30958) (undo-tree-id2382 . 1) (undo-tree-id2383 . -1)) nil (26478 41182 803765 973000) 0 nil])
([nil nil ((30973 . 30978) (#("i" 0 1 (fontified nil)) . -30973) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (30964 . 30974) (#("i" 0 1 (fontified nil)) . -30964) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (30958 . 30965)) nil (26478 41182 803761 825000) 0 nil])
([nil nil ((31074 . 31081) (#("i" 0 1 (fontified nil)) . -31074) (undo-tree-id2773 . -1) (31070 . 31075) (31069 . 31070) (t 26478 41182 812355 749000) 31036) nil (26478 41205 439832 884000) 0 nil])
([nil nil ((#("\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image75}
	\\caption*{}
\\end{figure}

" 0 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t latex-env-pair t) 7 13 (face font-lock-function-name-face fontified t latex-env-pair t) 13 14 (fontified t latex-env-pair t) 14 19 (fontified t) 19 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 47 (face font-lock-keyword-face fontified t) 47 57 (fontified t) 57 67 (face font-lock-keyword-face fontified t) 67 69 (fontified t) 69 86 (face font-lock-builtin-face fontified t) 86 89 (fontified t) 89 98 (face font-lock-keyword-face fontified t) 98 101 (fontified t) 101 105 (face font-lock-keyword-face fontified t) 105 106 (fontified t latex-env-pair t) 106 112 (face font-lock-function-name-face fontified t latex-env-pair t) 112 113 (fontified t latex-env-pair t) 113 115 (fontified t)) . 31082) (undo-tree-id2669 . -114) (undo-tree-id2670 . -114) (undo-tree-id2671 . -10) (undo-tree-id2672 . -114) (undo-tree-id2673 . -10) (undo-tree-id2674 . -10) (undo-tree-id2675 . -10) (undo-tree-id2676 . -10) (undo-tree-id2677 . -10) (undo-tree-id2678 . -10) (undo-tree-id2679 . -10) (undo-tree-id2680 . -10) (undo-tree-id2681 . -10) (undo-tree-id2682 . -10) (undo-tree-id2683 . -10) (undo-tree-id2684 . -10) (undo-tree-id2685 . -10) (undo-tree-id2686 . -10) (undo-tree-id2687 . -10) (undo-tree-id2688 . -10) (undo-tree-id2689 . -10) (undo-tree-id2690 . -10) (undo-tree-id2691 . -10) (undo-tree-id2692 . -10) (undo-tree-id2693 . -10) (undo-tree-id2694 . -10) (undo-tree-id2695 . -10) (undo-tree-id2696 . -10) (undo-tree-id2697 . -10) (undo-tree-id2698 . -10) (undo-tree-id2699 . -10) (undo-tree-id2700 . -10) (undo-tree-id2701 . -10) (undo-tree-id2702 . -10) (undo-tree-id2703 . -10) (undo-tree-id2704 . -10) (undo-tree-id2705 . -10) (undo-tree-id2706 . -10) (undo-tree-id2707 . -10) (undo-tree-id2708 . -10) (undo-tree-id2709 . -10) (undo-tree-id2710 . -10) (undo-tree-id2711 . -10) (undo-tree-id2712 . -25) (undo-tree-id2713 . -25) (undo-tree-id2714 . -25) (undo-tree-id2715 . -25) (undo-tree-id2716 . -25) (undo-tree-id2717 . -25) (undo-tree-id2718 . -25) (undo-tree-id2719 . -25) (undo-tree-id2720 . -25) (undo-tree-id2721 . -25) (undo-tree-id2722 . -25) (undo-tree-id2723 . -25) (undo-tree-id2724 . -25) (undo-tree-id2725 . -25) (undo-tree-id2726 . -25) (undo-tree-id2727 . -25) (undo-tree-id2728 . -25) (undo-tree-id2729 . -37) (undo-tree-id2730 . -37) (undo-tree-id2731 . -37) (undo-tree-id2732 . -37) (undo-tree-id2733 . -37) (undo-tree-id2734 . -95) (undo-tree-id2735 . -95) (undo-tree-id2736 . -95) (undo-tree-id2737 . -95) (undo-tree-id2738 . -95) (undo-tree-id2739 . -111) (undo-tree-id2740 . -111) (undo-tree-id2741 . -111) (undo-tree-id2742 . -111) (undo-tree-id2743 . -111) (undo-tree-id2744 . -114) (undo-tree-id2745 . -114) (undo-tree-id2746 . -114) (undo-tree-id2747 . -114) (undo-tree-id2748 . -114) (undo-tree-id2749 . -114) (undo-tree-id2750 . -114) (undo-tree-id2751 . -114) (undo-tree-id2752 . -114) (undo-tree-id2753 . -114) (undo-tree-id2754 . -114) (undo-tree-id2755 . -114) (undo-tree-id2756 . -114) (undo-tree-id2757 . -114) (undo-tree-id2758 . -114) (undo-tree-id2759 . -114) (undo-tree-id2760 . -114) (undo-tree-id2761 . -114) (undo-tree-id2762 . -114) (undo-tree-id2763 . -114) (undo-tree-id2764 . -114) (undo-tree-id2765 . -114) (undo-tree-id2766 . -114) (undo-tree-id2767 . -114) (undo-tree-id2768 . -114) (undo-tree-id2769 . -114) (undo-tree-id2770 . -114) (undo-tree-id2771 . -114) (undo-tree-id2772 . -115) 31196) nil (26478 41205 439830 28000) 0 nil])
([nil nil ((31080 . 31081) (#(" " 0 1 (fontified nil)) . 31080) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (#("
" 0 1 (fontified t)) . -31081) (undo-tree-id2540 . -1) (undo-tree-id2541 . 1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) 31070) nil (26478 41205 439787 238000) 0 nil])
([nil nil ((30863 . 30864) (t 26478 41205 451188 61000)) nil (26478 41248 208912 930000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -30864) (undo-tree-id2900 . -1) (undo-tree-id2901 . -1) (undo-tree-id2902 . -1) (undo-tree-id2903 . -1) (undo-tree-id2904 . -1) (undo-tree-id2905 . -1) (undo-tree-id2906 . -1) (undo-tree-id2907 . -1) (undo-tree-id2908 . -1) (undo-tree-id2909 . -1) (undo-tree-id2910 . -1) (undo-tree-id2911 . -1) (undo-tree-id2912 . -1) (undo-tree-id2913 . -1) (undo-tree-id2914 . -1) (undo-tree-id2915 . -1) (undo-tree-id2916 . -1) (undo-tree-id2917 . -1) (undo-tree-id2918 . -1) (undo-tree-id2919 . -1) (undo-tree-id2920 . -1) (undo-tree-id2921 . -1) (undo-tree-id2922 . -1) (undo-tree-id2923 . -1) (undo-tree-id2924 . -1) (undo-tree-id2925 . -1) (undo-tree-id2926 . -1) (undo-tree-id2927 . -1) (undo-tree-id2928 . -1) (undo-tree-id2929 . -1) (undo-tree-id2930 . -1) (undo-tree-id2931 . -1) (undo-tree-id2932 . -1) (undo-tree-id2933 . -1) (undo-tree-id2934 . -1) (undo-tree-id2935 . -1) (undo-tree-id2936 . -1) (undo-tree-id2937 . -1) (undo-tree-id2938 . -1) (undo-tree-id2939 . -1) (undo-tree-id2940 . -1) (undo-tree-id2941 . -1) (undo-tree-id2942 . -1) (undo-tree-id2943 . -1) (undo-tree-id2944 . -1) (undo-tree-id2945 . -1) (undo-tree-id2946 . -1) (undo-tree-id2947 . -1) (undo-tree-id2948 . -1) (undo-tree-id2949 . -1) (undo-tree-id2950 . -1) (undo-tree-id2951 . -1) (undo-tree-id2952 . -1) (undo-tree-id2953 . -1) (undo-tree-id2954 . -1) (undo-tree-id2955 . -1) (undo-tree-id2956 . -1) (undo-tree-id2957 . -1) (undo-tree-id2958 . -1) (undo-tree-id2959 . -1) (undo-tree-id2960 . -1) (undo-tree-id2961 . -1) (undo-tree-id2962 . -1) (undo-tree-id2963 . -1) (undo-tree-id2964 . -1) (undo-tree-id2965 . -1) (undo-tree-id2966 . -1) (undo-tree-id2967 . -1) (undo-tree-id2968 . -1) (undo-tree-id2969 . -1) (undo-tree-id2970 . -1) (undo-tree-id2971 . -1) (undo-tree-id2972 . -1) (undo-tree-id2973 . -1) (undo-tree-id2974 . -1) (undo-tree-id2975 . -1) (undo-tree-id2976 . -1) (undo-tree-id2977 . -1) (undo-tree-id2978 . -1) (undo-tree-id2979 . -1) (undo-tree-id2980 . -1) (undo-tree-id2981 . -1) (undo-tree-id2982 . -1) (undo-tree-id2983 . -1) (undo-tree-id2984 . -1) (undo-tree-id2985 . -1) (undo-tree-id2986 . -1) (undo-tree-id2987 . -1) (undo-tree-id2988 . -1) (undo-tree-id2989 . -1) (undo-tree-id2990 . -1) (undo-tree-id2991 . -1) (undo-tree-id2992 . -1) (undo-tree-id2993 . -1) (undo-tree-id2994 . -1) (undo-tree-id2995 . -1) (undo-tree-id2996 . -1) (undo-tree-id2997 . -1) (undo-tree-id2998 . -1) (undo-tree-id2999 . -1) (undo-tree-id3000 . -1) (undo-tree-id3001 . -1) (undo-tree-id3002 . -1) (undo-tree-id3003 . -1) (undo-tree-id3004 . -1) (undo-tree-id3005 . -1) (undo-tree-id3006 . -1) (undo-tree-id3007 . -1) (undo-tree-id3008 . -1) (undo-tree-id3009 . -1) (undo-tree-id3010 . -1) (undo-tree-id3011 . -1) (undo-tree-id3012 . -1) (undo-tree-id3013 . -1) (undo-tree-id3014 . -1) (undo-tree-id3015 . -1) (undo-tree-id3016 . -1) (undo-tree-id3017 . -1) (undo-tree-id3018 . -1) (undo-tree-id3019 . -1) (undo-tree-id3020 . -1) (undo-tree-id3021 . -1) (undo-tree-id3022 . -1) (undo-tree-id3023 . -1) (undo-tree-id3024 . -1) (undo-tree-id3025 . -1) (undo-tree-id3026 . -1) (undo-tree-id3027 . -1) (undo-tree-id3028 . -1) (undo-tree-id3029 . -1) (undo-tree-id3030 . -1) (undo-tree-id3031 . -1) (undo-tree-id3032 . -1) (undo-tree-id3033 . -1) (undo-tree-id3034 . -1) (undo-tree-id3035 . -1) (undo-tree-id3036 . -1) (undo-tree-id3037 . -1) (undo-tree-id3038 . -1) (undo-tree-id3039 . -1) (undo-tree-id3040 . -1) (undo-tree-id3041 . -1) (undo-tree-id3042 . -1) (undo-tree-id3043 . -1) (undo-tree-id3044 . -1) (undo-tree-id3045 . -1) (undo-tree-id3046 . -1) (undo-tree-id3047 . -1) (undo-tree-id3048 . -1) (undo-tree-id3049 . -1) (undo-tree-id3050 . -1) (undo-tree-id3051 . -1) (undo-tree-id3052 . -1) (undo-tree-id3053 . -1) (undo-tree-id3054 . -1) (undo-tree-id3055 . -1) (undo-tree-id3056 . -1) (undo-tree-id3057 . -1) (undo-tree-id3058 . -1) (undo-tree-id3059 . -1) (undo-tree-id3060 . -1) (undo-tree-id3061 . -1) (undo-tree-id3062 . -1) (undo-tree-id3063 . -1) (undo-tree-id3064 . -1) (undo-tree-id3065 . -1) (undo-tree-id3066 . -1) (undo-tree-id3067 . -1) (undo-tree-id3068 . -1) (undo-tree-id3069 . -1) (undo-tree-id3070 . -1) (undo-tree-id3071 . -1) (undo-tree-id3072 . -1) (undo-tree-id3073 . -1) (undo-tree-id3074 . -1) (undo-tree-id3075 . -1) (undo-tree-id3076 . -1) (undo-tree-id3077 . -1) (undo-tree-id3078 . -1) (undo-tree-id3079 . -1) (undo-tree-id3080 . -1) (undo-tree-id3081 . -1) (undo-tree-id3082 . -1) (undo-tree-id3083 . -1) (#("t" 0 1 (fontified t)) . -30865) (undo-tree-id3084 . -1) (undo-tree-id3085 . -1) (undo-tree-id3086 . -1) (undo-tree-id3087 . -1) (undo-tree-id3088 . -1) (undo-tree-id3089 . -1) (undo-tree-id3090 . -1) (undo-tree-id3091 . -1) (undo-tree-id3092 . -1) (undo-tree-id3093 . -1) (undo-tree-id3094 . -1) (undo-tree-id3095 . -1) (undo-tree-id3096 . -1) (undo-tree-id3097 . -1) (undo-tree-id3098 . -1) (undo-tree-id3099 . -1) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1) (undo-tree-id3137 . -1) (undo-tree-id3138 . -1) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -1) (undo-tree-id3142 . -1) (undo-tree-id3143 . -1) (undo-tree-id3144 . -1) (undo-tree-id3145 . -1) (undo-tree-id3146 . -1) (undo-tree-id3147 . -1) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -1) (undo-tree-id3154 . -1) (undo-tree-id3155 . -1) (undo-tree-id3156 . -1) (undo-tree-id3157 . -1) (undo-tree-id3158 . -1) (undo-tree-id3159 . -1) (undo-tree-id3160 . -1) (undo-tree-id3161 . -1) (undo-tree-id3162 . -1) (undo-tree-id3163 . -1) (undo-tree-id3164 . -1) (undo-tree-id3165 . -1) (undo-tree-id3166 . -1) (undo-tree-id3167 . -1) (undo-tree-id3168 . -1) (undo-tree-id3169 . -1) (undo-tree-id3170 . -1) (undo-tree-id3171 . -1) (undo-tree-id3172 . -1) (undo-tree-id3173 . -1) (undo-tree-id3174 . -1) (undo-tree-id3175 . -1) (undo-tree-id3176 . -1) (undo-tree-id3177 . -1) (undo-tree-id3178 . -1) (undo-tree-id3179 . -1) (undo-tree-id3180 . -1) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -1) (undo-tree-id3207 . -1) (undo-tree-id3208 . -1) (undo-tree-id3209 . -1) (undo-tree-id3210 . -1) (undo-tree-id3211 . -1) (undo-tree-id3212 . -1) (undo-tree-id3213 . -1) (undo-tree-id3214 . -1) (undo-tree-id3215 . -1) (undo-tree-id3216 . -1) (undo-tree-id3217 . -1) (undo-tree-id3218 . -1) (undo-tree-id3219 . -1) (undo-tree-id3220 . -1) (undo-tree-id3221 . -1) (undo-tree-id3222 . -1) (undo-tree-id3223 . -1) (undo-tree-id3224 . -1) (undo-tree-id3225 . -1) (undo-tree-id3226 . -1) (undo-tree-id3227 . -1) (undo-tree-id3228 . -1) (undo-tree-id3229 . -1) (undo-tree-id3230 . -1) (undo-tree-id3231 . -1) (undo-tree-id3232 . -1) (undo-tree-id3233 . -1) (undo-tree-id3234 . -1) (undo-tree-id3235 . -1) (undo-tree-id3236 . -1) (undo-tree-id3237 . -1) (undo-tree-id3238 . -1) (undo-tree-id3239 . -1) (undo-tree-id3240 . -1) (undo-tree-id3241 . -1) (undo-tree-id3242 . -1) (undo-tree-id3243 . -1) (undo-tree-id3244 . -1) (undo-tree-id3245 . -1) (undo-tree-id3246 . -1) (undo-tree-id3247 . -1) (undo-tree-id3248 . -1) (undo-tree-id3249 . -1) (undo-tree-id3250 . -1) (undo-tree-id3251 . -1) (undo-tree-id3252 . -1) (#("t" 0 1 (fontified t)) . -30866) (undo-tree-id3253 . -1) (undo-tree-id3254 . -1) (undo-tree-id3255 . -1) (undo-tree-id3256 . -1) (undo-tree-id3257 . -1) (undo-tree-id3258 . -1) (undo-tree-id3259 . -1) (undo-tree-id3260 . -1) (undo-tree-id3261 . -1) (undo-tree-id3262 . -1) (undo-tree-id3263 . -1) (undo-tree-id3264 . -1) (undo-tree-id3265 . -1) (undo-tree-id3266 . -1) (undo-tree-id3267 . -1) (undo-tree-id3268 . -1) (undo-tree-id3269 . -1) (undo-tree-id3270 . -1) (undo-tree-id3271 . -1) (undo-tree-id3272 . -1) (undo-tree-id3273 . -1) (undo-tree-id3274 . -1) (undo-tree-id3275 . -1) (undo-tree-id3276 . -1) (undo-tree-id3277 . -1) (undo-tree-id3278 . -1) (undo-tree-id3279 . -1) (undo-tree-id3280 . -1) (undo-tree-id3281 . -1) (undo-tree-id3282 . -1) (undo-tree-id3283 . -1) (undo-tree-id3284 . -1) (undo-tree-id3285 . -1) (undo-tree-id3286 . -1) (undo-tree-id3287 . -1) (undo-tree-id3288 . -1) (undo-tree-id3289 . -1) (undo-tree-id3290 . -1) (undo-tree-id3291 . -1) (undo-tree-id3292 . -1) (undo-tree-id3293 . -1) (undo-tree-id3294 . -1) (undo-tree-id3295 . -1) (undo-tree-id3296 . -1) (undo-tree-id3297 . -1) (undo-tree-id3298 . -1) (undo-tree-id3299 . -1) (undo-tree-id3300 . -1) (undo-tree-id3301 . -1) (undo-tree-id3302 . -1) (undo-tree-id3303 . -1) (undo-tree-id3304 . -1) (undo-tree-id3305 . -1) (undo-tree-id3306 . -1) (undo-tree-id3307 . -1) (undo-tree-id3308 . -1) (undo-tree-id3309 . -1) (undo-tree-id3310 . -1) (undo-tree-id3311 . -1) (undo-tree-id3312 . -1) (undo-tree-id3313 . -1) (undo-tree-id3314 . -1) (undo-tree-id3315 . -1) (undo-tree-id3316 . -1) (undo-tree-id3317 . -1) (undo-tree-id3318 . -1) (undo-tree-id3319 . -1) (undo-tree-id3320 . -1) (undo-tree-id3321 . -1) (undo-tree-id3322 . -1) (undo-tree-id3323 . -1) (undo-tree-id3324 . -1) (undo-tree-id3325 . -1) (undo-tree-id3326 . -1) (undo-tree-id3327 . -1) (undo-tree-id3328 . -1) (undo-tree-id3329 . -1) (undo-tree-id3330 . -1) (undo-tree-id3331 . -1) (undo-tree-id3332 . -1) (undo-tree-id3333 . -1) (undo-tree-id3334 . -1) (undo-tree-id3335 . -1) (undo-tree-id3336 . -1) (undo-tree-id3337 . -1) (undo-tree-id3338 . -1) (undo-tree-id3339 . -1) (undo-tree-id3340 . -1) (undo-tree-id3341 . -1) (undo-tree-id3342 . -1) (undo-tree-id3343 . -1) (undo-tree-id3344 . -1) (undo-tree-id3345 . -1) (undo-tree-id3346 . -1) (undo-tree-id3347 . -1) (undo-tree-id3348 . -1) (undo-tree-id3349 . -1) (undo-tree-id3350 . -1) (undo-tree-id3351 . -1) (undo-tree-id3352 . -1) (undo-tree-id3353 . -1) (undo-tree-id3354 . -1) (undo-tree-id3355 . -1) (undo-tree-id3356 . -1) (undo-tree-id3357 . -1) (undo-tree-id3358 . -1) (undo-tree-id3359 . -1) (undo-tree-id3360 . -1) (undo-tree-id3361 . -1) (undo-tree-id3362 . -1) (undo-tree-id3363 . -1) (undo-tree-id3364 . -1) (undo-tree-id3365 . -1) (undo-tree-id3366 . -1) (undo-tree-id3367 . -1) (undo-tree-id3368 . -1) (undo-tree-id3369 . -1) (undo-tree-id3370 . -1) (undo-tree-id3371 . -1) (undo-tree-id3372 . -1) (undo-tree-id3373 . -1) (undo-tree-id3374 . -1) (undo-tree-id3375 . -1) (undo-tree-id3376 . -1) (undo-tree-id3377 . -1) (undo-tree-id3378 . -1) (undo-tree-id3379 . -1) (undo-tree-id3380 . -1) (undo-tree-id3381 . -1) (undo-tree-id3382 . -1) (undo-tree-id3383 . -1) (undo-tree-id3384 . -1) (undo-tree-id3385 . -1) (undo-tree-id3386 . -1) (undo-tree-id3387 . -1) (undo-tree-id3388 . -1) (undo-tree-id3389 . -1) (undo-tree-id3390 . -1) (undo-tree-id3391 . -1) (undo-tree-id3392 . -1) (undo-tree-id3393 . -1) (undo-tree-id3394 . -1) (undo-tree-id3395 . -1) (undo-tree-id3396 . -1) (undo-tree-id3397 . -1) (undo-tree-id3398 . -1) (undo-tree-id3399 . -1) (undo-tree-id3400 . -1) (undo-tree-id3401 . -1) (undo-tree-id3402 . -1) (undo-tree-id3403 . -1) (undo-tree-id3404 . -1) (undo-tree-id3405 . -1) (undo-tree-id3406 . -1) (undo-tree-id3407 . -1) (undo-tree-id3408 . -1) (undo-tree-id3409 . -1) (undo-tree-id3410 . -1) (undo-tree-id3411 . -1) (undo-tree-id3412 . -1) (undo-tree-id3413 . -1) (undo-tree-id3414 . -1) (undo-tree-id3415 . -1) (undo-tree-id3416 . -1) (#("t" 0 1 (fontified t)) . -30867) (undo-tree-id3417 . -1) (undo-tree-id3418 . -1) (undo-tree-id3419 . -1) (undo-tree-id3420 . -1) (undo-tree-id3421 . -1) (undo-tree-id3422 . -1) (undo-tree-id3423 . -1) (undo-tree-id3424 . -1) (undo-tree-id3425 . -1) (undo-tree-id3426 . -1) (undo-tree-id3427 . -1) (undo-tree-id3428 . -1) (undo-tree-id3429 . -1) (undo-tree-id3430 . -1) (undo-tree-id3431 . -1) (undo-tree-id3432 . -1) (undo-tree-id3433 . -1) (undo-tree-id3434 . -1) (undo-tree-id3435 . -1) (undo-tree-id3436 . -1) (undo-tree-id3437 . -1) (undo-tree-id3438 . -1) (undo-tree-id3439 . -1) (undo-tree-id3440 . -1) (undo-tree-id3441 . -1) (undo-tree-id3442 . -1) (undo-tree-id3443 . -1) (undo-tree-id3444 . -1) (undo-tree-id3445 . -1) (undo-tree-id3446 . -1) (undo-tree-id3447 . -1) (undo-tree-id3448 . -1) (undo-tree-id3449 . -1) (undo-tree-id3450 . -1) (undo-tree-id3451 . -1) (undo-tree-id3452 . -1) (undo-tree-id3453 . -1) (undo-tree-id3454 . -1) (undo-tree-id3455 . -1) (undo-tree-id3456 . -1) (undo-tree-id3457 . -1) (undo-tree-id3458 . -1) (undo-tree-id3459 . -1) (undo-tree-id3460 . -1) (undo-tree-id3461 . -1) (undo-tree-id3462 . -1) (undo-tree-id3463 . -1) (undo-tree-id3464 . -1) (undo-tree-id3465 . -1) (undo-tree-id3466 . -1) (undo-tree-id3467 . -1) (undo-tree-id3468 . -1) (undo-tree-id3469 . -1) (undo-tree-id3470 . -1) (undo-tree-id3471 . -1) (undo-tree-id3472 . -1) (undo-tree-id3473 . -1) (undo-tree-id3474 . -1) (undo-tree-id3475 . -1) (undo-tree-id3476 . -1) (undo-tree-id3477 . -1) (undo-tree-id3478 . -1) (undo-tree-id3479 . -1) (undo-tree-id3480 . -1) (undo-tree-id3481 . -1) (undo-tree-id3482 . -1) (undo-tree-id3483 . -1) (undo-tree-id3484 . -1) (undo-tree-id3485 . -1) (undo-tree-id3486 . -1) (undo-tree-id3487 . -1) (undo-tree-id3488 . -1) (undo-tree-id3489 . -1) (undo-tree-id3490 . -1) (undo-tree-id3491 . -1) (undo-tree-id3492 . -1) (undo-tree-id3493 . -1) (undo-tree-id3494 . -1) (undo-tree-id3495 . -1) (undo-tree-id3496 . -1) (undo-tree-id3497 . -1) (undo-tree-id3498 . -1) (undo-tree-id3499 . -1) (undo-tree-id3500 . -1) (undo-tree-id3501 . -1) (undo-tree-id3502 . -1) (undo-tree-id3503 . -1) (undo-tree-id3504 . -1) (undo-tree-id3505 . -1) (undo-tree-id3506 . -1) (undo-tree-id3507 . -1) (undo-tree-id3508 . -1) (undo-tree-id3509 . -1) (undo-tree-id3510 . -1) (undo-tree-id3511 . -1) (undo-tree-id3512 . -1) (undo-tree-id3513 . -1) (undo-tree-id3514 . -1) (undo-tree-id3515 . -1) (undo-tree-id3516 . -1) (undo-tree-id3517 . -1) (undo-tree-id3518 . -1) (undo-tree-id3519 . -1) (undo-tree-id3520 . -1) (undo-tree-id3521 . -1) (undo-tree-id3522 . -1) (undo-tree-id3523 . -1) (undo-tree-id3524 . -1) (undo-tree-id3525 . -1) (undo-tree-id3526 . -1) (undo-tree-id3527 . -1) (undo-tree-id3528 . -1) (undo-tree-id3529 . -1) (undo-tree-id3530 . -1) (undo-tree-id3531 . -1) (undo-tree-id3532 . -1) (undo-tree-id3533 . -1) (undo-tree-id3534 . -1) (undo-tree-id3535 . -1) (undo-tree-id3536 . -1) (undo-tree-id3537 . -1) (undo-tree-id3538 . -1) (undo-tree-id3539 . -1) (undo-tree-id3540 . -1) (undo-tree-id3541 . -1) (undo-tree-id3542 . -1) (undo-tree-id3543 . -1) (undo-tree-id3544 . -1) (undo-tree-id3545 . -1) (undo-tree-id3546 . -1) (undo-tree-id3547 . -1) (undo-tree-id3548 . -1) (undo-tree-id3549 . -1) (undo-tree-id3550 . -1) (undo-tree-id3551 . -1) (undo-tree-id3552 . -1) (undo-tree-id3553 . -1) (undo-tree-id3554 . -1) (undo-tree-id3555 . -1) (undo-tree-id3556 . -1) (undo-tree-id3557 . -1) (undo-tree-id3558 . -1) (undo-tree-id3559 . -1) (undo-tree-id3560 . -1) (undo-tree-id3561 . -1) (undo-tree-id3562 . -1) (undo-tree-id3563 . -1) (undo-tree-id3564 . -1) (undo-tree-id3565 . -1) (undo-tree-id3566 . -1) (undo-tree-id3567 . -1) (undo-tree-id3568 . -1) (undo-tree-id3569 . -1) (undo-tree-id3570 . -1) (undo-tree-id3571 . -1) (undo-tree-id3572 . -1) (undo-tree-id3573 . -1) (undo-tree-id3574 . -1) (undo-tree-id3575 . -1) (undo-tree-id3576 . -1) (undo-tree-id3577 . -1) (undo-tree-id3578 . -1) (#("t" 0 1 (fontified t)) . -30868) (undo-tree-id3579 . -1) (undo-tree-id3580 . -1) (undo-tree-id3581 . -1) (undo-tree-id3582 . -1) (undo-tree-id3583 . -1) (undo-tree-id3584 . -1) (undo-tree-id3585 . -1) (undo-tree-id3586 . -1) (undo-tree-id3587 . -1) (undo-tree-id3588 . -1) (undo-tree-id3589 . -1) (undo-tree-id3590 . -1) (undo-tree-id3591 . -1) (undo-tree-id3592 . -1) (undo-tree-id3593 . -1) (undo-tree-id3594 . -1) (undo-tree-id3595 . -1) (undo-tree-id3596 . -1) (undo-tree-id3597 . -1) (undo-tree-id3598 . -1) (undo-tree-id3599 . -1) (undo-tree-id3600 . -1) (undo-tree-id3601 . -1) (undo-tree-id3602 . -1) (undo-tree-id3603 . -1) (undo-tree-id3604 . -1) (undo-tree-id3605 . -1) (undo-tree-id3606 . -1) (undo-tree-id3607 . -1) (undo-tree-id3608 . -1) (undo-tree-id3609 . -1) (undo-tree-id3610 . -1) (undo-tree-id3611 . -1) (undo-tree-id3612 . -1) (undo-tree-id3613 . -1) (undo-tree-id3614 . -1) (undo-tree-id3615 . -1) (undo-tree-id3616 . -1) (undo-tree-id3617 . -1) (undo-tree-id3618 . -1) (undo-tree-id3619 . -1) (undo-tree-id3620 . -1) (undo-tree-id3621 . -1) (undo-tree-id3622 . -1) (undo-tree-id3623 . -1) (undo-tree-id3624 . -1) (undo-tree-id3625 . -1) (undo-tree-id3626 . -1) (undo-tree-id3627 . -1) (undo-tree-id3628 . -1) (undo-tree-id3629 . -1) (undo-tree-id3630 . -1) (undo-tree-id3631 . -1) (undo-tree-id3632 . -1) (undo-tree-id3633 . -1) (undo-tree-id3634 . -1) (undo-tree-id3635 . -1) (undo-tree-id3636 . -1) (undo-tree-id3637 . -1) (undo-tree-id3638 . -1) (undo-tree-id3639 . -1) (undo-tree-id3640 . -1) (undo-tree-id3641 . -1) (undo-tree-id3642 . -1) (undo-tree-id3643 . -1) (undo-tree-id3644 . -1) (undo-tree-id3645 . -1) (undo-tree-id3646 . -1) (undo-tree-id3647 . -1) (undo-tree-id3648 . -1) (undo-tree-id3649 . -1) (undo-tree-id3650 . -1) (undo-tree-id3651 . -1) (undo-tree-id3652 . -1) (undo-tree-id3653 . -1) (undo-tree-id3654 . -1) (undo-tree-id3655 . -1) (undo-tree-id3656 . -1) (undo-tree-id3657 . -1) (undo-tree-id3658 . -1) (undo-tree-id3659 . -1) (undo-tree-id3660 . -1) (undo-tree-id3661 . -1) (undo-tree-id3662 . -1) (undo-tree-id3663 . -1) (undo-tree-id3664 . -1) (undo-tree-id3665 . -1) (undo-tree-id3666 . -1) (undo-tree-id3667 . -1) (undo-tree-id3668 . -1) (undo-tree-id3669 . -1) (undo-tree-id3670 . -1) (undo-tree-id3671 . -1) (undo-tree-id3672 . -1) (undo-tree-id3673 . -1) (undo-tree-id3674 . -1) (undo-tree-id3675 . -1) (undo-tree-id3676 . -1) (undo-tree-id3677 . -1) (undo-tree-id3678 . -1) (undo-tree-id3679 . -1) (undo-tree-id3680 . -1) (undo-tree-id3681 . -1) (undo-tree-id3682 . -1) (undo-tree-id3683 . -1) (undo-tree-id3684 . -1) (undo-tree-id3685 . -1) (undo-tree-id3686 . -1) (undo-tree-id3687 . -1) (undo-tree-id3688 . -1) (undo-tree-id3689 . -1) (undo-tree-id3690 . -1) (undo-tree-id3691 . -1) (undo-tree-id3692 . -1) (undo-tree-id3693 . -1) (undo-tree-id3694 . -1) (undo-tree-id3695 . -1) (undo-tree-id3696 . -1) (undo-tree-id3697 . -1) (undo-tree-id3698 . -1) (undo-tree-id3699 . -1) (undo-tree-id3700 . -1) (undo-tree-id3701 . -1) (undo-tree-id3702 . -1) (undo-tree-id3703 . -1) (undo-tree-id3704 . -1) (undo-tree-id3705 . -1) (undo-tree-id3706 . -1) (undo-tree-id3707 . -1) (undo-tree-id3708 . -1) (undo-tree-id3709 . -1) (undo-tree-id3710 . -1) (undo-tree-id3711 . -1) (undo-tree-id3712 . -1) (undo-tree-id3713 . -1) (undo-tree-id3714 . -1) (undo-tree-id3715 . -1) (undo-tree-id3716 . -1) (undo-tree-id3717 . -1) (undo-tree-id3718 . -1) (undo-tree-id3719 . -1) (undo-tree-id3720 . -1) (#("t" 0 1 (fontified t)) . -30869) (undo-tree-id3721 . -1) (undo-tree-id3722 . -1) (undo-tree-id3723 . -1) (undo-tree-id3724 . -1) (undo-tree-id3725 . -1) (undo-tree-id3726 . -1) (undo-tree-id3727 . -1) (undo-tree-id3728 . -1) (undo-tree-id3729 . -1) (undo-tree-id3730 . -1) (undo-tree-id3731 . -1) (undo-tree-id3732 . -1) (undo-tree-id3733 . -1) (undo-tree-id3734 . -1) (undo-tree-id3735 . -1) (undo-tree-id3736 . -1) (undo-tree-id3737 . -1) (undo-tree-id3738 . -1) (undo-tree-id3739 . -1) (undo-tree-id3740 . -1) (undo-tree-id3741 . -1) (undo-tree-id3742 . -1) (undo-tree-id3743 . -1) (undo-tree-id3744 . -1) (undo-tree-id3745 . -1) (undo-tree-id3746 . -1) (undo-tree-id3747 . -1) (undo-tree-id3748 . -1) (undo-tree-id3749 . -1) (undo-tree-id3750 . -1) (undo-tree-id3751 . -1) (undo-tree-id3752 . -1) (undo-tree-id3753 . -1) (undo-tree-id3754 . -1) (undo-tree-id3755 . -1) (undo-tree-id3756 . -1) (undo-tree-id3757 . -1) (undo-tree-id3758 . -1) (undo-tree-id3759 . -1) (undo-tree-id3760 . -1) (undo-tree-id3761 . -1) (undo-tree-id3762 . -1) (undo-tree-id3763 . -1) (undo-tree-id3764 . -1) (undo-tree-id3765 . -1) (undo-tree-id3766 . -1) (undo-tree-id3767 . -1) (undo-tree-id3768 . -1) (undo-tree-id3769 . -1) (undo-tree-id3770 . -1) (undo-tree-id3771 . -1) (undo-tree-id3772 . -1) (undo-tree-id3773 . -1) (undo-tree-id3774 . -1) (undo-tree-id3775 . -1) (undo-tree-id3776 . -1) (undo-tree-id3777 . -1) (undo-tree-id3778 . -1) (undo-tree-id3779 . -1) (undo-tree-id3780 . -1) (undo-tree-id3781 . -1) (undo-tree-id3782 . -1) (undo-tree-id3783 . -1) (undo-tree-id3784 . -1) (undo-tree-id3785 . -1) (undo-tree-id3786 . -1) (undo-tree-id3787 . -1) (undo-tree-id3788 . -1) (undo-tree-id3789 . -1) (undo-tree-id3790 . -1) (undo-tree-id3791 . -1) (undo-tree-id3792 . -1) (undo-tree-id3793 . -1) (undo-tree-id3794 . -1) (undo-tree-id3795 . -1) (undo-tree-id3796 . -1) (undo-tree-id3797 . -1) (undo-tree-id3798 . -1) (undo-tree-id3799 . -1) (undo-tree-id3800 . -1) (undo-tree-id3801 . -1) (undo-tree-id3802 . -1) (undo-tree-id3803 . -1) (undo-tree-id3804 . -1) (undo-tree-id3805 . -1) (undo-tree-id3806 . -1) (undo-tree-id3807 . -1) (undo-tree-id3808 . -1) (undo-tree-id3809 . -1) (undo-tree-id3810 . -1) (undo-tree-id3811 . -1) (undo-tree-id3812 . -1) (undo-tree-id3813 . -1) (undo-tree-id3814 . -1) (undo-tree-id3815 . -1) (undo-tree-id3816 . -1) (undo-tree-id3817 . -1) (undo-tree-id3818 . -1) (undo-tree-id3819 . -1) (undo-tree-id3820 . -1) (undo-tree-id3821 . -1) (undo-tree-id3822 . -1) (undo-tree-id3823 . -1) (undo-tree-id3824 . -1) (undo-tree-id3825 . -1) (undo-tree-id3826 . -1) (undo-tree-id3827 . -1) (undo-tree-id3828 . -1) (undo-tree-id3829 . -1) (undo-tree-id3830 . -1) (undo-tree-id3831 . -1) (undo-tree-id3832 . -1) (undo-tree-id3833 . -1) (undo-tree-id3834 . -1) (undo-tree-id3835 . -1) (undo-tree-id3836 . -1) (undo-tree-id3837 . -1) (undo-tree-id3838 . -1) (undo-tree-id3839 . -1) (undo-tree-id3840 . -1) (undo-tree-id3841 . -1) (undo-tree-id3842 . -1) (undo-tree-id3843 . -1) (undo-tree-id3844 . -1) (undo-tree-id3845 . -1) (undo-tree-id3846 . -1) (undo-tree-id3847 . -1) (undo-tree-id3848 . -1) (undo-tree-id3849 . -1) (undo-tree-id3850 . -1) (undo-tree-id3851 . -1) (undo-tree-id3852 . -1) (#("t" 0 1 (fontified t)) . -30870) (undo-tree-id3853 . -1) (undo-tree-id3854 . -1) (undo-tree-id3855 . -1) (undo-tree-id3856 . -1) (undo-tree-id3857 . -1) (undo-tree-id3858 . -1) (undo-tree-id3859 . -1) (undo-tree-id3860 . -1) (undo-tree-id3861 . -1) (undo-tree-id3862 . -1) (undo-tree-id3863 . -1) (undo-tree-id3864 . -1) (undo-tree-id3865 . -1) (undo-tree-id3866 . -1) (undo-tree-id3867 . -1) (undo-tree-id3868 . -1) (undo-tree-id3869 . -1) (undo-tree-id3870 . -1) (undo-tree-id3871 . -1) (undo-tree-id3872 . -1) (undo-tree-id3873 . -1) (undo-tree-id3874 . -1) (undo-tree-id3875 . -1) (undo-tree-id3876 . -1) (undo-tree-id3877 . -1) (undo-tree-id3878 . -1) (undo-tree-id3879 . -1) (undo-tree-id3880 . -1) (undo-tree-id3881 . -1) (undo-tree-id3882 . -1) (undo-tree-id3883 . -1) (undo-tree-id3884 . -1) (undo-tree-id3885 . -1) (undo-tree-id3886 . -1) (undo-tree-id3887 . -1) (undo-tree-id3888 . -1) (undo-tree-id3889 . -1) (undo-tree-id3890 . -1) (undo-tree-id3891 . -1) (undo-tree-id3892 . -1) (undo-tree-id3893 . -1) (undo-tree-id3894 . -1) (undo-tree-id3895 . -1) (undo-tree-id3896 . -1) (undo-tree-id3897 . -1) (undo-tree-id3898 . -1) (undo-tree-id3899 . -1) (undo-tree-id3900 . -1) (undo-tree-id3901 . -1) (undo-tree-id3902 . -1) (undo-tree-id3903 . -1) (undo-tree-id3904 . -1) (undo-tree-id3905 . -1) (undo-tree-id3906 . -1) (undo-tree-id3907 . -1) (undo-tree-id3908 . -1) (undo-tree-id3909 . -1) (undo-tree-id3910 . -1) (undo-tree-id3911 . -1) (undo-tree-id3912 . -1) (undo-tree-id3913 . -1) (undo-tree-id3914 . -1) (undo-tree-id3915 . -1) (undo-tree-id3916 . -1) (undo-tree-id3917 . -1) (undo-tree-id3918 . -1) (undo-tree-id3919 . -1) (undo-tree-id3920 . -1) (undo-tree-id3921 . -1) (undo-tree-id3922 . -1) (undo-tree-id3923 . -1) (undo-tree-id3924 . -1) (undo-tree-id3925 . -1) (undo-tree-id3926 . -1) (undo-tree-id3927 . -1) (undo-tree-id3928 . -1) (undo-tree-id3929 . -1) (undo-tree-id3930 . -1) (undo-tree-id3931 . -1) (undo-tree-id3932 . -1) (undo-tree-id3933 . -1) (undo-tree-id3934 . -1) (undo-tree-id3935 . -1) (undo-tree-id3936 . -1) (undo-tree-id3937 . -1) (undo-tree-id3938 . -1) (undo-tree-id3939 . -1) (undo-tree-id3940 . -1) (undo-tree-id3941 . -1) (undo-tree-id3942 . -1) (undo-tree-id3943 . -1) (undo-tree-id3944 . -1) (undo-tree-id3945 . -1) (undo-tree-id3946 . -1) (undo-tree-id3947 . -1) (undo-tree-id3948 . -1) (undo-tree-id3949 . -1) (undo-tree-id3950 . -1) (undo-tree-id3951 . -1) (undo-tree-id3952 . -1) (undo-tree-id3953 . -1) (undo-tree-id3954 . -1) (undo-tree-id3955 . -1) (undo-tree-id3956 . -1) (undo-tree-id3957 . -1) (undo-tree-id3958 . -1) (undo-tree-id3959 . -1) (undo-tree-id3960 . -1) (undo-tree-id3961 . -1) (undo-tree-id3962 . -1) (undo-tree-id3963 . -1) (undo-tree-id3964 . -1) (undo-tree-id3965 . -1) (undo-tree-id3966 . -1) (undo-tree-id3967 . -1) (undo-tree-id3968 . -1) (undo-tree-id3969 . -1) (undo-tree-id3970 . -1) (undo-tree-id3971 . -1) (undo-tree-id3972 . -1) (undo-tree-id3973 . -1) (undo-tree-id3974 . -1) (#("t" 0 1 (fontified t)) . -30871) (undo-tree-id3975 . -1) (undo-tree-id3976 . -1) (undo-tree-id3977 . -1) (undo-tree-id3978 . -1) (undo-tree-id3979 . -1) (undo-tree-id3980 . -1) (undo-tree-id3981 . -1) (undo-tree-id3982 . -1) (undo-tree-id3983 . -1) (undo-tree-id3984 . -1) (undo-tree-id3985 . -1) (undo-tree-id3986 . -1) (undo-tree-id3987 . -1) (undo-tree-id3988 . -1) (undo-tree-id3989 . -1) (undo-tree-id3990 . -1) (undo-tree-id3991 . -1) (undo-tree-id3992 . -1) (undo-tree-id3993 . -1) (undo-tree-id3994 . -1) (undo-tree-id3995 . -1) (undo-tree-id3996 . -1) (undo-tree-id3997 . -1) (undo-tree-id3998 . -1) (undo-tree-id3999 . -1) (undo-tree-id4000 . -1) (undo-tree-id4001 . -1) (undo-tree-id4002 . -1) (undo-tree-id4003 . -1) (undo-tree-id4004 . -1) (undo-tree-id4005 . -1) (undo-tree-id4006 . -1) (undo-tree-id4007 . -1) (undo-tree-id4008 . -1) (undo-tree-id4009 . -1) (undo-tree-id4010 . -1) (undo-tree-id4011 . -1) (undo-tree-id4012 . -1) (undo-tree-id4013 . -1) (undo-tree-id4014 . -1) (undo-tree-id4015 . -1) (undo-tree-id4016 . -1) (undo-tree-id4017 . -1) (undo-tree-id4018 . -1) (undo-tree-id4019 . -1) (undo-tree-id4020 . -1) (undo-tree-id4021 . -1) (undo-tree-id4022 . -1) (undo-tree-id4023 . -1) (undo-tree-id4024 . -1) (undo-tree-id4025 . -1) (undo-tree-id4026 . -1) (undo-tree-id4027 . -1) (undo-tree-id4028 . -1) (undo-tree-id4029 . -1) (undo-tree-id4030 . -1) (undo-tree-id4031 . -1) (undo-tree-id4032 . -1) (undo-tree-id4033 . -1) (undo-tree-id4034 . -1) (undo-tree-id4035 . -1) (undo-tree-id4036 . -1) (undo-tree-id4037 . -1) (undo-tree-id4038 . -1) (undo-tree-id4039 . -1) (undo-tree-id4040 . -1) (undo-tree-id4041 . -1) (undo-tree-id4042 . -1) (undo-tree-id4043 . -1) (undo-tree-id4044 . -1) (undo-tree-id4045 . -1) (undo-tree-id4046 . -1) (undo-tree-id4047 . -1) (undo-tree-id4048 . -1) (undo-tree-id4049 . -1) (undo-tree-id4050 . -1) (undo-tree-id4051 . -1) (undo-tree-id4052 . -1) (undo-tree-id4053 . -1) (undo-tree-id4054 . -1) (undo-tree-id4055 . -1) (undo-tree-id4056 . -1) (undo-tree-id4057 . -1) (undo-tree-id4058 . -1) (undo-tree-id4059 . -1) (undo-tree-id4060 . -1) (undo-tree-id4061 . -1) (undo-tree-id4062 . -1) (undo-tree-id4063 . -1) (undo-tree-id4064 . -1) (undo-tree-id4065 . -1) (undo-tree-id4066 . -1) (undo-tree-id4067 . -1) (undo-tree-id4068 . -1) (undo-tree-id4069 . -1) (undo-tree-id4070 . -1) (undo-tree-id4071 . -1) (undo-tree-id4072 . -1) (undo-tree-id4073 . -1) (undo-tree-id4074 . -1) (undo-tree-id4075 . -1) (undo-tree-id4076 . -1) (#("t" 0 1 (fontified t)) . -30872) (undo-tree-id4077 . -1) (undo-tree-id4078 . -1) (undo-tree-id4079 . -1) (undo-tree-id4080 . -1) (undo-tree-id4081 . -1) (undo-tree-id4082 . -1) (undo-tree-id4083 . -1) (undo-tree-id4084 . -1) (undo-tree-id4085 . -1) (undo-tree-id4086 . -1) (undo-tree-id4087 . -1) (undo-tree-id4088 . -1) (undo-tree-id4089 . -1) (undo-tree-id4090 . -1) (undo-tree-id4091 . -1) (undo-tree-id4092 . -1) (undo-tree-id4093 . -1) (undo-tree-id4094 . -1) (undo-tree-id4095 . -1) (undo-tree-id4096 . -1) (undo-tree-id4097 . -1) (undo-tree-id4098 . -1) (undo-tree-id4099 . -1) (undo-tree-id4100 . -1) (undo-tree-id4101 . -1) (undo-tree-id4102 . -1) (undo-tree-id4103 . -1) (undo-tree-id4104 . -1) (undo-tree-id4105 . -1) (undo-tree-id4106 . -1) (undo-tree-id4107 . -1) (undo-tree-id4108 . -1) (undo-tree-id4109 . -1) (undo-tree-id4110 . -1) (undo-tree-id4111 . -1) (undo-tree-id4112 . -1) (undo-tree-id4113 . -1) (undo-tree-id4114 . -1) (undo-tree-id4115 . -1) (undo-tree-id4116 . -1) (undo-tree-id4117 . -1) (undo-tree-id4118 . -1) (undo-tree-id4119 . -1) (undo-tree-id4120 . -1) (undo-tree-id4121 . -1) (undo-tree-id4122 . -1) (undo-tree-id4123 . -1) (undo-tree-id4124 . -1) (undo-tree-id4125 . -1) (undo-tree-id4126 . -1) (undo-tree-id4127 . -1) (undo-tree-id4128 . -1) (undo-tree-id4129 . -1) (undo-tree-id4130 . -1) (undo-tree-id4131 . -1) (undo-tree-id4132 . -1) (undo-tree-id4133 . -1) (undo-tree-id4134 . -1) (undo-tree-id4135 . -1) (undo-tree-id4136 . -1) (undo-tree-id4137 . -1) (undo-tree-id4138 . -1) (undo-tree-id4139 . -1) (undo-tree-id4140 . -1) (undo-tree-id4141 . -1) (undo-tree-id4142 . -1) (undo-tree-id4143 . -1) (undo-tree-id4144 . -1) (undo-tree-id4145 . -1) (undo-tree-id4146 . -1) (undo-tree-id4147 . -1) (undo-tree-id4148 . -1) (undo-tree-id4149 . -1) (undo-tree-id4150 . -1) (undo-tree-id4151 . -1) (undo-tree-id4152 . -1) (undo-tree-id4153 . -1) (undo-tree-id4154 . -1) (undo-tree-id4155 . -1) (undo-tree-id4156 . -1) (undo-tree-id4157 . -1) (undo-tree-id4158 . -1) (undo-tree-id4159 . -1) (undo-tree-id4160 . -1) (undo-tree-id4161 . -1) (undo-tree-id4162 . -1) (undo-tree-id4163 . -1) (#("t" 0 1 (fontified t)) . -30873) (undo-tree-id4164 . -1) (undo-tree-id4165 . -1) (undo-tree-id4166 . -1) (undo-tree-id4167 . -1) (undo-tree-id4168 . -1) (undo-tree-id4169 . -1) (undo-tree-id4170 . -1) (undo-tree-id4171 . -1) (undo-tree-id4172 . -1) (undo-tree-id4173 . -1) (undo-tree-id4174 . -1) (undo-tree-id4175 . -1) (undo-tree-id4176 . -1) (undo-tree-id4177 . -1) (undo-tree-id4178 . -1) (undo-tree-id4179 . -1) (undo-tree-id4180 . -1) (undo-tree-id4181 . -1) (undo-tree-id4182 . -1) (undo-tree-id4183 . -1) (undo-tree-id4184 . -1) (undo-tree-id4185 . -1) (undo-tree-id4186 . -1) (undo-tree-id4187 . -1) (undo-tree-id4188 . -1) (undo-tree-id4189 . -1) (undo-tree-id4190 . -1) (undo-tree-id4191 . -1) (undo-tree-id4192 . -1) (undo-tree-id4193 . -1) (undo-tree-id4194 . -1) (undo-tree-id4195 . -1) (undo-tree-id4196 . -1) (undo-tree-id4197 . -1) (undo-tree-id4198 . -1) (undo-tree-id4199 . -1) (undo-tree-id4200 . -1) (undo-tree-id4201 . -1) (undo-tree-id4202 . -1) (undo-tree-id4203 . -1) (undo-tree-id4204 . -1) (undo-tree-id4205 . -1) (undo-tree-id4206 . -1) (undo-tree-id4207 . -1) (undo-tree-id4208 . -1) (undo-tree-id4209 . -1) (undo-tree-id4210 . -1) (undo-tree-id4211 . -1) (undo-tree-id4212 . -1) (undo-tree-id4213 . -1) (undo-tree-id4214 . -1) (undo-tree-id4215 . -1) (undo-tree-id4216 . -1) (undo-tree-id4217 . -1) (undo-tree-id4218 . -1) (undo-tree-id4219 . -1) (undo-tree-id4220 . -1) (undo-tree-id4221 . -1) (undo-tree-id4222 . -1) (undo-tree-id4223 . -1) (undo-tree-id4224 . -1) (undo-tree-id4225 . -1) (undo-tree-id4226 . -1) (undo-tree-id4227 . -1) (undo-tree-id4228 . -1) (undo-tree-id4229 . -1) (undo-tree-id4230 . -1) (undo-tree-id4231 . -1) (undo-tree-id4232 . -1) (undo-tree-id4233 . -1) (undo-tree-id4234 . -1) (undo-tree-id4235 . -1) (undo-tree-id4236 . -1) (undo-tree-id4237 . -1) (undo-tree-id4238 . -1) (undo-tree-id4239 . -1) (undo-tree-id4240 . -1) (#("t" 0 1 (fontified t)) . -30874) (undo-tree-id4241 . -1) (undo-tree-id4242 . -1) (undo-tree-id4243 . -1) (undo-tree-id4244 . -1) (undo-tree-id4245 . -1) (undo-tree-id4246 . -1) (undo-tree-id4247 . -1) (undo-tree-id4248 . -1) (undo-tree-id4249 . -1) (undo-tree-id4250 . -1) (undo-tree-id4251 . -1) (undo-tree-id4252 . -1) (undo-tree-id4253 . -1) (undo-tree-id4254 . -1) (undo-tree-id4255 . -1) (undo-tree-id4256 . -1) (undo-tree-id4257 . -1) (undo-tree-id4258 . -1) (undo-tree-id4259 . -1) (undo-tree-id4260 . -1) (undo-tree-id4261 . -1) (undo-tree-id4262 . -1) (undo-tree-id4263 . -1) (undo-tree-id4264 . -1) (undo-tree-id4265 . -1) (undo-tree-id4266 . -1) (undo-tree-id4267 . -1) (undo-tree-id4268 . -1) (undo-tree-id4269 . -1) (undo-tree-id4270 . -1) (undo-tree-id4271 . -1) (undo-tree-id4272 . -1) (undo-tree-id4273 . -1) (undo-tree-id4274 . -1) (undo-tree-id4275 . -1) (undo-tree-id4276 . -1) (undo-tree-id4277 . -1) (undo-tree-id4278 . -1) (undo-tree-id4279 . -1) (undo-tree-id4280 . -1) (undo-tree-id4281 . -1) (undo-tree-id4282 . -1) (undo-tree-id4283 . -1) (undo-tree-id4284 . -1) (undo-tree-id4285 . -1) (undo-tree-id4286 . -1) (undo-tree-id4287 . -1) (undo-tree-id4288 . -1) (undo-tree-id4289 . -1) (undo-tree-id4290 . -1) (undo-tree-id4291 . -1) (undo-tree-id4292 . -1) (undo-tree-id4293 . -1) (undo-tree-id4294 . -1) (undo-tree-id4295 . -1) (undo-tree-id4296 . -1) (undo-tree-id4297 . -1) (undo-tree-id4298 . -1) (undo-tree-id4299 . -1) (undo-tree-id4300 . -1) (undo-tree-id4301 . -1) (undo-tree-id4302 . -1) (undo-tree-id4303 . -1) (undo-tree-id4304 . -1) (undo-tree-id4305 . -1) (undo-tree-id4306 . -1) (undo-tree-id4307 . -1) (#("t" 0 1 (fontified t)) . -30875) (undo-tree-id4308 . -1) (undo-tree-id4309 . -1) (undo-tree-id4310 . -1) (undo-tree-id4311 . -1) (undo-tree-id4312 . -1) (undo-tree-id4313 . -1) (undo-tree-id4314 . -1) (undo-tree-id4315 . -1) (undo-tree-id4316 . -1) (undo-tree-id4317 . -1) (undo-tree-id4318 . -1) (undo-tree-id4319 . -1) (undo-tree-id4320 . -1) (undo-tree-id4321 . -1) (undo-tree-id4322 . -1) (undo-tree-id4323 . -1) (undo-tree-id4324 . -1) (undo-tree-id4325 . -1) (undo-tree-id4326 . -1) (undo-tree-id4327 . -1) (undo-tree-id4328 . -1) (undo-tree-id4329 . -1) (undo-tree-id4330 . -1) (undo-tree-id4331 . -1) (undo-tree-id4332 . -1) (undo-tree-id4333 . -1) (undo-tree-id4334 . -1) (undo-tree-id4335 . -1) (undo-tree-id4336 . -1) (undo-tree-id4337 . -1) (undo-tree-id4338 . -1) (undo-tree-id4339 . -1) (undo-tree-id4340 . -1) (undo-tree-id4341 . -1) (undo-tree-id4342 . -1) (undo-tree-id4343 . -1) (undo-tree-id4344 . -1) (undo-tree-id4345 . -1) (undo-tree-id4346 . -1) (undo-tree-id4347 . -1) (undo-tree-id4348 . -1) (undo-tree-id4349 . -1) (undo-tree-id4350 . -1) (undo-tree-id4351 . -1) (undo-tree-id4352 . -1) (undo-tree-id4353 . -1) (undo-tree-id4354 . -1) (undo-tree-id4355 . -1) (undo-tree-id4356 . -1) (undo-tree-id4357 . -1) (undo-tree-id4358 . -1) (undo-tree-id4359 . -1) (undo-tree-id4360 . -1) (undo-tree-id4361 . -1) (undo-tree-id4362 . -1) (undo-tree-id4363 . -1) (undo-tree-id4364 . -1) (#("t" 0 1 (fontified t)) . -30876) (undo-tree-id4365 . -1) (undo-tree-id4366 . -1) (undo-tree-id4367 . -1) (undo-tree-id4368 . -1) (undo-tree-id4369 . -1) (undo-tree-id4370 . -1) (undo-tree-id4371 . -1) (undo-tree-id4372 . -1) (undo-tree-id4373 . -1) (undo-tree-id4374 . -1) (undo-tree-id4375 . -1) (undo-tree-id4376 . -1) (undo-tree-id4377 . -1) (undo-tree-id4378 . -1) (undo-tree-id4379 . -1) (undo-tree-id4380 . -1) (undo-tree-id4381 . -1) (undo-tree-id4382 . -1) (undo-tree-id4383 . -1) (undo-tree-id4384 . -1) (undo-tree-id4385 . -1) (undo-tree-id4386 . -1) (undo-tree-id4387 . -1) (undo-tree-id4388 . -1) (undo-tree-id4389 . -1) (undo-tree-id4390 . -1) (undo-tree-id4391 . -1) (undo-tree-id4392 . -1) (undo-tree-id4393 . -1) (undo-tree-id4394 . -1) (undo-tree-id4395 . -1) (undo-tree-id4396 . -1) (undo-tree-id4397 . -1) (undo-tree-id4398 . -1) (undo-tree-id4399 . -1) (undo-tree-id4400 . -1) (undo-tree-id4401 . -1) (undo-tree-id4402 . -1) (undo-tree-id4403 . -1) (undo-tree-id4404 . -1) (undo-tree-id4405 . -1) (undo-tree-id4406 . -1) (undo-tree-id4407 . -1) (undo-tree-id4408 . -1) (undo-tree-id4409 . -1) (undo-tree-id4410 . -1) (undo-tree-id4411 . -1) (#("t" 0 1 (fontified t)) . -30877) (undo-tree-id4412 . -1) (undo-tree-id4413 . -1) (undo-tree-id4414 . -1) (undo-tree-id4415 . -1) (undo-tree-id4416 . -1) (undo-tree-id4417 . -1) (undo-tree-id4418 . -1) (undo-tree-id4419 . -1) (undo-tree-id4420 . -1) (undo-tree-id4421 . -1) (undo-tree-id4422 . -1) (undo-tree-id4423 . -1) (undo-tree-id4424 . -1) (undo-tree-id4425 . -1) (undo-tree-id4426 . -1) (undo-tree-id4427 . -1) (undo-tree-id4428 . -1) (undo-tree-id4429 . -1) (undo-tree-id4430 . -1) (undo-tree-id4431 . -1) (undo-tree-id4432 . -1) (undo-tree-id4433 . -1) (undo-tree-id4434 . -1) (undo-tree-id4435 . -1) (undo-tree-id4436 . -1) (undo-tree-id4437 . -1) (undo-tree-id4438 . -1) (undo-tree-id4439 . -1) (undo-tree-id4440 . -1) (undo-tree-id4441 . -1) (undo-tree-id4442 . -1) (undo-tree-id4443 . -1) (undo-tree-id4444 . -1) (undo-tree-id4445 . -1) (undo-tree-id4446 . -1) (undo-tree-id4447 . -1) (undo-tree-id4448 . -1) (#("t" 0 1 (fontified t)) . -30878) (undo-tree-id4449 . -1) (undo-tree-id4450 . -1) (undo-tree-id4451 . -1) (undo-tree-id4452 . -1) (undo-tree-id4453 . -1) (undo-tree-id4454 . -1) (undo-tree-id4455 . -1) (undo-tree-id4456 . -1) (undo-tree-id4457 . -1) (undo-tree-id4458 . -1) (undo-tree-id4459 . -1) (undo-tree-id4460 . -1) (undo-tree-id4461 . -1) (undo-tree-id4462 . -1) (undo-tree-id4463 . -1) (undo-tree-id4464 . -1) (undo-tree-id4465 . -1) (undo-tree-id4466 . -1) (undo-tree-id4467 . -1) (undo-tree-id4468 . -1) (undo-tree-id4469 . -1) (undo-tree-id4470 . -1) 30879 (30864 . 30879) (t 26478 41248 219871 224000)) nil (26478 41303 521496 843000) 0 nil])
([nil nil ((31185 . 31193) (31183 . 31185) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -31183) (undo-tree-id2774 . -1) (undo-tree-id2775 . -1) (undo-tree-id2776 . -1) (undo-tree-id2777 . -1) (undo-tree-id2778 . -1) (undo-tree-id2779 . -1) (31179 . 31184) (#("}" 0 1 (fontified t)) . -31179) (undo-tree-id2780 . -1) 31180 (31165 . 31180) (31157 . 31165) (31157 . 31158) (#("%% \\begin{figure}[H]
%% 	\\centering
%% 	\\includegraphics[width=0.8\\textwidth]{media/ict/image76}
%% 	\\caption*{}
%% \\end{figure}
" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 9 (face font-lock-comment-face fontified t) 9 17 (face font-lock-comment-face fontified t latex-env-pair t) 17 21 (face font-lock-comment-face fontified t) 21 24 (face font-lock-comment-delimiter-face fontified t) 24 36 (face font-lock-comment-face fontified t) 36 39 (face font-lock-comment-delimiter-face fontified t) 39 41 (face font-lock-comment-face fontified t) 41 72 (face font-lock-comment-face fontified t) 72 73 (face font-lock-comment-face fontified t) 73 97 (face font-lock-comment-face fontified t) 97 100 (face font-lock-comment-delimiter-face fontified t) 100 101 (face font-lock-comment-face fontified t) 101 113 (face font-lock-comment-face fontified t) 113 116 (face font-lock-comment-delimiter-face fontified t) 116 120 (face font-lock-comment-face fontified t) 120 128 (face font-lock-comment-face fontified t latex-env-pair t) 128 129 (face font-lock-comment-face fontified t)) . 31157) (undo-tree-id2781 . -128) (undo-tree-id2782 . -128) (undo-tree-id2783 . -17) (undo-tree-id2784 . -128) (undo-tree-id2785 . -17) (undo-tree-id2786 . -17) (undo-tree-id2787 . -17) (undo-tree-id2788 . -17) (undo-tree-id2789 . -17) (undo-tree-id2790 . -34) (undo-tree-id2791 . -34) (undo-tree-id2792 . -34) (undo-tree-id2793 . -34) (undo-tree-id2794 . -34) (undo-tree-id2795 . -34) (undo-tree-id2796 . -34) (undo-tree-id2797 . -34) (undo-tree-id2798 . -34) (undo-tree-id2799 . -34) (undo-tree-id2800 . -34) (undo-tree-id2801 . -34) (undo-tree-id2802 . -34) (undo-tree-id2803 . -34) (undo-tree-id2804 . -34) (undo-tree-id2805 . -17) (undo-tree-id2806 . -17) (undo-tree-id2807 . -17) (undo-tree-id2808 . -17) (undo-tree-id2809 . -17) (undo-tree-id2810 . -17) (undo-tree-id2811 . -17) (undo-tree-id2812 . -17) (undo-tree-id2813 . -17) (undo-tree-id2814 . -17) (undo-tree-id2815 . -17) (undo-tree-id2816 . -17) (undo-tree-id2817 . -17) (undo-tree-id2818 . -17) (undo-tree-id2819 . -17) (undo-tree-id2820 . -17) (undo-tree-id2821 . -17) (undo-tree-id2822 . -17) (undo-tree-id2823 . -17) (undo-tree-id2824 . -17) (undo-tree-id2825 . -17) (undo-tree-id2826 . -17) (undo-tree-id2827 . -17) (undo-tree-id2828 . -17) (undo-tree-id2829 . -17) (undo-tree-id2830 . -17) (undo-tree-id2831 . -17) (undo-tree-id2832 . -17) (undo-tree-id2833 . -17) (undo-tree-id2834 . -17) (undo-tree-id2835 . -17) (undo-tree-id2836 . -17) (undo-tree-id2837 . -17) (undo-tree-id2838 . -17) (undo-tree-id2839 . -17) (undo-tree-id2840 . -17) (undo-tree-id2841 . -17) (undo-tree-id2842 . -35) (undo-tree-id2843 . -35) (undo-tree-id2844 . -35) (undo-tree-id2845 . -35) (undo-tree-id2846 . -35) (undo-tree-id2847 . -35) (undo-tree-id2848 . -35) (undo-tree-id2849 . -35) (undo-tree-id2850 . -35) (undo-tree-id2851 . -35) (undo-tree-id2852 . -35) (undo-tree-id2853 . -35) (undo-tree-id2854 . -35) (undo-tree-id2855 . -35) (undo-tree-id2856 . -35) (undo-tree-id2857 . -35) (undo-tree-id2858 . -35) (undo-tree-id2859 . -53) (undo-tree-id2860 . -53) (undo-tree-id2861 . -53) (undo-tree-id2862 . -53) (undo-tree-id2863 . -53) (undo-tree-id2864 . -112) (undo-tree-id2865 . -112) (undo-tree-id2866 . -112) (undo-tree-id2867 . -112) (undo-tree-id2868 . -112) (undo-tree-id2869 . -113) (undo-tree-id2870 . -128) (undo-tree-id2871 . -128) (undo-tree-id2872 . -128) (undo-tree-id2873 . -128) (undo-tree-id2874 . -128) (undo-tree-id2875 . -128) (undo-tree-id2876 . -128) (undo-tree-id2877 . -128) (undo-tree-id2878 . -128) (undo-tree-id2879 . -128) (undo-tree-id2880 . -128) (undo-tree-id2881 . -128) (undo-tree-id2882 . -128) (undo-tree-id2883 . -128) (undo-tree-id2884 . -128) (undo-tree-id2885 . -128) (undo-tree-id2886 . -128) (undo-tree-id2887 . -128) (undo-tree-id2888 . -128) (undo-tree-id2889 . -128) (undo-tree-id2890 . -128) (undo-tree-id2891 . -128) (undo-tree-id2892 . -128) (undo-tree-id2893 . -128) (undo-tree-id2894 . -128) (undo-tree-id2895 . -128) (undo-tree-id2896 . -128) (undo-tree-id2897 . -128) (undo-tree-id2898 . -129) (undo-tree-id2899 . -129) 31285) nil (26478 41303 520911 908000) 0 nil])
([nil nil ((31157 . 31174) (31194 . 31209)) nil (26478 41303 520845 835000) 0 nil])
([nil nil ((#("85" 0 2 (fontified t)) . -26406) (t 26478 41303 530461 612000) (26408 . 26410) 26407 (t 26478 41303 530461 612000)) nil (26478 41370 277764 328000) 0 nil])
([nil nil ((nil fontified t 26406 . 26408) (#("86" 0 2 (fontified t)) . -26406) (26408 . 26410) 26407) nil (26478 41370 277763 55000) 0 nil])
([nil nil ((nil fontified t 26406 . 26408) (#("87" 0 2 (fontified t)) . -26406) (26408 . 26410) 26407) nil (26478 41370 277761 793000) 0 nil])
([nil nil ((nil fontified t 26406 . 26408) (#("88" 0 2 (fontified t)) . -26406) (26408 . 26410) 26407) nil (26478 41370 277760 29000) 0 nil])
([nil nil ((nil fontified t 26406 . 26408) (#("89" 0 2 (fontified t)) . -26406) (26408 . 26410) 26407) nil (26478 41370 277758 697000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 26407) (undo-tree-id4471 . -1) (undo-tree-id4472 . -1)) nil (26478 41408 874512 636000) 0 nil])
([nil nil ((26406 . 26407) (#("9" 0 1 (fontified t)) . 26406) (undo-tree-id4515 . -1) (undo-tree-id4516 . -1) (undo-tree-id4517 . -1) (t 26478 41370 286967 123000)) nil (26478 41415 949874 590000) 0 nil] [nil nil ((26413 . 26414) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . 26413) (undo-tree-id4473 . -1) (26412 . 26413) (#("w" 0 1 (face font-lock-keyword-face fontified nil)) . 26412) (26411 . 26412) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . 26411) (26410 . 26411) (#("x" 0 1 (face font-lock-keyword-face fontified nil)) . 26410) (26409 . 26410) (#("e" 0 1 (face font-lock-keyword-face fontified nil)) . 26409) (26408 . 26409) (#("t" 0 1 (face font-lock-keyword-face fontified nil)) . 26408) (26407 . 26408) (#("\\" 0 1 (face font-lock-keyword-face fontified nil)) . 26407) (26406 . 26407) (#("6" 0 1 (fontified t)) . 26406) (26406 . 26407) (#("9" 0 1 (fontified t)) . 26406) (undo-tree-id4474 . -1) (undo-tree-id4475 . -1) (undo-tree-id4476 . -1) (t 26478 41370 286967 123000)) ((26406 . 26407) (#("6" 0 1 (fontified nil)) . 26406) (26406 . 26407) (#("8" 0 1 (fontified nil)) . 26406) (undo-tree-id4477 . -1) (undo-tree-id4478 . -1) (undo-tree-id4479 . -1) (undo-tree-id4480 . -1) (undo-tree-id4481 . -1) (26407 . 26408) (#("8" 0 1 (fontified nil)) . 26407) (undo-tree-id4482 . -1) (undo-tree-id4483 . -1) (undo-tree-id4484 . -1) (undo-tree-id4485 . -1) (undo-tree-id4486 . -1) (26408 . 26409) (#("8" 0 1 (fontified nil)) . 26408) (undo-tree-id4487 . -1) (undo-tree-id4488 . -1) (undo-tree-id4489 . -1) (undo-tree-id4490 . -1) (undo-tree-id4491 . -1) (26409 . 26410) (#("8" 0 1 (fontified nil)) . 26409) (undo-tree-id4492 . -1) (undo-tree-id4493 . -1) (undo-tree-id4494 . -1) (undo-tree-id4495 . -1) (undo-tree-id4496 . -1) (26410 . 26411) (#("8" 0 1 (fontified nil)) . 26410) (undo-tree-id4497 . -1) (undo-tree-id4498 . -1) (undo-tree-id4499 . -1) (undo-tree-id4500 . -1) (undo-tree-id4501 . -1) (26411 . 26412) (#("8" 0 1 (fontified nil)) . 26411) (undo-tree-id4502 . -1) (undo-tree-id4503 . -1) (undo-tree-id4504 . -1) (undo-tree-id4505 . -1) (undo-tree-id4506 . -1) (26412 . 26413) (#("8" 0 1 (fontified nil)) . 26412) (undo-tree-id4507 . -1) (undo-tree-id4508 . -1) (undo-tree-id4509 . -1) (undo-tree-id4510 . -1) (26413 . 26414) (#("8" 0 1 (fontified t)) . 26413)) (26478 41408 874178 611000) 0 nil])
([nil nil ((#("
\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image44}
	\\caption*{Figure 4 - Dense neural network}
\\end{figure}
" 0 1 (fontified t) 1 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t latex-env-pair t) 8 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 20 (fontified t) 20 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 48 (face font-lock-keyword-face fontified t) 48 58 (fontified t) 58 68 (face font-lock-keyword-face fontified t) 68 70 (fontified t) 70 87 (face font-lock-builtin-face fontified t) 87 90 (fontified t) 90 99 (face font-lock-keyword-face fontified t) 99 133 (fontified t) 133 137 (face font-lock-keyword-face fontified t) 137 138 (fontified t latex-env-pair t) 138 144 (face font-lock-function-name-face fontified t latex-env-pair t) 144 145 (fontified t latex-env-pair t) 145 146 (fontified t)) . 28616) (undo-tree-id4511 . -133) (undo-tree-id4512 . -145) (undo-tree-id4513 . -133) (undo-tree-id4514 . -133) 28749) nil (26478 41415 949872 165000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 26487 . 26488) (#("
" 0 1 (fontified nil)) . -26633) (26487 . 26634) 26475) nil (26478 41415 949859 642000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -26545) (t 26478 41415 961628 817000) (26546 . 26547) 26545 (t 26478 41415 961628 817000)) nil (26478 41427 219993 589000) 0 nil])
([nil nil ((#("\\end{multicols}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t)) . 28746) (undo-tree-id4537 . -16) (undo-tree-id4538 . -15) (undo-tree-id4539 . -16) (undo-tree-id4540 . -16) (undo-tree-id4541 . -16) (undo-tree-id4542 . -16) (undo-tree-id4543 . -16) (undo-tree-id4544 . -14) 28760 (t 26478 41427 231545 336000)) nil (26478 41454 654412 508000) 0 nil])
([nil nil ((nil rear-nonsticky nil 29735 . 29736) (#("
" 0 1 (fontified nil)) . -29751) (29735 . 29752) 29685) nil (26478 41454 654409 803000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28857) (undo-tree-id4536 . -1)) nil (26478 41454 654409 422000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 28857) (undo-tree-id4535 . -1)) nil (26478 41454 654408 761000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 29192) (undo-tree-id4518 . -1) (undo-tree-id4519 . -1) (undo-tree-id4520 . -1) (undo-tree-id4521 . -1) (undo-tree-id4522 . -1) (undo-tree-id4523 . -1) (undo-tree-id4524 . -1) (undo-tree-id4525 . -1) (undo-tree-id4526 . -1) (undo-tree-id4527 . -1) (undo-tree-id4528 . -1) (undo-tree-id4529 . -1) (undo-tree-id4530 . -1) (undo-tree-id4531 . -1) (undo-tree-id4532 . -1) (undo-tree-id4533 . -1) (undo-tree-id4534 . -1)) nil (26478 41454 654405 104000) 0 nil])
([nil nil ((#("\\end{multicols}

\\begin{figure}[H]
	\\centering
	\\includegraphics[width=0.8\\textwidth]{media/ict/image63}
	\\caption*{Figure 5 - Long short-term memory neural network}
\\end{figure}
" 0 4 (face font-lock-keyword-face fontified t) 4 5 (fontified t latex-env-pair t) 5 14 (face font-lock-function-name-face fontified t latex-env-pair t) 14 15 (fontified t latex-env-pair t) 15 16 (fontified t) 16 17 (fontified t) 17 23 (face font-lock-keyword-face fontified t) 23 24 (fontified t latex-env-pair t) 24 30 (face font-lock-function-name-face fontified t latex-env-pair t) 30 31 (fontified t latex-env-pair t) 31 36 (fontified t) 36 46 (face font-lock-keyword-face fontified t) 46 48 (fontified t) 48 64 (face font-lock-keyword-face fontified t) 64 73 (fontified t) 73 74 (fontified t) 74 84 (face font-lock-keyword-face fontified t) 84 86 (fontified t) 86 103 (face font-lock-builtin-face fontified t) 103 105 (fontified t) 105 106 (fontified t) 106 112 (face font-lock-keyword-face fontified t) 112 115 (face font-lock-keyword-face fontified t) 115 126 (fontified t) 126 127 (fontified t) 127 166 (fontified t) 166 170 (face font-lock-keyword-face fontified t) 170 171 (fontified t latex-env-pair t) 171 177 (face font-lock-function-name-face fontified t latex-env-pair t) 177 178 (fontified t latex-env-pair t) 178 179 (fontified t)) . 29733) (undo-tree-id4545 . -166) (undo-tree-id4546 . -178) (undo-tree-id4547 . -166) (undo-tree-id4548 . -166) 29899 (t 26478 41454 663342 138000)) nil (26478 41492 165686 713000) 0 nil])
([nil nil ((nil rear-nonsticky nil 28745 . 28746) (#("
" 0 1 (fontified nil)) . -28924) (28745 . 28925) 28726) nil (26478 41492 165677 55000) 0 nil])
([nil nil ((28926 . 28947) (31472 . 31488)) nil (26478 41492 165673 288000) 0 nil])
([nil nil ((nil fontified t 26545 . 26546) (t 26478 41492 177064 252000) (#("7" 0 1 (fontified t)) . -26545) (t 26478 41492 177064 252000) (26546 . 26547) 26545 (t 26478 41492 177064 252000)) nil (26478 41511 126664 47000) 0 nil])
([nil nil ((nil fontified t 26406 . 26407) (t 26478 41511 137923 811000) (#("8" 0 1 (fontified t)) . -26406) (t 26478 41511 137923 811000) (26407 . 26408) 26406 (t 26478 41511 137923 811000)) nil (26478 41521 20040 736000) 0 nil])
([nil nil ((26545 . 26547) (#("5" 0 1 (fontified t)) . -26545) (undo-tree-id4549 . -1) (undo-tree-id4550 . -1) (undo-tree-id4551 . -1) (undo-tree-id4552 . -1) (undo-tree-id4553 . -1) (undo-tree-id4554 . -1) (undo-tree-id4555 . -1) (undo-tree-id4556 . -1) (undo-tree-id4557 . -1) (undo-tree-id4558 . -1) (undo-tree-id4559 . -1) (undo-tree-id4560 . -1) (undo-tree-id4561 . -1) (undo-tree-id4562 . -1) (undo-tree-id4563 . -1) (undo-tree-id4564 . -1) (undo-tree-id4565 . -1) (undo-tree-id4566 . -1) (undo-tree-id4567 . -1) (undo-tree-id4568 . -1) (undo-tree-id4569 . -1) (undo-tree-id4570 . -1) 26546 (26545 . 26546) (#("8" 0 1 (fontified t)) . 26545) (undo-tree-id4571 . -1) (undo-tree-id4572 . -1) (t 26478 41521 30850 537000)) nil (26478 41532 378970 195000) 0 nil])
([nil nil ((nil fontified t 28820 . 28821) (t 26478 41532 390766 402000) (#("8" 0 1 (fontified t)) . -28820) (t 26478 41532 390766 402000) (28821 . 28822) 28820 (t 26478 41532 390766 402000)) nil (26478 41549 296989 261000) 0 nil])
([nil nil ((nil fontified t 28820 . 28821) (#("7" 0 1 (fontified t)) . -28820) (28821 . 28822) 28820) nil (26478 41549 296984 993000) 0 nil])
([nil nil ((31672 . 31693) (33061 . 33077) (t 26478 41549 306641 127000)) nil (26478 41580 301494 615000) 0 nil])
([nil nil ((33248 . 33269) (35277 . 35293)) nil (26478 41580 301490 598000) 0 nil])
([nil current ((46440 . 46442) (t 26478 41580 310411 484000)) nil (26478 41632 363097 394000) 0 nil])
nil
