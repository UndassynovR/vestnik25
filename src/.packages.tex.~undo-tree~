(undo-tree-save-format-version . 1)
"89dca6b533ce39aba17aadcb769db941df7be46a"
[nil nil nil nil (26489 18001 114119 770000) 0 nil]
([nil nil ((3422 . 3435) (t 26489 17918 408654 637000)) nil (26489 18001 114116 354000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 3431) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (t 26489 18001 115778 775000)) nil (26489 18007 931101 523000) 0 nil])
([nil nil ((3435 . 3436) (t 26489 18007 936706 552000)) nil (26489 18015 47642 638000) 0 nil])
([nil nil ((3355 . 3356)) nil (26489 18015 47641 776000) 0 nil])
([nil nil ((3356 . 3360)) nil (26489 18015 47637 879000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -3435) (t 26489 18015 52631 208000) (3436 . 3437) 3435 (t 26489 18015 52631 208000)) nil (26489 18025 719054 972000) 0 nil])
([nil nil ((3437 . 3438) (3436 . 3437) (t 26489 18025 721518 259000)) nil (26489 18037 196449 198000) 0 nil])
([nil nil ((#("% Document packages
% -----------------

% Font and language packages
\\usepackage{fontspec}                 % Kazakh and Russian fonts
\\usepackage{polyglossia}              % Multilingual support

\\setmainlanguage{russian}
\\setotherlanguages{english}
\\defaultfontfeatures{Ligatures=TeX}
\\setmainfont{FreeSerif}
\\setsansfont{FreeSans}
\\setmonofont{FreeMono}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 20 (face font-lock-comment-face fontified t) 20 22 (face font-lock-comment-delimiter-face fontified t) 22 40 (face font-lock-comment-face fontified t) 40 41 (fontified t) 41 43 (face font-lock-comment-delimiter-face fontified t) 43 70 (face font-lock-comment-face fontified t) 70 81 (face font-lock-keyword-face fontified t) 81 82 (fontified t) 82 90 (face font-lock-builtin-face fontified t) 90 108 (fontified t) 108 135 (face font-lock-comment-face fontified t) 135 146 (face font-lock-keyword-face fontified t) 146 147 (fontified t) 147 158 (face font-lock-builtin-face fontified t) 158 173 (fontified t) 173 196 (face font-lock-comment-face fontified t) 196 197 (fontified t) 197 213 (face font-lock-keyword-face fontified t) 213 223 (fontified t) 223 241 (face font-lock-keyword-face fontified t) 241 251 (fontified t) 251 271 (face font-lock-keyword-face fontified t) 271 287 (fontified t) 287 299 (face font-lock-keyword-face fontified t) 299 311 (fontified t) 311 323 (face font-lock-keyword-face fontified t) 323 334 (fontified t) 334 346 (face font-lock-keyword-face fontified t) 346 357 (fontified t)) . 1) (undo-tree-id12 . -356) (undo-tree-id13 . -334) (undo-tree-id14 . -334) (undo-tree-id15 . -334) 335 (t 26489 18037 201396 732000)) nil (26489 18187 326758 249000) 0 nil])
([nil nil ((nil rear-nonsticky nil 451 . 452) (nil fontified nil 1 . 452) (1 . 452)) nil (26489 18187 326749 142000) 0 nil])
([nil nil ((452 . 453) 451) nil (26489 18187 326740 726000) 0 nil])
([nil nil ((nil rear-nonsticky nil 326 . 327) (nil fontified nil 1 . 327) (1 . 327) (#("% ===========================
% Document Packages
% ===========================

% ---------------------------
% Font and Language Packages
% ---------------------------
\\usepackage{fontspec}               % Kazakh and Russian fonts
\\usepackage{polyglossia}            % Multilingual support
\\setmainlanguage{russian}
\\setotherlanguages{english}
\\defaultfontfeatures{Ligatures=TeX}
\\setmainfont{FreeSerif}
\\setsansfont{FreeSans}
\\setmonofont{FreeMono}" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 30 (face font-lock-comment-face fontified t) 30 32 (face font-lock-comment-delimiter-face fontified t) 32 50 (face font-lock-comment-face fontified t) 50 52 (face font-lock-comment-delimiter-face fontified t) 52 80 (face font-lock-comment-face fontified t) 80 81 (fontified t) 81 83 (face font-lock-comment-delimiter-face fontified t) 83 111 (face font-lock-comment-face fontified t) 111 113 (face font-lock-comment-delimiter-face fontified t) 113 140 (face font-lock-comment-face fontified t) 140 142 (face font-lock-comment-delimiter-face fontified t) 142 170 (face font-lock-comment-face fontified t) 170 181 (face font-lock-keyword-face fontified t) 181 182 (fontified t) 182 190 (face font-lock-builtin-face fontified t) 190 206 (fontified t) 206 233 (face font-lock-comment-face fontified t) 233 244 (face font-lock-keyword-face fontified t) 244 245 (fontified t) 245 256 (face font-lock-builtin-face fontified t) 256 269 (fontified t) 269 292 (face font-lock-comment-face fontified t) 292 308 (face font-lock-keyword-face fontified t) 308 318 (fontified t) 318 336 (face font-lock-keyword-face fontified t) 336 346 (fontified t) 346 366 (face font-lock-keyword-face fontified t) 366 382 (fontified t) 382 394 (face font-lock-keyword-face fontified t) 394 406 (fontified t) 406 418 (face font-lock-keyword-face fontified t) 418 429 (fontified t) 429 441 (face font-lock-keyword-face fontified t) 441 450 (fontified t) 450 451 (rear-nonsticky t fontified t)) . 1) (undo-tree-id54 . -450) (undo-tree-id55 . -429) (undo-tree-id56 . -429) (t 26489 18187 331807 990000)) nil (26489 18457 15267 533000) 0 nil])
([nil nil ((328 . 329) 328) nil (26489 18457 15265 740000) 0 nil])
([nil nil ((nil rear-nonsticky nil 778 . 779) (nil fontified nil 329 . 779) (329 . 779)) nil (26489 18457 15265 169000) 0 nil])
([nil nil ((779 . 780) 778) nil (26489 18457 15264 808000) 0 nil])
([nil nil ((#("% Page layout package
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 22 (face font-lock-comment-face fontified t)) . 1716) (undo-tree-id52 . -21) (undo-tree-id53 . -22)) nil (26489 18457 15264 307000) 0 nil])
([nil nil ((#("\\usepackage[margin=2cm]{geometry}     % Customizing page layout and margins
" 0 11 (face font-lock-keyword-face fontified t) 11 24 (fontified t) 24 32 (face font-lock-builtin-face fontified t) 32 38 (fontified t) 38 75 (face font-lock-comment-face fontified t) 75 76 (face font-lock-comment-face fontified t)) . 1716) (undo-tree-id49 . -75) (undo-tree-id50 . -75) (undo-tree-id51 . -76)) nil (26489 18457 15263 245000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1716)) nil (26489 18457 15261 151000) 0 nil])
([nil nil ((#("% Section formatting package
\\usepackage{sectsty}                  % Customizing section headings
\\usepackage{titlesec}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 29 (face font-lock-comment-face fontified t) 29 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 48 (face font-lock-builtin-face fontified t) 48 67 (fontified t) 67 98 (face font-lock-comment-face fontified t) 98 109 (face font-lock-keyword-face fontified t) 109 110 (fontified t) 110 118 (face font-lock-builtin-face fontified t) 118 120 (fontified t)) . 1997) (undo-tree-id42 . -119) (undo-tree-id43 . -110) (undo-tree-id44 . -98) (undo-tree-id45 . -98) (undo-tree-id46 . -12) (undo-tree-id47 . -110) (undo-tree-id48 . -110) 2107) nil (26489 18457 15260 781000) 0 nil])
([nil nil ((#("\\usepackage{fancyhdr}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 2919) (undo-tree-id40 . -21) (undo-tree-id41 . -17) 2936) nil (26489 18457 15257 805000) 0 nil])
([nil nil ((#("\\pagestyle{fancy}
" 0 10 (face font-lock-keyword-face fontified t) 10 17 (fontified t) 17 18 (fontified t)) . 2919) (undo-tree-id38 . -17) (undo-tree-id39 . -16) 2935) nil (26489 18457 15256 903000) 0 nil])
([nil nil ((#("\\fancyhf{}
" 0 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 11 (fontified t)) . 2919) (undo-tree-id36 . -10) (undo-tree-id37 . -9) 2928) nil (26489 18457 15255 741000) 0 nil])
([nil nil ((#("% Header packages
\\renewcommand{\\sectionmark}[1]{ \\markright{#1}{} }
\\renewcommand{\\chaptermark}[1]{ \\markboth{#1}{} }
\\fancyfoot[LE,RO]{\\thepage}
\\fancyhead[RE]{ҚазТБУ ХАБАРШЫСЫ - VESTNIK KazUTB - ВЕСТНИК КазУТБ}
\\renewcommand{\\headrulewidth}{2pt}% 2pt header rule
\\renewcommand{\\headrule}{\\hbox to\\headwidth{%
  \\color{lightblue}\\leaders\\hrule height \\headrulewidth\\hfill}}
\\setlength{\\headheight}{22pt}
\\addtolength{\\topmargin}{-10pt}
\\renewcommand{\\footrulewidth}{2pt}
\\renewcommand{\\footrule}{\\hbox to\\headwidth{%
  \\color{lightblue}\\leaders\\hrule height \\footrulewidth\\hfill}}
\\addto\\captionsrussian{
    \\renewcommand{\\contentsname}{\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS\\vspace{2.5em}}
}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t) 18 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 44 (face font-lock-function-name-face fontified t) 44 50 (fontified t) 50 60 (face font-lock-keyword-face fontified t) 60 68 (fontified t) 68 69 (fontified t) 69 82 (face font-lock-keyword-face fontified t) 82 83 (fontified t) 83 95 (face font-lock-function-name-face fontified t) 95 101 (fontified t) 101 110 (face font-lock-keyword-face fontified t) 110 119 (fontified t) 119 129 (face font-lock-keyword-face fontified t) 129 137 (fontified t) 137 144 (face font-lock-keyword-face fontified t) 144 145 (face font-lock-keyword-face fontified t) 145 147 (fontified t) 147 157 (face font-lock-keyword-face fontified t) 157 170 (fontified t) 170 171 (fontified t) 171 214 (fontified t) 214 227 (face font-lock-keyword-face fontified t) 227 228 (fontified t) 228 242 (face font-lock-function-name-face fontified t) 242 248 (fontified t) 248 266 (face font-lock-comment-face fontified t) 266 279 (face font-lock-keyword-face fontified t) 279 280 (fontified t) 280 289 (face font-lock-function-name-face fontified t) 289 291 (fontified t) 291 296 (face font-lock-keyword-face fontified t) 296 299 (fontified t) 299 309 (face font-lock-keyword-face fontified t) 309 310 (fontified t) 310 312 (face font-lock-comment-face fontified t) 312 314 (fontified t) 314 320 (face font-lock-keyword-face fontified t) 320 327 (fontified t) 327 331 (fontified t) 331 339 (face font-lock-keyword-face fontified t) 339 345 (face font-lock-keyword-face fontified t) 345 353 (fontified t) 353 367 (face font-lock-keyword-face fontified t) 367 373 (face font-lock-keyword-face fontified t) 373 376 (fontified t) 376 386 (face font-lock-keyword-face fontified t) 386 387 (fontified t) 387 398 (face font-lock-variable-name-face fontified t) 398 406 (fontified t) 406 418 (face font-lock-keyword-face fontified t) 418 419 (fontified t) 419 429 (face font-lock-variable-name-face fontified t) 429 438 (fontified t) 438 451 (face font-lock-keyword-face fontified t) 451 452 (fontified t) 452 466 (face font-lock-function-name-face fontified t) 466 473 (fontified t) 473 486 (face font-lock-keyword-face fontified t) 486 487 (fontified t) 487 496 (face font-lock-function-name-face fontified t) 496 498 (fontified t) 498 503 (face font-lock-keyword-face fontified t) 503 506 (fontified t) 506 516 (face font-lock-keyword-face fontified t) 516 517 (fontified t) 517 519 (face font-lock-comment-face fontified t) 519 521 (fontified t) 521 527 (face font-lock-keyword-face fontified t) 527 538 (fontified t) 538 546 (face font-lock-keyword-face fontified t) 546 552 (face font-lock-keyword-face fontified t) 552 560 (fontified t) 560 574 (face font-lock-keyword-face fontified t) 574 580 (face font-lock-keyword-face fontified t) 580 583 (fontified t) 583 587 (face font-lock-keyword-face fontified t) 587 588 (face font-lock-keyword-face fontified t) 588 589 (face font-lock-keyword-face fontified t) 589 605 (face font-lock-keyword-face fontified t) 605 607 (fontified t) 607 611 (fontified t) 611 624 (face font-lock-keyword-face fontified t) 624 625 (fontified t) 625 638 (face font-lock-function-name-face fontified t) 638 640 (fontified t) 640 646 (face font-lock-keyword-face fontified t) 646 656 (fontified t) 656 678 (fontified t) 678 685 (face font-lock-keyword-face fontified t) 685 686 (fontified t) 686 689 (fontified t) 689 692 (fontified t) 692 694 (fontified t) 694 696 (fontified t)) . 2901) (undo-tree-id32 . -695) (undo-tree-id33 . -688) (undo-tree-id34 . -694) (undo-tree-id35 . -694)) nil (26489 18457 15254 18000) 0 nil])
([nil nil ((nil rear-nonsticky nil 779 . 780) (#("
" 0 1 (fontified nil)) . -1475) (779 . 1476) 713) nil (26489 18457 15251 864000) 0 nil])
([nil nil ((779 . 780) 713) nil (26489 18457 15250 972000) 0 nil])
([nil nil ((#("\\fancyfoot[LE,RO]{\\thepage}
" 0 10 (face font-lock-keyword-face fontified t) 10 18 (fontified t) 18 25 (face font-lock-keyword-face fontified t) 25 26 (face font-lock-keyword-face fontified t) 26 28 (fontified t)) . 900) (undo-tree-id31 . -27)) nil (26489 18457 15250 211000) 0 nil])
([nil nil ((#("\\fancyhead[RE]{ҚазТБУ ХАБАРШЫСЫ - VESTNIK KazUTB - ВЕСТНИК КазУТБ}
" 0 10 (face font-lock-keyword-face fontified t) 10 23 (fontified t) 23 24 (fontified t) 24 66 (fontified t) 66 67 (fontified t)) . 900) (undo-tree-id30 . -66)) nil (26489 18457 15249 209000) 0 nil])
([nil nil ((#("\\renewcommand{\\headrulewidth}{2pt}% 2pt header rule
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 28 (face font-lock-function-name-face fontified t) 28 34 (fontified t) 34 51 (face font-lock-comment-face fontified t) 51 52 (face font-lock-comment-face fontified t)) . 900) (undo-tree-id29 . -51)) nil (26489 18457 15248 177000) 0 nil])
([nil nil ((nil rear-nonsticky nil 779 . 780) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -831) (779 . 832) 713) nil (26489 18457 15247 285000) 0 nil])
([nil nil ((#("\\renewcommand{\\headrule}{\\hbox to\\headwidth{%
  \\color{lightblue}\\leaders\\hrule height \\headrulewidth\\hfill}}
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-function-name-face fontified t) 23 25 (fontified t) 25 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-comment-face fontified t) 45 46 (face font-lock-comment-face fontified t) 46 48 (fontified t) 48 54 (face font-lock-keyword-face fontified t) 54 61 (fontified t) 61 65 (fontified t) 65 73 (face font-lock-keyword-face fontified t) 73 79 (face font-lock-keyword-face fontified t) 79 87 (fontified t) 87 101 (face font-lock-keyword-face fontified t) 101 107 (face font-lock-keyword-face fontified t) 107 110 (fontified t)) . 952) (undo-tree-id25 . -109) (undo-tree-id26 . -46) (undo-tree-id27 . -46) (undo-tree-id28 . -46) 998) nil (26489 18457 15245 983000) 0 nil])
([nil nil ((nil rear-nonsticky nil 831 . 832) (#("
" 0 1 (fontified nil)) . -941) (831 . 942) 780) nil (26489 18457 15244 69000) 0 nil])
([nil nil ((940 . 943)) nil (26489 18457 15243 98000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -941) (undo-tree-id24 . -1) 942) nil (26489 18457 15242 446000) 0 nil])
([nil nil ((#("\\renewcommand{\\headrulewidth}{2pt}% 2pt header rule
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 28 (face font-lock-function-name-face fontified t) 28 34 (fontified t) 34 51 (face font-lock-comment-face fontified t) 51 52 (face font-lock-comment-face rear-nonsticky t fontified t)) . 780) (undo-tree-id23 . -51)) nil (26489 18457 15241 354000) 0 nil])
([nil nil ((nil rear-nonsticky nil 890 . 891) (#("
" 0 1 (fontified nil rear-nonsticky t face font-lock-comment-face)) . -942) (890 . 943) 889) nil (26489 18457 15240 252000) 0 nil])
([nil nil ((779 . 780) 713) nil (26489 18457 15239 250000) 0 nil])
([nil nil ((#("\\setlength{\\headheight}{22pt}
\\addtolength{\\topmargin}{-10pt}
\\renewcommand{\\footrulewidth}{2pt}
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 22 (face font-lock-variable-name-face fontified t) 22 29 (fontified t) 29 30 (fontified t) 30 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 53 (face font-lock-variable-name-face fontified t) 53 62 (fontified t) 62 75 (face font-lock-keyword-face fontified t) 75 76 (fontified t) 76 90 (face font-lock-function-name-face fontified t) 90 97 (fontified t)) . 1064) (undo-tree-id19 . -96) (undo-tree-id20 . -62) (undo-tree-id21 . -62) (undo-tree-id22 . -62) 1126) nil (26489 18457 15238 248000) 0 nil])
([nil nil ((nil rear-nonsticky nil 943 . 944) (#("
" 0 1 (fontified nil)) . -1040) (943 . 1041) 892) nil (26489 18460 318309 127000) 0 nil])
([nil nil ((#("\\renewcommand{\\footrule}{\\hbox to\\headwidth{%
  \\color{lightblue}\\leaders\\hrule height \\footrulewidth\\hfill}}
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-function-name-face fontified t) 23 25 (fontified t) 25 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-comment-face fontified t) 45 46 (face font-lock-comment-face fontified t) 46 48 (fontified t) 48 54 (face font-lock-keyword-face fontified t) 54 65 (fontified t) 65 73 (face font-lock-keyword-face fontified t) 73 79 (face font-lock-keyword-face fontified t) 79 87 (fontified t) 87 101 (face font-lock-keyword-face fontified t) 101 107 (face font-lock-keyword-face fontified t) 107 109 (fontified t) 109 110 (fontified t)) . 1161) (undo-tree-id118 . -109) (undo-tree-id119 . -70) (undo-tree-id120 . -24) (undo-tree-id121 . -70) (undo-tree-id122 . -70) 1231) nil (26489 18488 687239 628000) 0 nil] [nil nil ((#("% Header packages
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t)) . 1042) (undo-tree-id18 . -17)) ((1042 . 1060)) (26489 18458 785118 519000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (#("
" 0 1 (fontified nil)) . -1115) (1005 . 1116) 996) nil (26489 18488 687237 23000) 0 nil])
([nil nil ((#("\\renewcommand{\\footrule}{\\hbox to\\headwidth{%
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-function-name-face fontified t) 23 25 (fontified t) 25 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-comment-face fontified t) 45 46 (face font-lock-comment-face fontified t)) . 1143) (undo-tree-id16 . -45) (undo-tree-id17 . 46)) ((1143 . 1189)) (26489 18457 415264 25000) 0 nil])
([nil nil ((1005 . 1006) 974) nil (26489 18488 687236 422000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1005 . 1006) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -1051) (1005 . 1052) 974) ((#("
\\renewcommand{\\footrule}{\\hbox to\\headwidth{%
" 0 1 (rear-nonsticky nil fontified nil) 1 14 (face font-lock-keyword-face fontified nil) 14 15 (fontified nil) 15 24 (face font-lock-function-name-face fontified nil) 24 26 (fontified nil) 26 31 (face font-lock-keyword-face fontified nil) 31 34 (fontified nil) 34 44 (face font-lock-keyword-face fontified nil) 44 45 (fontified nil) 45 46 (face font-lock-comment-face fontified nil) 46 47 (fontified nil face font-lock-comment-face)) . 1005) (undo-tree-id57 . -1) (undo-tree-id58 . -46) (undo-tree-id59 . 47) (undo-tree-id60 . -44) (undo-tree-id61 . -44) (1051 . 1052) (nil rear-nonsticky t 1005 . 1006)) (26489 18457 15331 42000) 0 nil])
([nil nil ((1115 . 1118)) nil (26489 18488 687235 891000) 0 nil])
([nil nil ((1005 . 1006) 974) ((#("
" 0 1 (fontified t)) . 1005)) (26489 18457 15220 676000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -1116) (undo-tree-id117 . -1) 1117) nil (26489 18489 186961 647000) 0 nil])
nil
([nil nil ((#("\\setlength{\\headheight}{22pt}
\\addtolength{\\topmargin}{-10pt}
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 22 (face font-lock-variable-name-face fontified t) 22 29 (fontified t) 29 30 (fontified t) 30 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 53 (face font-lock-variable-name-face fontified t) 53 61 (fontified t) 61 62 (fontified t)) . 944) (undo-tree-id128 . -61) (undo-tree-id129 . -30) (undo-tree-id130 . -30) (undo-tree-id131 . -61) (undo-tree-id132 . -61) (undo-tree-id133 . -30) (undo-tree-id134 . -30) (undo-tree-id135 . -30)) nil (26489 18506 209169 451000) 0 nil] [nil nil ((#("\\setlength{\\headheight}{22pt}
\\addtolength{\\topmargin}{-10pt}
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 22 (face font-lock-variable-name-face fontified t) 22 29 (fontified t) 29 30 (fontified t) 30 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 53 (face font-lock-variable-name-face fontified t) 53 61 (fontified t) 61 62 (fontified t)) . 944) (undo-tree-id68 . -61) (undo-tree-id69 . -30) (undo-tree-id70 . -30) (undo-tree-id71 . -61) (undo-tree-id72 . -61) (undo-tree-id73 . -30) (undo-tree-id74 . -30) (undo-tree-id75 . -30) (undo-tree-id76 . -30) (undo-tree-id77 . -30) (undo-tree-id78 . -30) (undo-tree-id79 . -30) (undo-tree-id80 . -30) (undo-tree-id81 . -30) (undo-tree-id82 . -30) (undo-tree-id83 . -30) (undo-tree-id84 . -30) (undo-tree-id85 . -30) (undo-tree-id86 . -30) (undo-tree-id87 . -30) (undo-tree-id88 . -30) (undo-tree-id89 . -30) (undo-tree-id90 . -30) (undo-tree-id91 . -30) (undo-tree-id92 . -30) (undo-tree-id93 . -30) (undo-tree-id94 . -30) (undo-tree-id95 . -30) (undo-tree-id96 . -30) (undo-tree-id97 . -30) (undo-tree-id98 . -30) (undo-tree-id99 . -30) (undo-tree-id100 . -30) (undo-tree-id101 . -30) (undo-tree-id102 . -30) (undo-tree-id103 . -30) (undo-tree-id104 . -30) (undo-tree-id105 . -30) (undo-tree-id106 . -30) (undo-tree-id107 . -30) (undo-tree-id108 . -30) (undo-tree-id109 . -30) (undo-tree-id110 . -30) (undo-tree-id111 . -30) (undo-tree-id112 . -30) (undo-tree-id113 . -30) (undo-tree-id114 . -30) (undo-tree-id115 . -30) (undo-tree-id116 . -62) 974) ((944 . 1006)) (26489 18488 832037 904000) 0 nil])
([nil nil ((nil rear-nonsticky nil 780 . 781) (#("
" 0 1 (fontified nil)) . -842) (780 . 843)) nil (26489 18506 209165 604000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 944) (undo-tree-id66 . 1) (undo-tree-id67 . -1)) ((944 . 945)) (26489 18488 687299 139000) 0 nil])
([nil nil ((842 . 843) 811) nil (26489 18506 209164 902000) 0 nil])
([nil nil ((#("\\renewcommand{\\footrule}{\\hbox to\\headwidth{%
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 23 (face font-lock-function-name-face fontified t) 23 25 (fontified t) 25 30 (face font-lock-keyword-face fontified t) 30 33 (fontified t) 33 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t) 44 45 (face font-lock-comment-face fontified t) 45 46 (face font-lock-comment-face fontified t)) . 944) (undo-tree-id62 . -45) (undo-tree-id63 . 46) (undo-tree-id64 . -45) (undo-tree-id65 . -46)) ((944 . 990)) (26489 18488 687148 798000) 0 nil])
([nil nil ((#("\\renewcommand{\\chaptermark}[1]{ \\markboth{#1}{} }
" 0 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t) 14 26 (face font-lock-function-name-face fontified t) 26 32 (fontified t) 32 41 (face font-lock-keyword-face fontified t) 41 50 (fontified t)) . 1224) (undo-tree-id125 . -49) (undo-tree-id126 . -50) (undo-tree-id127 . -50)) nil (26489 18506 209163 680000) 0 nil])
nil
([nil nil ((1173 . 1223)) nil (26489 18506 209161 286000) 0 nil])
([nil nil ((1273 . 1274) 1223) nil (26489 18506 209160 594000) 0 nil])
([nil nil ((#("% Header packages
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t)) . 1155) (undo-tree-id123 . -17) (undo-tree-id124 . -18)) nil (26489 18506 209157 228000) 0 nil])
([nil nil ((nil rear-nonsticky nil 804 . 805) (nil fontified nil 780 . 805) (780 . 805) (t 26489 18506 215436 933000)) nil (26489 18581 919108 670000) 0 nil])
([nil nil ((805 . 806) 804) nil (26489 18581 919104 493000) 0 nil])
([nil nil ((797 . 805) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -797) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (796 . 798) (#("leftmark" 0 8 (face font-lock-keyword-face fontified t)) . 796) (undo-tree-id142 . -7) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -5) (undo-tree-id169 . -5) (undo-tree-id170 . -5) (undo-tree-id171 . -5) (undo-tree-id172 . -5) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (t 26489 18581 925637 264000)) nil (26489 18635 167075 52000) 0 nil])
([nil nil ((798 . 804) (#("g" 0 1 (face font-lock-keyword-face fontified t)) . -798) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) 799 (796 . 799) (#("rightmark" 0 9 (face font-lock-keyword-face fontified t)) . 796) (undo-tree-id232 . -8) (undo-tree-id233 . -8) (undo-tree-id234 . -8) (undo-tree-id235 . -8) (undo-tree-id236 . -8) (undo-tree-id237 . -8) (undo-tree-id238 . -8) (undo-tree-id239 . -8) (undo-tree-id240 . -8) (undo-tree-id241 . -8) (undo-tree-id242 . -8) (undo-tree-id243 . -8) (undo-tree-id244 . -8) (undo-tree-id245 . -8) (undo-tree-id246 . -8) (undo-tree-id247 . -8) (undo-tree-id248 . -8) (undo-tree-id249 . -8) (undo-tree-id250 . -8) (undo-tree-id251 . -8) (undo-tree-id252 . -8) (undo-tree-id253 . -8) (undo-tree-id254 . -8) (undo-tree-id255 . -8) (undo-tree-id256 . -8) (undo-tree-id257 . -8) (undo-tree-id258 . -7) (undo-tree-id259 . -7) (undo-tree-id260 . -7) (undo-tree-id261 . -7) (undo-tree-id262 . -7) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (undo-tree-id267 . -7) (undo-tree-id268 . -6) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -5) (undo-tree-id277 . -5) (undo-tree-id278 . -4) (undo-tree-id279 . -4) (undo-tree-id280 . -4) (undo-tree-id281 . -4) (undo-tree-id282 . -4) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -8) (undo-tree-id314 . -9) (undo-tree-id315 . -9) (t 26489 18635 169075 53000)) nil (26489 18655 422207 887000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7009 . 7010) (#("
" 0 1 (fontified nil)) . -7142) (7009 . 7143) (t 26489 18655 424861 213000)) nil (26489 18739 797062 295000) 0 nil])
([nil nil ((7142 . 7143) 7141) nil (26489 18739 797061 493000) 0 nil])
([nil nil ((#("    \\newpage
" 0 4 (fontified t) 4 12 (face font-lock-warning-face fontified t) 12 13 (fontified t)) . 7032) (undo-tree-id316 . -12)) nil (26489 18739 797060 572000) 0 nil])
([nil nil ((7025 . 7026)) nil (26489 18739 797047 597000) 0 nil])
([nil nil ((#("*" 0 1 (face font-lock-function-name-face fontified t)) . 7025) (t 26489 18739 804970 580000)) nil (26489 18818 35697 464000) 0 nil])
([nil nil ((7025 . 7027)) nil (26489 18818 35697 134000) 0 nil])
([nil nil ((#("w" 0 1 (face font-lock-function-name-face fontified t)) . 7025)) nil (26489 18818 35696 713000) 0 nil])
([nil nil ((#("n" 0 1 (face font-lock-function-name-face fontified t)) . 7025)) nil (26489 18818 35696 182000) 0 nil])
([nil nil ((7025 . 7026)) nil (26489 18818 35692 595000) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-function-name-face fontified t)) . 7025) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (t 26489 18818 41145 1000)) nil (26489 18838 19841 734000) 0 nil])
([nil nil ((7025 . 7026)) nil (26489 18838 19840 882000) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-function-name-face fontified t)) . 7025) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1)) nil (26489 18838 19840 111000) 0 nil])
([nil nil ((7023 . 7025) (#("i" 0 1 (face font-lock-function-name-face fontified t)) . -7023) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (#("d" 0 1 (face font-lock-function-name-face fontified t)) . -7024) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) 7025) nil (26489 18838 19829 661000) 0 nil])
([nil nil ((795 . 810) (t 26489 18838 21934 222000)) nil (26489 18985 907978 995000) 0 nil])
([nil nil ((819 . 820)) nil (26489 18985 907978 615000) 0 nil])
([nil nil ((805 . 806) (#("C" 0 1 (face font-lock-keyword-face fontified t)) . 805) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1)) nil (26489 18985 907975 178000) 0 nil])
([nil nil ((apply -9 1299 1422 undo--wrap-and-run-primitive-undo 1299 1422 ((1416 . 1419) (1326 . 1329) (1299 . 1302) 1412))) nil (26489 19979 65886 182000) 0 nil])
([nil nil ((apply 9 1299 1412 undo--wrap-and-run-primitive-undo 1299 1412 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1410) (#<marker at 665 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 822 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#<marker at 1358 in packages.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1323) (#<marker at 713 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 1323 in packages.tex> . -3) (#<marker at 822 in packages.tex> . -3) (#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -1299) (#<marker at 665 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) (#<marker at 1299 in packages.tex> . -3) 1421))) nil (26489 20008 35634 833000) 0 nil])
([nil nil ((#("\\large МАЗМҰНЫ – СОДЕРЖАНИЕ – CONTENTS\\vspace{2.5em}" 0 6 (face font-lock-keyword-face fontified t) 6 16 (fontified t) 16 38 (fontified t) 38 45 (face font-lock-keyword-face fontified t) 45 46 (fontified t) 46 49 (fontified t) 49 52 (fontified t)) . 1356) (undo-tree-id598 . -51) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -2) (undo-tree-id605 . -2) (undo-tree-id606 . -2) (undo-tree-id607 . -2) (undo-tree-id608 . -2) (undo-tree-id609 . -3) (undo-tree-id610 . -3) (undo-tree-id611 . -3) (undo-tree-id612 . -3) (undo-tree-id613 . -3) (undo-tree-id614 . -4) (undo-tree-id615 . -4) (undo-tree-id616 . -4) (undo-tree-id617 . -4) (undo-tree-id618 . -4) (undo-tree-id619 . -5) (undo-tree-id620 . -5) (undo-tree-id621 . -5) (undo-tree-id622 . -5) (undo-tree-id623 . -5) (undo-tree-id624 . -6) (undo-tree-id625 . -6) (undo-tree-id626 . -6) (undo-tree-id627 . -6) (undo-tree-id628 . -6) (undo-tree-id629 . -7) (undo-tree-id630 . -7) (undo-tree-id631 . -7) (undo-tree-id632 . -7) (undo-tree-id633 . -7) (undo-tree-id634 . -8) (undo-tree-id635 . -8) (undo-tree-id636 . -8) (undo-tree-id637 . -8) (undo-tree-id638 . -8) (undo-tree-id639 . -9) (undo-tree-id640 . -9) (undo-tree-id641 . -9) (undo-tree-id642 . -9) (undo-tree-id643 . -9) (undo-tree-id644 . -10) (undo-tree-id645 . -10) (undo-tree-id646 . -10) (undo-tree-id647 . -10) (undo-tree-id648 . -10) (undo-tree-id649 . -10) (undo-tree-id650 . -10) (undo-tree-id651 . -10) (undo-tree-id652 . -10) (undo-tree-id653 . -10) (undo-tree-id654 . -10) (undo-tree-id655 . -10) (undo-tree-id656 . -10) (undo-tree-id657 . -10) (undo-tree-id658 . -10) (undo-tree-id659 . -10) (undo-tree-id660 . -10) (undo-tree-id661 . -10) (undo-tree-id662 . -10) (undo-tree-id663 . -10) (undo-tree-id664 . -10) (undo-tree-id665 . -10) (undo-tree-id666 . -10) (undo-tree-id667 . -10) (undo-tree-id668 . -10) (undo-tree-id669 . -10) (undo-tree-id670 . -10) (undo-tree-id671 . -10) (undo-tree-id672 . -10) (undo-tree-id673 . -10) (undo-tree-id674 . -10) (undo-tree-id675 . -10) (undo-tree-id676 . -10) (undo-tree-id677 . -10) (undo-tree-id678 . -52) 1366) nil (26489 20008 35631 257000) 0 nil])
([nil nil ((#("\\newcommand{\\sectionwithauthors}[2]{%
  \\section*{#2}%
  \\vspace{-1em}%
  \\addcontentsline{toc}{section}{%
    #1 \\\\ % Authors
    \\normalsize\\itshape #2 % Section Title
  }%
  \\setcounter{figure}{0}%
  \\setcounter{table}{0}%
  \\setcounter{equation}{0}%
}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 18 (face font-lock-function-name-face fontified t) 18 31 (face font-lock-function-name-face fontified t) 31 36 (fontified t) 36 38 (face font-lock-comment-face fontified t) 38 40 (fontified t) 40 49 (face font-lock-keyword-face fontified t) 49 50 (fontified t) 50 52 (face font-lock-function-name-face fontified t) 52 53 (fontified t) 53 55 (face font-lock-comment-face fontified t) 55 57 (fontified t) 57 64 (face font-lock-keyword-face fontified t) 64 70 (fontified t) 70 72 (face font-lock-comment-face fontified t) 72 74 (fontified t) 74 90 (face font-lock-keyword-face fontified t) 90 105 (fontified t) 105 107 (face font-lock-comment-face fontified t) 107 114 (fontified t) 114 116 (face font-lock-warning-face fontified t) 116 117 (fontified t) 117 127 (face font-lock-comment-face fontified t) 127 131 (fontified t) 131 142 (face font-lock-keyword-face fontified t) 142 150 (face font-lock-keyword-face fontified t) 150 154 (fontified t) 154 170 (face font-lock-comment-face fontified t) 170 173 (fontified t) 173 175 (face font-lock-comment-face fontified t) 175 177 (fontified t) 177 188 (face font-lock-keyword-face fontified t) 188 189 (fontified t) 189 195 (face font-lock-variable-name-face fontified t) 195 199 (fontified t) 199 201 (face font-lock-comment-face fontified t) 201 203 (fontified t) 203 214 (face font-lock-keyword-face fontified t) 214 215 (fontified t) 215 220 (face font-lock-variable-name-face fontified t) 220 224 (fontified t) 224 226 (face font-lock-comment-face fontified t) 226 228 (fontified t) 228 239 (face font-lock-keyword-face fontified t) 239 240 (fontified t) 240 248 (face font-lock-variable-name-face fontified t) 248 252 (fontified t) 252 254 (face font-lock-comment-face fontified t) 254 256 (fontified t)) . 4874) (undo-tree-id679 . -255) (undo-tree-id680 . -254) (undo-tree-id681 . -254) (undo-tree-id682 . -254) 5128 (t 26489 20008 39616 130000)) nil (26489 20193 745353 949000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6837 . 6838) (#("
" 0 1 (fontified nil)) . -7093) (6837 . 7094) 6836) nil (26489 20193 745341 907000) 0 nil])
([nil nil ((6837 . 6838) 6836) nil (26489 20193 745337 509000) 0 nil])
([nil nil ((#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{12}\\selectfont % Slightly smaller line height for the header
}{%
    \\end{center}%
}

" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t latex-env-pair t) 44 50 (face font-lock-function-name-face fontified t latex-env-pair t) 50 51 (fontified t latex-env-pair t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 132 (face font-lock-comment-face fontified t) 132 134 (fontified t) 134 136 (face font-lock-comment-face fontified t) 136 140 (fontified t) 140 144 (face font-lock-keyword-face fontified t) 144 145 (fontified t latex-env-pair t) 145 151 (face font-lock-function-name-face fontified t latex-env-pair t) 151 152 (fontified t latex-env-pair t) 152 154 (face font-lock-comment-face fontified t) 154 157 (fontified t)) . 7096) (undo-tree-id683 . -156) (undo-tree-id684 . -156) (undo-tree-id685 . -156) (undo-tree-id686 . -154) (undo-tree-id687 . -156) 7252 (t 26489 20193 751618 190000)) nil (26489 20199 431503 297000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6838 . 6839) (#("
" 0 1 (fontified nil)) . -6995) (6838 . 6996)) nil (26489 20199 431487 778000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7035 . 7036) (#("
" 0 1 (fontified nil)) . -7051) (7033 . 7052) 7011 (t 26489 20199 438556 871000)) nil (26489 20242 889884 790000) 0 nil])
([nil nil ((#("\\fancyhead[LO]{\\MakeUppercase{\\leftmark}}
" 0 10 (face font-lock-keyword-face fontified t) 10 15 (fontified t) 15 25 (face font-lock-keyword-face fontified t) 25 26 (face font-lock-keyword-face fontified t) 26 29 (face font-lock-keyword-face fontified t) 29 30 (fontified t) 30 31 (face font-lock-keyword-face fontified t) 31 39 (face font-lock-keyword-face fontified t) 39 40 (fontified t) 40 41 (rear-nonsticky t fontified t) 41 42 (fontified t)) . 780) (undo-tree-id688 . -41) (undo-tree-id689 . -38) (undo-tree-id690 . -42) (undo-tree-id691 . -42) (undo-tree-id692 . -42) (undo-tree-id693 . -42) (undo-tree-id694 . -42) (undo-tree-id695 . -42) (t 26489 20242 896088 279000)) nil (26489 20327 847766 251000) 0 nil])
([nil nil ((nil rear-nonsticky nil 712 . 713) (#("
" 0 1 (fontified nil)) . -754) (712 . 755) 685) nil (26489 20327 847750 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1671 . 1672) (nil fontified nil 1361 . 1672) (1361 . 1672) (#("% Hyperlink and color packages
\\usepackage{hyperref}      % Hyperlinks within the document
\\usepackage{xcolor}                   % Color support
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 31 (face font-lock-comment-face fontified t) 31 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t) 43 51 (face font-lock-builtin-face fontified t) 51 58 (fontified t) 58 91 (face font-lock-comment-face fontified t) 91 102 (face font-lock-keyword-face fontified t) 102 103 (fontified t) 103 109 (face font-lock-builtin-face fontified t) 109 129 (fontified t) 129 145 (face font-lock-comment-face fontified t)) . 1361) (undo-tree-id745 . -144) (undo-tree-id746 . -145) (undo-tree-id747 . -91) (undo-tree-id748 . -91) (undo-tree-id749 . -23) (undo-tree-id750 . -23) (undo-tree-id751 . -91) (undo-tree-id752 . -91) (t 26489 20327 856172 411000)) nil (26489 20361 470985 484000) 0 nil])
([nil nil ((#("% Links and URL package
\\hypersetup{
    colorlinks=true,                   % Color links instead of boxes
    linkcolor=black,                    % Color of internal links
    urlcolor=black,               % Color of external links
    bookmarks=true,
    bookmarksopen=true,
    bookmarksnumbered=true,
}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 24 (face font-lock-comment-face fontified t) 24 35 (face font-lock-keyword-face fontified t) 35 76 (fontified t) 76 107 (face font-lock-comment-face fontified t) 107 147 (fontified t) 147 173 (face font-lock-comment-face fontified t) 173 207 (fontified t) 207 233 (face font-lock-comment-face fontified t) 233 307 (fontified t)) . 3248) (undo-tree-id696 . -306) (undo-tree-id697 . -305) (undo-tree-id698 . -305) (undo-tree-id699 . -277) (undo-tree-id700 . -277) (undo-tree-id701 . -277) (undo-tree-id702 . -277) (undo-tree-id703 . -277) (undo-tree-id704 . -277) (undo-tree-id705 . -305) (undo-tree-id706 . -305) (undo-tree-id707 . -305) (undo-tree-id708 . -305) (undo-tree-id709 . -305) (undo-tree-id710 . -305) (undo-tree-id711 . -305) (undo-tree-id712 . -305) (undo-tree-id713 . -305) (undo-tree-id714 . -305) (undo-tree-id715 . -305) (undo-tree-id716 . -305) (undo-tree-id717 . -305) (undo-tree-id718 . -305) (undo-tree-id719 . -305) (undo-tree-id720 . -305) (undo-tree-id721 . -305) (undo-tree-id722 . -305) (undo-tree-id723 . -305) (undo-tree-id724 . -305) (undo-tree-id725 . -305) (undo-tree-id726 . -305) (undo-tree-id727 . -305) (undo-tree-id728 . -305) (undo-tree-id729 . -305) (undo-tree-id730 . -305) (undo-tree-id731 . -305) (undo-tree-id732 . -305) (undo-tree-id733 . -305) (undo-tree-id734 . -305) (undo-tree-id735 . -305) (undo-tree-id736 . -305) (undo-tree-id737 . -305) (undo-tree-id738 . -305) (undo-tree-id739 . -305) (undo-tree-id740 . -305) (undo-tree-id741 . -305) (undo-tree-id742 . -305) (undo-tree-id743 . -305) (undo-tree-id744 . -307) 3553) nil (26489 20418 725554 189000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3248)) ((3248 . 3249)) (26489 20422 747007 214000) 0 nil])
([nil nil ((2106 . 2107) (t 26489 20424 460131 730000) 2106) nil (26489 20485 522257 767000) 0 nil] [nil nil ((1673 . 2106) (#("% Table packages
\\usepackage{booktabs}                 % Enhanced table formatting
\\usepackage{tabularx}                 % Enhanced table environments
\\usepackage{longtable}                % Tables spanning multiple pages
\\usepackage{multirow}                 % Multi-row cells in tables
\\usepackage{makecell}                 % Additional table commands
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 17 (face font-lock-comment-face fontified t) 17 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 37 (face font-lock-builtin-face fontified t) 37 55 (fontified t) 55 83 (face font-lock-comment-face fontified t) 83 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 103 (face font-lock-builtin-face fontified t) 103 121 (fontified t) 121 151 (face font-lock-comment-face fontified t) 151 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 172 (face font-lock-builtin-face fontified t) 172 189 (fontified t) 189 222 (face font-lock-comment-face fontified t) 222 233 (face font-lock-keyword-face fontified t) 233 234 (fontified t) 234 242 (face font-lock-builtin-face fontified t) 242 260 (fontified t) 260 288 (face font-lock-comment-face fontified t) 288 299 (face font-lock-keyword-face fontified t) 299 300 (fontified t) 300 308 (face font-lock-builtin-face fontified t) 308 326 (fontified t) 326 354 (face font-lock-comment-face fontified t)) . 1673) (undo-tree-id1231 . -353) (undo-tree-id1232 . -288) (undo-tree-id1234 . -17) (undo-tree-id1236 . -17) (undo-tree-id1238 . -17) (undo-tree-id1240 . -17) (undo-tree-id1242 . -17) (undo-tree-id1244 . -17) (undo-tree-id1246 . -17) (undo-tree-id1248 . -17) (undo-tree-id1250 . -83) (undo-tree-id1252 . -83) (undo-tree-id1254 . -83) (undo-tree-id1256 . -151) (undo-tree-id1258 . -151) (undo-tree-id1260 . -151) (undo-tree-id1262 . -151) (undo-tree-id1264 . -151) (undo-tree-id1266 . -151) (undo-tree-id1268 . -151) (undo-tree-id1270 . -151) (undo-tree-id1272 . -151) (undo-tree-id1274 . -151) (undo-tree-id1276 . -222) (undo-tree-id1278 . -222) (undo-tree-id1280 . -222) (undo-tree-id1282 . -222) (undo-tree-id1284 . -222) (undo-tree-id1286 . -222) (undo-tree-id1288 . -222) (undo-tree-id1290 . -288) (undo-tree-id1292 . -288) (undo-tree-id1294 . -288) (undo-tree-id1296 . -288) (undo-tree-id1298 . -288) (undo-tree-id1300 . -288) (undo-tree-id1302 . -288) (undo-tree-id1304 . -288) (undo-tree-id1306 . -288) (undo-tree-id1308 . -288) (undo-tree-id1310 . -354) (undo-tree-id1312 . -354) (undo-tree-id1314 . -354) (undo-tree-id1316 . -354) (undo-tree-id1318 . -354) (undo-tree-id1320 . -354) (undo-tree-id1322 . -354) (undo-tree-id1324 . -354) (undo-tree-id1326 . -354) (undo-tree-id1328 . -354) (undo-tree-id1330 . -354) (undo-tree-id1332 . -354) (undo-tree-id1334 . -354) (undo-tree-id1335 . -354)) ((1673 . 2027) (#("% Table packages
\\usepackage{booktabs}                 % Enhanced table formatting
\\usepackage{tabularx}                 % Enhanced table environments
\\usepackage{longtable}                % Tables spanning multiple pages
\\usepackage{multirow}                 % Multi-row cells in tables
\\usepackage{makecell}                 % Additional table commands
\\usepackage{chngcntr}                 % Customizing table and figure numbering
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 17 (face font-lock-comment-face fontified t) 17 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 37 (face font-lock-builtin-face fontified t) 37 55 (fontified t) 55 83 (face font-lock-comment-face fontified t) 83 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 103 (face font-lock-builtin-face fontified t) 103 121 (fontified t) 121 151 (face font-lock-comment-face fontified t) 151 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 172 (face font-lock-builtin-face fontified t) 172 189 (fontified t) 189 222 (face font-lock-comment-face fontified t) 222 233 (face font-lock-keyword-face fontified t) 233 234 (fontified t) 234 242 (face font-lock-builtin-face fontified t) 242 260 (fontified t) 260 288 (face font-lock-comment-face fontified t) 288 299 (face font-lock-keyword-face fontified t) 299 300 (fontified t) 300 308 (face font-lock-builtin-face fontified t) 308 326 (fontified t) 326 354 (face font-lock-comment-face fontified t) 354 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 374 (face font-lock-builtin-face fontified t) 374 392 (fontified t) 392 432 (face font-lock-comment-face fontified t) 432 433 (face font-lock-comment-face fontified t)) . 1673) (undo-tree-id1336 . -432) (undo-tree-id1337 . -432)) (26489 20420 532011 792000) 0 nil] [nil nil ((nil rear-nonsticky nil 2030 . 2031) (nil fontified nil 1673 . 1675) (nil fontified nil 1695 . 1706) (nil fontified nil 1761 . 1772) (nil fontified nil 1829 . 1840) (nil fontified nil 1900 . 1911) (1673 . 2031) (#("% Table packages
\\usepackage{booktabs}                 % Enhanced table formatting
\\usepackage{tabularx}                 % Enhanced table environments
\\usepackage{longtable}                % Tables spanning multiple pages
\\usepackage{multirow}                 % Multi-row cells in tables
\\usepackage{makecell}                 % Additional table commands
\\usepackage{chngcntr}                 % Customizing table and figure numbering" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 17 (face font-lock-comment-face fontified t) 17 28 (face font-lock-keyword-face fontified t) 28 29 (fontified t) 29 37 (face font-lock-builtin-face fontified t) 37 55 (fontified t) 55 83 (face font-lock-comment-face fontified t) 83 94 (face font-lock-keyword-face fontified t) 94 95 (fontified t) 95 103 (face font-lock-builtin-face fontified t) 103 121 (fontified t) 121 151 (face font-lock-comment-face fontified t) 151 162 (face font-lock-keyword-face fontified t) 162 163 (fontified t) 163 172 (face font-lock-builtin-face fontified t) 172 189 (fontified t) 189 222 (face font-lock-comment-face fontified t) 222 233 (face font-lock-keyword-face fontified t) 233 234 (fontified t) 234 242 (face font-lock-builtin-face fontified t) 242 260 (fontified t) 260 288 (face font-lock-comment-face fontified t) 288 299 (face font-lock-keyword-face fontified t) 299 300 (fontified t) 300 308 (face font-lock-builtin-face fontified t) 308 326 (fontified t) 326 354 (face font-lock-comment-face fontified t) 354 365 (face font-lock-keyword-face fontified t) 365 366 (fontified t) 366 374 (face font-lock-builtin-face fontified t) 374 392 (fontified t) 392 432 (face font-lock-comment-face fontified t)) . 1673) (undo-tree-id922 . -431) (undo-tree-id923 . -354)) ((1673 . 2105) (#("% Packages for Tables
\\usepackage{booktabs}                 % Enhanced table formatting
\\usepackage{tabularx}                 % Enhanced table environments
\\usepackage{longtable}                % Tables spanning multiple pages
\\usepackage{multirow}                 % Multi-row cells in tables
\\usepackage{makecell}                 % Additional table commands" 0 2 (face font-lock-comment-delimiter-face fontified nil) 2 22 (face font-lock-comment-face fontified nil) 22 33 (face font-lock-keyword-face fontified nil) 33 34 (fontified nil) 34 42 (face font-lock-builtin-face fontified nil) 42 60 (fontified nil) 60 88 (face font-lock-comment-face fontified nil) 88 99 (face font-lock-keyword-face fontified nil) 99 100 (fontified nil) 100 108 (face font-lock-builtin-face fontified nil) 108 126 (fontified nil) 126 156 (face font-lock-comment-face fontified nil) 156 167 (face font-lock-keyword-face fontified nil) 167 168 (fontified nil) 168 177 (face font-lock-builtin-face fontified nil) 177 194 (fontified nil) 194 227 (face font-lock-comment-face fontified nil) 227 238 (face font-lock-keyword-face fontified nil) 238 239 (fontified nil) 239 247 (face font-lock-builtin-face fontified nil) 247 265 (fontified nil) 265 293 (face font-lock-comment-face fontified nil) 293 304 (face font-lock-keyword-face fontified nil) 304 305 (fontified nil) 305 313 (face font-lock-builtin-face fontified nil) 313 331 (fontified nil) 331 357 (face font-lock-comment-face fontified nil) 357 358 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 1673) (undo-tree-id924 . -357) (undo-tree-id925 . -357) (undo-tree-id926 . -357) (undo-tree-id927 . -357) (nil fontified t 1900 . 1911) (nil fontified t 1829 . 1840) (nil fontified t 1761 . 1772) (nil fontified t 1695 . 1706) (nil fontified t 1673 . 1675) (nil rear-nonsticky t 2030 . 2031) (t 26489 20391 518486 565000)) (26489 20403 388304 77000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2459 . 2460) (nil fontified nil 2107 . 2460) (2107 . 2460)) nil (26489 20485 522257 366000) 0 nil])
nil
nil
([nil nil ((2460 . 2461) 2459) nil (26489 20485 522257 75000) 0 nil])
([nil nil ((#("% Graphics packages
\\usepackage{graphicx}                 % Including graphics in the document
\\usepackage{svg}
%\\usepackage{wrapfig}                  % Wrapping text around figures

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 20 (face font-lock-comment-face fontified t) 20 31 (face font-lock-keyword-face fontified t) 31 32 (fontified t) 32 40 (face font-lock-builtin-face fontified t) 40 58 (fontified t) 58 95 (face font-lock-comment-face fontified t) 95 106 (face font-lock-keyword-face fontified t) 106 107 (fontified t) 107 110 (face font-lock-builtin-face fontified t) 110 112 (fontified t) 112 113 (face font-lock-comment-delimiter-face fontified t) 113 182 (face font-lock-comment-face fontified t) 182 183 (fontified t)) . 2462) (undo-tree-id1347 . -182) (undo-tree-id1348 . -182) (undo-tree-id1349 . -182) (undo-tree-id1350 . -182) 2644) nil (26489 20485 522256 554000) 0 nil])
([nil nil ((#("% Float and caption packages
\\usepackage{float}                    % Enhanced placement of figures and tables
\\usepackage{subcaption}               % Subfigures and subtables

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 29 (face font-lock-comment-face fontified t) 29 40 (face font-lock-keyword-face fontified t) 40 41 (fontified t) 41 46 (face font-lock-builtin-face fontified t) 46 67 (fontified t) 67 101 (face font-lock-comment-face fontified t) 101 110 (face font-lock-comment-face fontified t) 110 121 (face font-lock-keyword-face fontified t) 121 122 (fontified t) 122 132 (face font-lock-builtin-face fontified t) 132 148 (fontified t) 148 175 (face font-lock-comment-face fontified t) 175 176 (fontified t)) . 3244) (undo-tree-id1342 . -175) (undo-tree-id1343 . -175) (undo-tree-id1344 . -2) (undo-tree-id1345 . -175) (undo-tree-id1346 . -175) 3419) nil (26489 20485 522254 551000) 0 nil])
([nil nil ((#("% Graphics path
\\graphicspath{{assets}}

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 15 (face font-lock-comment-face fontified t) 15 16 (face font-lock-comment-face fontified t) 16 29 (face font-lock-keyword-face fontified t) 29 41 (fontified t)) . 3244) (undo-tree-id1338 . -40) (undo-tree-id1339 . -40) (undo-tree-id1340 . -40) (undo-tree-id1341 . -40) 3284) nil (26489 20485 522251 595000) 0 nil])
([nil nil ((apply -3 2437 2465 undo--wrap-and-run-primitive-undo 2437 2465 ((2437 . 2440) 2461))) nil (26489 20485 522238 140000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2645 . 2646) (nil fontified nil 2465 . 2646) (2465 . 2646) (#("% Mathematical packages
\\usepackage{amsmath}                  % Additional math symbols and environments
\\usepackage{unicode-math}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 23 (face font-lock-comment-face fontified t) 23 24 (face font-lock-comment-face fontified t) 24 35 (face font-lock-keyword-face fontified t) 35 36 (fontified t) 36 40 (face font-lock-builtin-face fontified t) 40 43 (face font-lock-builtin-face fontified t) 43 62 (fontified t) 62 105 (face font-lock-comment-face fontified t) 105 116 (face font-lock-keyword-face fontified t) 116 117 (fontified t) 117 129 (face font-lock-builtin-face fontified t) 129 131 (fontified t)) . 2465) (undo-tree-id1351 . -130) (undo-tree-id1352 . -131) (undo-tree-id1353 . -105) (undo-tree-id1354 . -24) (undo-tree-id1355 . -24) (undo-tree-id1356 . -24) (undo-tree-id1357 . -24) (undo-tree-id1358 . -24) (undo-tree-id1359 . -105) (undo-tree-id1360 . -105) (undo-tree-id1361 . -105) (undo-tree-id1362 . -105) (undo-tree-id1363 . -105) (undo-tree-id1364 . -105) (undo-tree-id1365 . -105) (undo-tree-id1366 . -105) (undo-tree-id1367 . -105) (undo-tree-id1368 . -105) (undo-tree-id1369 . -105) (undo-tree-id1370 . -105) (undo-tree-id1371 . -105) (undo-tree-id1372 . -105) (undo-tree-id1373 . -105) (undo-tree-id1374 . -105) (undo-tree-id1375 . -105) (undo-tree-id1376 . -105) (undo-tree-id1377 . -105) (undo-tree-id1378 . -105) (undo-tree-id1379 . -105) (undo-tree-id1380 . -105) (undo-tree-id1381 . -105) (undo-tree-id1382 . -105) (undo-tree-id1383 . -105) (undo-tree-id1384 . -105) (undo-tree-id1385 . -105) (undo-tree-id1386 . -131) (undo-tree-id1387 . -131) 2596 (t 26489 20485 528474 164000)) nil (26489 20508 343550 929000) 0 nil])
([nil nil ((#("% Document settings
" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 2 (face font-lock-comment-delimiter-face fontified t) 2 14 (face font-lock-comment-face fontified t) 14 15 (face font-lock-comment-face fontified t) 15 20 (face font-lock-comment-face fontified t)) . 2647) (undo-tree-id1406 . -19) (undo-tree-id1407 . -18) (undo-tree-id1408 . -18) (undo-tree-id1409 . -18) (undo-tree-id1410 . -18) (undo-tree-id1411 . -18) (undo-tree-id1412 . -18) (undo-tree-id1413 . -18) (undo-tree-id1414 . -18) (undo-tree-id1415 . -18) (undo-tree-id1416 . -18) (undo-tree-id1417 . -18) (undo-tree-id1418 . -18) (undo-tree-id1419 . -18) (undo-tree-id1420 . -18) (undo-tree-id1421 . -18) (undo-tree-id1422 . -18) (undo-tree-id1423 . -18) (undo-tree-id1424 . -18) (undo-tree-id1425 . -18) (undo-tree-id1426 . -18) (undo-tree-id1427 . -18) (undo-tree-id1428 . -18) (undo-tree-id1429 . -18) (undo-tree-id1430 . -18) (undo-tree-id1431 . -18) (undo-tree-id1432 . -18) (undo-tree-id1433 . -18) (undo-tree-id1434 . -18) (undo-tree-id1435 . -18) (undo-tree-id1436 . -20) 2665 (t 26489 20508 347228 472000)) nil (26489 20509 914993 110000) 0 nil])
([nil nil ((#("% ----------------
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t) 18 19 (face font-lock-comment-face fontified t)) . 2647) (undo-tree-id1389 . -18) (undo-tree-id1390 . -18) (undo-tree-id1391 . -17) (undo-tree-id1392 . -17) (undo-tree-id1393 . -17) (undo-tree-id1394 . -17) (undo-tree-id1395 . -17) (undo-tree-id1396 . -17) (undo-tree-id1397 . -17) (undo-tree-id1398 . -17) (undo-tree-id1399 . -17) (undo-tree-id1400 . -17) (undo-tree-id1401 . -17) (undo-tree-id1402 . -17) (undo-tree-id1403 . -17) (undo-tree-id1404 . -17) (undo-tree-id1405 . -19) 2664) nil (26489 20509 914981 218000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 2647) (undo-tree-id1388 . -1)) nil (26489 20509 914971 430000) 0 nil])
([nil nil ((2646 . 2647) (t 26489 20509 921211 525000) 2646) nil (26489 20665 751201 944000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3021 . 3022) (nil fontified nil 2647 . 3022) (2647 . 3022)) nil (26489 20665 751201 573000) 0 nil])
([nil nil ((3022 . 3023) 3021) nil (26489 20665 751201 213000) 0 nil])
([nil nil ((#("\\usepackage{calc}                     % Mathematical calculations in LaTeX commands
" 0 9 (face font-lock-keyword-face fontified t) 9 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 16 (face font-lock-builtin-face fontified t) 16 25 (fontified t) 25 35 (fontified t) 35 38 (fontified t) 38 84 (face font-lock-comment-face fontified t)) . 3123) (undo-tree-id1594 . -83) (undo-tree-id1595 . -12) (undo-tree-id1596 . -84) (undo-tree-id1597 . -84) (undo-tree-id1598 . -84) (undo-tree-id1599 . -84) (undo-tree-id1600 . -84) (undo-tree-id1601 . -84) (undo-tree-id1602 . -84) (undo-tree-id1603 . -84) (undo-tree-id1604 . -84) (undo-tree-id1605 . -84) (undo-tree-id1606 . -84) (undo-tree-id1607 . -84) (undo-tree-id1608 . -84) (undo-tree-id1609 . -84) (undo-tree-id1610 . -84) (undo-tree-id1611 . -84)) nil (26489 20665 751200 702000) 0 nil])
([nil nil ((#("\\usepackage{soul}                     % Additional text formatting options
" 0 2 (face font-lock-keyword-face fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 16 (face font-lock-builtin-face fontified t) 16 21 (fontified t) 21 38 (fontified t) 38 67 (face font-lock-comment-face fontified t) 67 74 (face font-lock-comment-face fontified t) 74 75 (face font-lock-comment-face fontified t)) . 3123) (undo-tree-id1593 . -74)) nil (26489 20665 751194 771000) 0 nil])
([nil nil ((#("\\usepackage{multicol}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 21 (fontified t) 21 22 (fontified t)) . 3123) (undo-tree-id1590 . -21) (undo-tree-id1591 . -21) (undo-tree-id1592 . -22)) nil (26489 20665 751194 149000) 0 nil])
([nil nil ((#("\\usepackage[normalem]{ulem}           % Underlining and emphasis styles
" 0 11 (face font-lock-keyword-face fontified t) 11 22 (fontified t) 22 26 (face font-lock-builtin-face fontified t) 26 38 (fontified t) 38 55 (face font-lock-comment-face fontified t) 55 72 (face font-lock-comment-face fontified t)) . 3051) (undo-tree-id1540 . -71) (undo-tree-id1541 . -72) (undo-tree-id1542 . -72) (undo-tree-id1543 . -72) (undo-tree-id1544 . -72) (undo-tree-id1545 . -72) (undo-tree-id1546 . -72) (undo-tree-id1547 . -72) (undo-tree-id1548 . -72) (undo-tree-id1549 . -72) (undo-tree-id1550 . -72) (undo-tree-id1551 . -72) (undo-tree-id1552 . -72) (undo-tree-id1553 . -72) (undo-tree-id1554 . -72) (undo-tree-id1555 . -72) (undo-tree-id1556 . -72) (undo-tree-id1557 . -72) (undo-tree-id1558 . -72) (undo-tree-id1559 . -72) (undo-tree-id1560 . -72) (undo-tree-id1561 . -72) (undo-tree-id1562 . -72) (undo-tree-id1563 . -72) (undo-tree-id1564 . -72) (undo-tree-id1565 . -72) (undo-tree-id1566 . -72) (undo-tree-id1567 . -72) (undo-tree-id1568 . -72) (undo-tree-id1569 . -72) (undo-tree-id1570 . -72) (undo-tree-id1571 . -72) (undo-tree-id1572 . -72) (undo-tree-id1573 . -72) (undo-tree-id1574 . -72) (undo-tree-id1575 . -72) (undo-tree-id1576 . -72) (undo-tree-id1577 . -72) (undo-tree-id1578 . -72) (undo-tree-id1579 . -72) (undo-tree-id1580 . -72) (undo-tree-id1581 . -72) (undo-tree-id1582 . -72) (undo-tree-id1583 . -72) (undo-tree-id1584 . -72) (undo-tree-id1585 . -72) (undo-tree-id1586 . -72) (undo-tree-id1587 . -72) (undo-tree-id1588 . -72) (undo-tree-id1589 . -72)) nil (26489 20665 751192 356000) 0 nil])
([nil nil ((#("% Text formatting packages
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 7 (face font-lock-comment-face fontified t) 7 14 (face font-lock-comment-face fontified t) 14 21 (face font-lock-comment-face fontified t) 21 26 (face font-lock-comment-face fontified t) 26 27 (face font-lock-comment-face fontified t)) . 3024) (undo-tree-id1441 . -26) (undo-tree-id1442 . -27) (undo-tree-id1443 . -27) (undo-tree-id1444 . -27) (undo-tree-id1445 . -27) (undo-tree-id1446 . -27) (undo-tree-id1447 . -27) (undo-tree-id1448 . -27) (undo-tree-id1449 . -27) (undo-tree-id1450 . -27) (undo-tree-id1451 . -27) (undo-tree-id1452 . -27) (undo-tree-id1453 . -27) (undo-tree-id1454 . -27) (undo-tree-id1455 . -27) (undo-tree-id1456 . -27) (undo-tree-id1457 . -27) (undo-tree-id1458 . -27) (undo-tree-id1459 . -27) (undo-tree-id1460 . -27) (undo-tree-id1461 . -27) (undo-tree-id1462 . -27) (undo-tree-id1463 . -27) (undo-tree-id1464 . -27) (undo-tree-id1465 . -27) (undo-tree-id1466 . -27) (undo-tree-id1467 . -27) (undo-tree-id1468 . -27) (undo-tree-id1469 . -27) (undo-tree-id1470 . -27) (undo-tree-id1471 . -27) (undo-tree-id1472 . -27) (undo-tree-id1473 . -27) (undo-tree-id1474 . -27) (undo-tree-id1475 . -27) (undo-tree-id1476 . -27) (undo-tree-id1477 . -27) (undo-tree-id1478 . -27) (undo-tree-id1479 . -27) (undo-tree-id1480 . -27) (undo-tree-id1481 . -27) (undo-tree-id1482 . -27) (undo-tree-id1483 . -27) (undo-tree-id1484 . -27) (undo-tree-id1485 . -27) (undo-tree-id1486 . -27) (undo-tree-id1487 . -27) (undo-tree-id1488 . -27) (undo-tree-id1489 . -27) (undo-tree-id1490 . -27) (undo-tree-id1491 . -27) (undo-tree-id1492 . -27) (undo-tree-id1493 . -27) (undo-tree-id1494 . -27) (undo-tree-id1495 . -27) (undo-tree-id1496 . -27) (undo-tree-id1497 . -27) (undo-tree-id1498 . -27) (undo-tree-id1499 . -27) (undo-tree-id1500 . -27) (undo-tree-id1501 . -27) (undo-tree-id1502 . -27) (undo-tree-id1503 . -27) (undo-tree-id1504 . -27) (undo-tree-id1505 . -27) (undo-tree-id1506 . -27) (undo-tree-id1507 . -27) (undo-tree-id1508 . -27) (undo-tree-id1509 . -27) (undo-tree-id1510 . -27) (undo-tree-id1511 . -27) (undo-tree-id1512 . -27) (undo-tree-id1513 . -27) (undo-tree-id1514 . -27) (undo-tree-id1515 . -27) (undo-tree-id1516 . -27) (undo-tree-id1517 . -27) (undo-tree-id1518 . -27) (undo-tree-id1519 . -27) (undo-tree-id1520 . -27) (undo-tree-id1521 . -27) (undo-tree-id1522 . -27) (undo-tree-id1523 . -27) (undo-tree-id1524 . -27) (undo-tree-id1525 . -27) (undo-tree-id1526 . -27) (undo-tree-id1527 . -27) (undo-tree-id1528 . -27) (undo-tree-id1529 . -27) (undo-tree-id1530 . -27) (undo-tree-id1531 . -27) (undo-tree-id1532 . -27) (undo-tree-id1533 . -27) (undo-tree-id1534 . -27) (undo-tree-id1535 . -27) (undo-tree-id1536 . -27) (undo-tree-id1537 . -27) (undo-tree-id1538 . -27) (undo-tree-id1539 . -27)) nil (26489 20665 751163 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3024) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1)) nil (26489 20665 751127 595000) 0 nil])
([nil nil ((#("% Colors
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 8 (face font-lock-comment-face fontified t) 8 9 (face font-lock-comment-face fontified t)) . 3353) (undo-tree-id1438 . -8)) nil (26489 20665 751126 473000) 0 nil])
([nil nil ((#("\\definecolor{lightblue}{RGB}{0,116,180}
" 0 12 (face font-lock-keyword-face fontified t) 12 39 (fontified t) 39 40 (fontified t)) . 3353) (undo-tree-id1437 . -39)) nil (26489 20665 751125 401000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1671 . 1672) (#("
" 0 1 (fontified nil)) . -1711) (1671 . 1712) 1670) nil (26489 20665 751114 571000) 0 nil])
([nil nil ((#("% Additional packages
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 22 (face font-lock-comment-face fontified t)) . 3348) (undo-tree-id1698 . -21) (undo-tree-id1699 . -22) (undo-tree-id1700 . -22) (undo-tree-id1701 . -22) (undo-tree-id1702 . -22) (undo-tree-id1703 . -22) (undo-tree-id1704 . -22) (undo-tree-id1705 . -22) (undo-tree-id1706 . -22) (undo-tree-id1707 . -22) (undo-tree-id1708 . -22) (undo-tree-id1709 . -22) (undo-tree-id1710 . -22) (t 26489 20665 758534 711000)) nil (26489 20799 606419 119000) 0 nil])
([nil nil ((#("% -------------------
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 21 (face font-lock-comment-face fontified t) 21 22 (face font-lock-comment-face fontified t)) . 3348) (undo-tree-id1697 . -21)) nil (26489 20799 606414 590000) 0 nil])
([nil nil ((3062 . 3063) 3009) nil (26489 20799 606414 139000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3352 . 3353) (nil fontified nil 3064 . 3353) (3064 . 3353)) nil (26489 20799 606413 899000) 0 nil])
([nil nil ((3353 . 3354) 3352) nil (26489 20799 606413 578000) 0 nil])
([nil nil ((#("\\setlist[itemize]{itemsep=0.0em, topsep=0pt, partopsep=0pt, parsep=0pt, leftmargin=0.1em}
" 0 8 (face font-lock-keyword-face fontified t) 8 90 (fontified t)) . 3751) (undo-tree-id1695 . -89) (undo-tree-id1696 . -90)) nil (26489 20799 606413 157000) 0 nil])
([nil nil ((#("% Decrease padding in itemize
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 30 (face font-lock-comment-face fontified t)) . 3721) (undo-tree-id1637 . -29) (undo-tree-id1638 . -30) (undo-tree-id1639 . -30) (undo-tree-id1640 . -30) (undo-tree-id1641 . -30) (undo-tree-id1642 . -30) (undo-tree-id1643 . -30) (undo-tree-id1644 . -30) (undo-tree-id1645 . -30) (undo-tree-id1646 . -30) (undo-tree-id1647 . -30) (undo-tree-id1648 . -30) (undo-tree-id1649 . -30) (undo-tree-id1650 . -30) (undo-tree-id1651 . -30) (undo-tree-id1652 . -30) (undo-tree-id1653 . -30) (undo-tree-id1654 . -30) (undo-tree-id1655 . -30) (undo-tree-id1656 . -30) (undo-tree-id1657 . -30) (undo-tree-id1658 . -30) (undo-tree-id1659 . -30) (undo-tree-id1660 . -30) (undo-tree-id1661 . -30) (undo-tree-id1662 . -30) (undo-tree-id1663 . -30) (undo-tree-id1664 . -30) (undo-tree-id1665 . -30) (undo-tree-id1666 . -30) (undo-tree-id1667 . -30) (undo-tree-id1668 . -30) (undo-tree-id1669 . -30) (undo-tree-id1670 . -30) (undo-tree-id1671 . -30) (undo-tree-id1672 . -30) (undo-tree-id1673 . -30) (undo-tree-id1674 . -30) (undo-tree-id1675 . -30) (undo-tree-id1676 . -30) (undo-tree-id1677 . -30) (undo-tree-id1678 . -30) (undo-tree-id1679 . -30) (undo-tree-id1680 . -30) (undo-tree-id1681 . -30) (undo-tree-id1682 . -30) (undo-tree-id1683 . -30) (undo-tree-id1684 . -30) (undo-tree-id1685 . -30) (undo-tree-id1686 . -30) (undo-tree-id1687 . -30) (undo-tree-id1688 . -30) (undo-tree-id1689 . -30) (undo-tree-id1690 . -30) (undo-tree-id1691 . -30) (undo-tree-id1692 . -30) (undo-tree-id1693 . -30) (undo-tree-id1694 . -30)) nil (26489 20799 606411 615000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 3721) (undo-tree-id1636 . -1)) nil (26489 20799 606391 777000) 0 nil])
([nil nil ((#("% Decrease padding in enumerate
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 31 (face font-lock-comment-face fontified t) 31 32 (face font-lock-comment-face fontified t)) . 3721) (undo-tree-id1633 . -31) (undo-tree-id1634 . -31) (undo-tree-id1635 . -32)) nil (26489 20799 606391 176000) 0 nil])
([nil nil ((#("\\setlist[enumerate]{itemsep=0.0em, topsep=0pt, partopsep=0pt, parsep=0pt, leftmargin=0.1em}
" 0 8 (face font-lock-keyword-face fontified t) 8 15 (fontified t) 15 33 (fontified t) 33 34 (fontified t) 34 35 (fontified t) 35 41 (fontified t) 41 62 (fontified t) 62 91 (fontified t) 91 92 (fontified t)) . 3721) (undo-tree-id1632 . -91)) nil (26489 20799 606389 744000) 0 nil])
([nil nil ((#("\\usepackage{enumitem}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 3698) (undo-tree-id1631 . -21)) nil (26489 20799 606389 193000) 0 nil])
([nil nil ((#("\\setlength{\\parskip}{0.3em}
\\setlength{\\parindent}{1em}
" 0 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 19 (face font-lock-variable-name-face fontified t) 19 28 (fontified t) 28 38 (face font-lock-keyword-face fontified t) 38 39 (fontified t) 39 49 (face font-lock-variable-name-face fontified t) 49 56 (fontified t)) . 3642) (undo-tree-id1627 . -55) (undo-tree-id1628 . -28) (undo-tree-id1629 . -28) (undo-tree-id1630 . -28) 3670) nil (26489 20799 606388 391000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3062 . 3063) (#("
" 0 1 (fontified nil)) . -3118) (3062 . 3119) 3009) nil (26489 20799 606386 498000) 0 nil])
([nil nil ((3062 . 3063) 3009) nil (26489 20799 606385 896000) 0 nil])
([nil nil ((#("% Redefine the format of the section title
\\titleformat{\\section}[block]{\\centering\\bfseries\\large}{}{0pt}{}[]
\\titleformat{\\chapter}[display]
  {\\centering\\large\\bfseries\\itshape}{}{1em}{\\large}
% Decrease the top margin for chapter titles
\\titlespacing*{\\chapter}{0pt}{-100pt}{1em}

" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 10 (face font-lock-comment-face fontified t) 10 13 (face font-lock-comment-face fontified t) 13 15 (face font-lock-comment-face fontified t) 15 42 (face font-lock-comment-face fontified t) 42 43 (face font-lock-comment-face fontified t) 43 55 (face font-lock-keyword-face fontified t) 55 56 (fontified t) 56 64 (face font-lock-keyword-face fontified t) 64 65 (fontified t) 65 73 (fontified t) 73 83 (face font-lock-keyword-face fontified t) 83 92 (face font-lock-keyword-face fontified t) 92 98 (face (font-lock-keyword-face bold) fontified t) 98 111 (fontified t) 111 118 (face font-lock-keyword-face fontified t) 118 123 (face font-lock-keyword-face fontified t) 123 124 (fontified t) 124 132 (face font-lock-keyword-face fontified t) 132 143 (fontified t) 143 146 (fontified t) 146 148 (face font-lock-keyword-face fontified t) 148 156 (face font-lock-keyword-face fontified t) 156 162 (face font-lock-keyword-face fontified t) 162 169 (face font-lock-keyword-face fontified t) 169 170 (face font-lock-keyword-face fontified t) 170 171 (face font-lock-keyword-face fontified t) 171 179 (face (font-lock-keyword-face bold) fontified t) 179 188 (fontified t) 188 193 (face font-lock-keyword-face fontified t) 193 194 (face font-lock-keyword-face fontified t) 194 196 (fontified t) 196 198 (face font-lock-comment-delimiter-face fontified t) 198 241 (face font-lock-comment-face fontified t) 241 255 (face font-lock-keyword-face fontified t) 255 256 (fontified t) 256 264 (face font-lock-keyword-face fontified t) 264 278 (fontified t) 278 281 (fontified t) 281 283 (fontified t) 283 284 (fontified t) 284 285 (fontified t)) . 3412) (undo-tree-id1612 . -284) (undo-tree-id1613 . -284) (undo-tree-id1614 . -284) (undo-tree-id1615 . -284) (undo-tree-id1616 . -284) (undo-tree-id1617 . -284) (undo-tree-id1618 . -284) (undo-tree-id1619 . -284) (undo-tree-id1620 . -284) (undo-tree-id1621 . -284) (undo-tree-id1622 . -284) (undo-tree-id1623 . -284) (undo-tree-id1624 . -284) (undo-tree-id1625 . -284) (undo-tree-id1626 . -284) 3696) nil (26489 20799 606385 295000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3120 . 3121) (#("
" 0 1 (fontified nil)) . -3405) (3120 . 3406)) nil (26489 20799 606367 182000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3859 . 3860) (nil fontified nil 3697 . 3860) (3697 . 3860) (t 26489 20799 613095 321000)) nil (26489 20849 741524 480000) 0 nil])
([nil nil ((#("\\usepackage{tocloft}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 19 (face font-lock-builtin-face fontified t) 19 21 (fontified t)) . 3887) (undo-tree-id1717 . -20) (undo-tree-id1718 . -19) (undo-tree-id1719 . -19) 3906 (t 26489 20849 751556 470000)) nil (26489 20858 811835 514000) 0 nil])
([nil nil ((#("% Front page
\\usepackage{pdfpages}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 13 (face font-lock-comment-face fontified t) 13 14 (face font-lock-keyword-face fontified t) 14 15 (face font-lock-keyword-face fontified t) 15 24 (face font-lock-keyword-face fontified t) 24 25 (fontified t) 25 30 (face font-lock-builtin-face fontified t) 30 31 (face font-lock-builtin-face fontified t) 31 33 (face font-lock-builtin-face fontified t) 33 35 (fontified t)) . 4911) (undo-tree-id1712 . -34) (undo-tree-id1713 . -24) (undo-tree-id1714 . -11) (undo-tree-id1715 . -24) (undo-tree-id1716 . -24) 4935) nil (26489 20858 811832 809000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 4911) (undo-tree-id1711 . 1)) nil (26489 20858 811826 236000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4193 . 4194) (nil fontified nil 3862 . 4194) (3862 . 4194) (t 26489 20858 818459 49000)) nil (26489 20952 571682 860000) 0 nil])
([nil nil ((apply -3 4110 4199 undo--wrap-and-run-primitive-undo 4110 4199 ((4110 . 4113) 4195))) nil (26489 20952 571682 560000) 0 nil])
([nil nil ((apply -3 4020 4201 undo--wrap-and-run-primitive-undo 4020 4201 ((4020 . 4023)))) nil (26489 20952 571682 269000) 0 nil])
([nil nil ((#("\\usepackage{mdframed}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 16 (face font-lock-builtin-face fontified t) 16 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 4202) (undo-tree-id1738 . -21)) nil (26489 20952 571681 979000) 0 nil])
([nil nil ((#("% Adjust vertical space before and after TOC title
\\setlength{\\cftbeforetoctitleskip}{-3em} % Space before the TOC title
\\setlength{\\cftaftertoctitleskip}{-2em} % Space after the TOC title

\\cftsetindents{part}{0em}{2em}
\\cftsetindents{chapter}{0em}{2em}
\\cftsetindents{section}{0.5em}{0em}
\\cftsetindents{subsection}{0em}{2em}
\\renewcommand{\\cftchapfont}{\\itshape\\bfseries}

\\makeatletter
\\renewcommand*\\l@part[2]{%
  \\ifnum \\c@tocdepth >-2\\relax
    \\addpenalty{-\\@highpenalty}%
    \\addvspace{1.25em \\@plus\\p@}%
    \\setlength\\@tempdima{3em}%
    \\begingroup
      \\parindent \\z@ \\rightskip \\@pnumwidth
      \\parfillskip -\\@pnumwidth
      {\\leavevmode
       \\hspace*{\\fill}\\centering\\bfseries\\itshape #1\\hspace*{\\fill}}\\par
       \\nobreak
         \\global\\@nobreaktrue
         \\everypar{\\global\\@nobreakfalse\\everypar{}}%
    \\endgroup
  \\fi}
\\makeatother

\\renewcommand\\cfttoctitlefont{\\hfill\\large\\bfseries}
\\renewcommand\\cftaftertoctitle{\\hfill\\mbox{}}

\\renewcommand{\\part}[1]{\\addcontentsline{toc}{part}{#1}}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 44 (face font-lock-comment-face fontified t) 44 50 (face font-lock-comment-face fontified t) 50 51 (face font-lock-comment-face fontified t) 51 61 (face font-lock-keyword-face fontified t) 61 62 (fontified t) 62 84 (face font-lock-variable-name-face fontified t) 84 92 (fontified t) 92 104 (face font-lock-comment-face fontified t) 104 105 (face font-lock-comment-face fontified t) 105 121 (face font-lock-comment-face fontified t) 121 128 (face font-lock-keyword-face fontified t) 128 131 (face font-lock-keyword-face fontified t) 131 132 (fontified t) 132 153 (face font-lock-variable-name-face fontified t) 153 161 (fontified t) 161 189 (face font-lock-comment-face fontified t) 189 190 (fontified t) 190 203 (face font-lock-keyword-face fontified t) 203 204 (face font-lock-keyword-face fontified t) 204 221 (fontified t) 221 235 (face font-lock-keyword-face fontified t) 235 255 (fontified t) 255 269 (face font-lock-keyword-face fontified t) 269 291 (fontified t) 291 305 (face font-lock-keyword-face fontified t) 305 322 (fontified t) 322 328 (fontified t) 328 341 (face font-lock-keyword-face fontified t) 341 342 (fontified t) 342 354 (face font-lock-function-name-face fontified t) 354 356 (fontified t) 356 364 (face font-lock-keyword-face fontified t) 364 369 (face font-lock-keyword-face fontified t) 369 373 (face font-lock-keyword-face fontified t) 373 375 (fontified t) 375 376 (fontified t) 376 389 (face font-lock-keyword-face fontified t) 389 390 (fontified t) 390 404 (face font-lock-keyword-face fontified t) 404 411 (face font-lock-function-name-face fontified t) 411 415 (fontified t) 415 417 (face font-lock-comment-face fontified t) 417 419 (fontified t) 419 422 (face font-lock-keyword-face fontified t) 422 425 (face font-lock-keyword-face fontified t) 425 426 (fontified t) 426 430 (face font-lock-keyword-face fontified t) 430 437 (face font-lock-keyword-face fontified t) 437 441 (fontified t) 441 447 (face font-lock-keyword-face fontified t) 447 448 (fontified t) 448 451 (fontified t) 451 452 (fontified t) 452 463 (face font-lock-keyword-face fontified t) 463 465 (fontified t) 465 468 (face font-lock-keyword-face fontified t) 468 470 (face font-lock-keyword-face fontified t) 470 478 (face font-lock-keyword-face fontified t) 478 479 (fontified t) 479 481 (face font-lock-comment-face fontified t) 481 485 (fontified t) 485 495 (face font-lock-keyword-face fontified t) 495 496 (fontified t) 496 497 (fontified t) 497 502 (fontified t) 502 503 (fontified t) 503 509 (face font-lock-keyword-face fontified t) 509 510 (face font-lock-keyword-face fontified t) 510 512 (face font-lock-keyword-face fontified t) 512 513 (fontified t) 513 515 (face font-lock-comment-face fontified t) 515 519 (fontified t) 519 529 (face font-lock-keyword-face fontified t) 529 539 (face font-lock-keyword-face fontified t) 539 544 (fontified t) 544 546 (face font-lock-comment-face fontified t) 546 550 (fontified t) 550 561 (face font-lock-keyword-face fontified t) 561 568 (fontified t) 568 578 (face font-lock-keyword-face fontified t) 578 579 (fontified t) 579 582 (face font-lock-keyword-face fontified t) 582 583 (fontified t) 583 593 (face font-lock-keyword-face fontified t) 593 594 (fontified t) 594 605 (face font-lock-keyword-face fontified t) 605 612 (fontified t) 612 624 (face font-lock-keyword-face fontified t) 624 626 (fontified t) 626 637 (face font-lock-keyword-face fontified t) 637 645 (fontified t) 645 656 (face font-lock-keyword-face fontified t) 656 664 (fontified t) 664 665 (face font-lock-keyword-face fontified t) 665 672 (face font-lock-keyword-face fontified t) 672 673 (fontified t) 673 678 (face font-lock-keyword-face fontified t) 678 679 (fontified t) 679 689 (face font-lock-keyword-face fontified t) 689 698 (face font-lock-keyword-face fontified t) 698 706 (face (font-lock-keyword-face bold) fontified t) 706 709 (face (bold) fontified t) 709 717 (face (font-lock-keyword-face bold) fontified t) 717 718 (face (bold) fontified t) 718 723 (face (font-lock-keyword-face bold) fontified t) 723 724 (face (bold) fontified t) 724 725 (fontified t) 725 727 (face font-lock-keyword-face fontified t) 727 728 (face font-lock-keyword-face fontified t) 728 729 (face font-lock-keyword-face fontified t) 729 730 (fontified t) 730 737 (fontified t) 737 745 (face font-lock-keyword-face fontified t) 745 749 (fontified t) 749 751 (fontified t) 751 755 (fontified t) 755 762 (face font-lock-keyword-face fontified t) 762 775 (face font-lock-keyword-face fontified t) 775 776 (fontified t) 776 785 (fontified t) 785 793 (face font-lock-keyword-face fontified t) 793 794 (face font-lock-keyword-face fontified t) 794 795 (fontified t) 795 802 (face font-lock-keyword-face fontified t) 802 816 (face font-lock-keyword-face fontified t) 816 819 (face font-lock-keyword-face fontified t) 819 825 (face font-lock-keyword-face fontified t) 825 828 (fontified t) 828 830 (face font-lock-comment-face fontified t) 830 834 (fontified t) 834 843 (face font-lock-keyword-face fontified t) 843 844 (fontified t) 844 846 (fontified t) 846 849 (face font-lock-keyword-face fontified t) 849 851 (fontified t) 851 863 (face font-lock-keyword-face fontified t) 863 865 (fontified t) 865 875 (face font-lock-keyword-face fontified t) 875 878 (face font-lock-keyword-face fontified t) 878 894 (face font-lock-function-name-face fontified t) 894 895 (fontified t) 895 901 (face font-lock-keyword-face fontified t) 901 907 (face font-lock-keyword-face fontified t) 907 916 (face font-lock-keyword-face fontified t) 916 918 (fontified t) 918 931 (face font-lock-keyword-face fontified t) 931 948 (face font-lock-function-name-face fontified t) 948 949 (fontified t) 949 955 (face font-lock-keyword-face fontified t) 955 960 (face font-lock-keyword-face fontified t) 960 965 (fontified t) 965 978 (face font-lock-keyword-face fontified t) 978 979 (fontified t) 979 984 (face font-lock-function-name-face fontified t) 984 989 (fontified t) 989 996 (face font-lock-keyword-face fontified t) 996 1005 (face font-lock-keyword-face fontified t) 1005 1022 (fontified t)) . 4203) (undo-tree-id1732 . -1021) (undo-tree-id1733 . -965) (undo-tree-id1734 . -965) (undo-tree-id1735 . -19) (undo-tree-id1736 . -19) (undo-tree-id1737 . -965) 5168) nil (26489 20952 571680 857000) 0 nil])
([nil nil ((3860 . 3861) 3801) nil (26489 20952 571678 592000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3861 . 3862) (#("
" 0 1 (fontified nil)) . -4883) (3861 . 4884)) nil (26489 20952 571678 242000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5225) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1)) nil (26489 20952 571677 561000) 0 nil])
([nil nil ((#("\\usepackage{makecell}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 5993) (undo-tree-id1721 . -21) (undo-tree-id1722 . -12) (undo-tree-id1723 . -22) 6005) nil (26489 20952 571673 62000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5993) (undo-tree-id1720 . -1)) nil (26489 20952 571667 281000) 0 nil])
([nil nil ((#("\\usepackage{listings}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 6231) (undo-tree-id1745 . -21) (undo-tree-id1746 . -12) 6243 (t 26489 20952 578451 758000)) nil (26489 20970 906853 403000) 0 nil])
([nil nil ((#("\\lstset{
    language=Python,  % You can set the language, or leave it for generic code
    basicstyle=\\ttfamily\\small, % Use a monospaced font with smaller size
    keywordstyle=\\color{blue}, % Color keywords
    commentstyle=\\color{gray}, % Color comments
    stringstyle=\\color{red}, % Color strings
    numbers=none, % Disable line numbers
    tabsize=4, % Set tab size
    breaklines=true, % Automatically break long lines
}
" 0 7 (face font-lock-keyword-face fontified t) 7 8 (fontified t) 8 9 (fontified t) 9 31 (fontified t) 31 88 (face font-lock-comment-face fontified t) 88 103 (fontified t) 103 107 (face font-lock-keyword-face fontified t) 107 112 (face font-lock-keyword-face fontified t) 112 118 (face font-lock-keyword-face fontified t) 118 120 (fontified t) 120 162 (face font-lock-comment-face fontified t) 162 179 (fontified t) 179 185 (face font-lock-keyword-face fontified t) 185 193 (fontified t) 193 210 (face font-lock-comment-face fontified t) 210 221 (fontified t) 221 227 (fontified t) 227 233 (face font-lock-keyword-face fontified t) 233 235 (fontified t) 235 241 (fontified t) 241 258 (face font-lock-comment-face fontified t) 258 265 (fontified t) 265 274 (fontified t) 274 280 (face font-lock-keyword-face fontified t) 280 287 (fontified t) 287 303 (face font-lock-comment-face fontified t) 303 321 (fontified t) 321 344 (face font-lock-comment-face fontified t) 344 359 (fontified t) 359 374 (face font-lock-comment-face fontified t) 374 395 (fontified t) 395 415 (face font-lock-comment-face fontified t) 415 428 (face font-lock-comment-face fontified t) 428 430 (fontified t)) . 6231) (undo-tree-id1739 . -429) (undo-tree-id1740 . -9) (undo-tree-id1741 . -429) (undo-tree-id1742 . -7) (undo-tree-id1743 . -429) (undo-tree-id1744 . -429) 6660) nil (26489 20970 906851 891000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3062 . 3063) (#("
" 0 1 (fontified nil)) . -3492) (3062 . 3493) 3009) nil (26489 20970 906836 562000) 0 nil])
([nil nil ((#("\\usepackage{ragged2e}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 22 (fontified t)) . 8042) (undo-tree-id1778 . -21) (t 26489 20970 913254 795000)) nil (26489 20995 405186 952000) 0 nil])
([nil nil ((#("\\newcolumntype{X}[1]{>{\\raggedright\\arraybackslash}p{#1}}
" 0 14 (face font-lock-keyword-face fontified t) 14 23 (fontified t) 23 35 (face font-lock-keyword-face fontified t) 35 46 (face font-lock-keyword-face fontified t) 46 50 (face font-lock-keyword-face fontified t) 50 57 (fontified t) 57 58 (fontified t)) . 8042) (undo-tree-id1777 . -57)) nil (26489 20995 405186 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5654 . 5655) (#("
" 0 1 (fontified nil)) . -5712) (5654 . 5713)) nil (26489 20995 405185 689000) 0 nil])
([nil nil ((#("% Define a new column type 'C' for centered p columns
\\newcolumntype{C}[1]{>{\\centering\\arraybackslash}p{#1}} 
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 18 (face font-lock-comment-face fontified t) 18 19 (face font-lock-comment-face fontified t) 19 30 (face font-lock-comment-face fontified t) 30 54 (face font-lock-comment-face fontified t) 54 68 (face font-lock-keyword-face fontified t) 68 77 (fontified t) 77 87 (face font-lock-keyword-face fontified t) 87 94 (face font-lock-keyword-face fontified t) 94 102 (face font-lock-keyword-face fontified t) 102 111 (fontified t)) . 6720) (undo-tree-id1773 . -110) (undo-tree-id1774 . -54) (undo-tree-id1775 . -54) (undo-tree-id1776 . -54) 6774) nil (26489 20995 405184 697000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5654 . 5655) (#("
" 0 1 (fontified nil)) . -5765) (5654 . 5766)) nil (26489 20995 405182 664000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 5654) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1)) nil (26489 20995 405181 582000) 0 nil])
([nil nil ((5653 . 5654) 5566) nil (26489 20995 405112 172000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6779) (undo-tree-id1779 . -1) (t 26489 20995 412991 658000)) nil (26489 21034 859252 3000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6828) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (t 26489 21034 863568 76000)) nil (26489 21066 290721 36000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6828) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1)) nil (26489 21066 290718 892000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 6678)) nil (26489 21066 290708 61000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 5824)) nil (26489 21066 290704 384000) 0 nil])
([nil nil ((#("\\fancyhf{}
" 0 8 (face font-lock-keyword-face fontified t) 8 11 (fontified t)) . 674) (undo-tree-id1792 . -10) (undo-tree-id1793 . -11) (undo-tree-id1794 . -11) (undo-tree-id1795 . -11) (undo-tree-id1796 . -11) (undo-tree-id1797 . -11) (undo-tree-id1798 . -11) (undo-tree-id1799 . -11) (undo-tree-id1800 . -11) (undo-tree-id1801 . -11) (undo-tree-id1802 . -11) (undo-tree-id1803 . -11) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -11) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -11) 675 (t 26489 21066 297230 628000)) nil (26489 26684 316838 751000) 0 nil])
([nil nil ((nil rear-nonsticky nil 655 . 656) (#("
" 0 1 (fontified nil)) . 666) (655 . 667)) ((#("
\\fancyhf{}
" 0 1 (face font-lock-comment-face rear-nonsticky nil fontified nil) 1 9 (face font-lock-keyword-face fontified nil) 9 11 (fontified nil) 11 12 (fontified nil)) . 655) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (666 . 667) (nil rear-nonsticky t 655 . 656)) (26489 26867 677938 939000) 0 nil])
([nil nil ((#("\\pagestyle{fancy}
" 0 10 (face font-lock-keyword-face fontified t) 10 17 (fontified t) 17 18 (fontified t)) . 667) (undo-tree-id2374 . -17) (undo-tree-id2375 . 1) (undo-tree-id2376 . -9) (undo-tree-id2377 . -17) (undo-tree-id2378 . -18) (undo-tree-id2379 . -18) (undo-tree-id2380 . -9) (undo-tree-id2381 . -9) (undo-tree-id2382 . -17) (undo-tree-id2383 . -17) (undo-tree-id2384 . -17) (undo-tree-id2385 . -17) (undo-tree-id2386 . -17) (undo-tree-id2387 . -9) (undo-tree-id2388 . -9) 676 (t 26489 26868 468637 58000)) nil (26489 27299 583572 794000) 0 nil] [nil nil ((716 . 717) (715 . 716) (nil rear-nonsticky nil 714 . 715) (nil fontified nil 685 . 715) (685 . 715) (684 . 685) (t 26489 26710 999306 205000) 676) ((#("
" 0 1 (fontified t)) . 684) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (#("\\fancypagestyle{chapterpage}{%" 0 15 (face font-lock-keyword-face fontified nil) 15 29 (fontified nil) 29 30 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 685) (undo-tree-id2261 . -30) (undo-tree-id2262 . -30) (undo-tree-id2263 . -30) (undo-tree-id2264 . -30) (undo-tree-id2265 . -30) (nil rear-nonsticky t 714 . 715) (#("
" 0 1 (face font-lock-comment-face fontified t)) . 715) (undo-tree-id2266 . 1) (#("}" 0 1 (fontified t)) . 716)) (26489 26866 699830 115000) 0 nil] [nil nil ((#("\\fancyhf{}
" 0 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 11 (fontified t)) . 656) (undo-tree-id1971 . -10) (undo-tree-id1972 . -11) (undo-tree-id1974 . -9) (undo-tree-id1976 . -9) (undo-tree-id1978 . -9) (undo-tree-id1980 . -9) (undo-tree-id1982 . -9) (undo-tree-id1984 . -9) (undo-tree-id1986 . -9) (undo-tree-id1988 . -9) (undo-tree-id1990 . -9) (undo-tree-id1992 . -9) (undo-tree-id1994 . -9) (undo-tree-id1996 . -9) (undo-tree-id1998 . -9) (undo-tree-id2000 . -9) (undo-tree-id2002 . -9) (undo-tree-id2004 . -9) (undo-tree-id2006 . -9) (undo-tree-id2008 . -9) (undo-tree-id2010 . -9) (undo-tree-id2012 . -9) (undo-tree-id2014 . -9) (undo-tree-id2016 . -9) (undo-tree-id2018 . -9) (undo-tree-id2020 . -9) (undo-tree-id2022 . -9) (undo-tree-id2024 . -9) (undo-tree-id2026 . -9) (undo-tree-id2028 . -9) (undo-tree-id2030 . -9) (undo-tree-id2032 . -9) (undo-tree-id2034 . -9) (undo-tree-id2036 . -9) (undo-tree-id2038 . -9) (undo-tree-id2040 . -9) (undo-tree-id2042 . -9) (undo-tree-id2044 . -9) (undo-tree-id2046 . -9) (undo-tree-id2048 . -9) (undo-tree-id2050 . -9) (undo-tree-id2052 . -9) (undo-tree-id2054 . -9) (undo-tree-id2056 . -9) (undo-tree-id2058 . -9) (undo-tree-id2060 . -9) (undo-tree-id2062 . -9) (undo-tree-id2064 . -9) (undo-tree-id2066 . -9) (undo-tree-id2068 . -9) (undo-tree-id2070 . -9) (undo-tree-id2072 . -9) (undo-tree-id2074 . -9) (undo-tree-id2076 . -9) (undo-tree-id2078 . -9) (undo-tree-id2080 . -9) (undo-tree-id2081 . -9) (undo-tree-id2082 . -9) (undo-tree-id2084 . -9) 665 (t 26489 26686 90570 193000)) ((656 . 667) (t 26489 26690 779520 496000)) (26489 26690 772069 62000) 0 nil] [nil nil ((nil rear-nonsticky nil 875 . 876) (nil fontified nil 656 . 876) (656 . 876) (#("\\fancyhf{}
\\pagestyle{fancy}" 0 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 11 (fontified t) 11 21 (face font-lock-keyword-face fontified t) 21 28 (fontified t)) . 656) (undo-tree-id1829 . -27) (undo-tree-id1830 . -11) (undo-tree-id1832 . -11) (undo-tree-id1834 . -11) (undo-tree-id1836 . -11) (undo-tree-id1838 . -11) (undo-tree-id1840 . -11) (undo-tree-id1842 . -11) (undo-tree-id1844 . -11) (undo-tree-id1846 . -11) (undo-tree-id1848 . -11) (undo-tree-id1850 . -11) (undo-tree-id1852 . -11) (undo-tree-id1854 . -11) 685 (t 26489 26606 969408 620000)) ((656 . 684) (#("\\fancypagestyle{plain}{%
    \\fancyhf{} % Clear the headers and footers
    \\fancyfoot[LE,RO]{\\thepage} % Page number on both left and right for even and odd pages
}

\\pagestyle{fancy} % Use the fancy style for all pages" 0 15 (face font-lock-keyword-face fontified nil) 15 23 (fontified nil) 23 25 (face font-lock-comment-face fontified nil) 25 29 (fontified nil) 29 37 (face font-lock-keyword-face fontified nil) 37 40 (fontified nil) 40 72 (face font-lock-comment-face fontified nil) 72 76 (fontified nil) 76 86 (face font-lock-keyword-face fontified nil) 86 94 (fontified nil) 94 102 (face font-lock-keyword-face fontified nil) 102 104 (fontified nil) 104 164 (face font-lock-comment-face fontified nil) 164 167 (fontified nil) 167 177 (face font-lock-keyword-face fontified nil) 177 185 (fontified nil) 185 219 (face font-lock-comment-face fontified nil) 219 220 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 656) (undo-tree-id1904 . -167) (undo-tree-id1905 . -167) (undo-tree-id1906 . -193) (undo-tree-id1907 . -167) (undo-tree-id1908 . -167) (undo-tree-id1909 . -167) (undo-tree-id1910 . -167) (undo-tree-id1911 . -167) (undo-tree-id1912 . -167) (undo-tree-id1913 . -167) (undo-tree-id1914 . -167) (undo-tree-id1915 . -167) (undo-tree-id1916 . -167) (undo-tree-id1917 . -167) (undo-tree-id1918 . -167) (undo-tree-id1919 . -167) (undo-tree-id1920 . -193) (undo-tree-id1921 . -193) (undo-tree-id1922 . -193) (undo-tree-id1923 . -193) (undo-tree-id1924 . -193) (undo-tree-id1925 . -193) (undo-tree-id1926 . -193) (undo-tree-id1927 . -193) (undo-tree-id1928 . -193) (undo-tree-id1929 . -193) (undo-tree-id1930 . -193) (undo-tree-id1931 . -193) (undo-tree-id1932 . -193) (undo-tree-id1933 . -193) (undo-tree-id1934 . -193) (undo-tree-id1935 . -193) (undo-tree-id1936 . -167) (undo-tree-id1937 . -193) (nil fontified t 820 . 823) (nil fontified t 760 . 820) (nil fontified t 758 . 760) (nil fontified t 750 . 758) (nil fontified t 742 . 750) (nil fontified t 732 . 742) (nil fontified t 728 . 732) (nil fontified t 696 . 728) (nil fontified t 693 . 696) (nil fontified t 685 . 693) (nil fontified t 681 . 685) (nil fontified t 679 . 681) (nil fontified t 671 . 679) (nil fontified t 656 . 671) (nil rear-nonsticky t 875 . 876)) (26489 26682 465498 750000) 0 nil])
([nil current ((nil rear-nonsticky nil 655 . 656) (#("
" 0 1 (fontified nil)) . 673) (655 . 674)) ((#("
\\pagestyle{fancy}
" 0 1 (face font-lock-comment-face rear-nonsticky nil fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil)) . 655) (undo-tree-id3137 . -18) (undo-tree-id3138 . -18) (undo-tree-id3139 . -1) (undo-tree-id3140 . -1) (undo-tree-id3141 . -10) (undo-tree-id3142 . -10) (undo-tree-id3143 . -12) (undo-tree-id3144 . -12) (undo-tree-id3145 . -12) (undo-tree-id3146 . -12) (undo-tree-id3147 . -12) (undo-tree-id3148 . -1) (undo-tree-id3149 . -1) (undo-tree-id3150 . -1) (undo-tree-id3151 . -1) (undo-tree-id3152 . -1) (undo-tree-id3153 . -18) (undo-tree-id3154 . -18) (undo-tree-id3155 . -18) (undo-tree-id3156 . -18) (undo-tree-id3157 . -18) (undo-tree-id3158 . -18) (undo-tree-id3159 . -18) (undo-tree-id3160 . -18) (undo-tree-id3161 . -18) (undo-tree-id3162 . -18) (undo-tree-id3163 . -18) (undo-tree-id3164 . -18) (undo-tree-id3165 . -18) (undo-tree-id3166 . -18) (undo-tree-id3167 . -18) (undo-tree-id3168 . -18) (undo-tree-id3169 . -18) (undo-tree-id3170 . -18) (undo-tree-id3171 . -18) (undo-tree-id3172 . -18) (undo-tree-id3173 . -18) (undo-tree-id3174 . -18) (undo-tree-id3175 . -18) (undo-tree-id3176 . -18) (undo-tree-id3177 . -18) (undo-tree-id3178 . -18) (undo-tree-id3179 . -18) (undo-tree-id3180 . -18) (undo-tree-id3181 . -1) (undo-tree-id3182 . -1) (undo-tree-id3183 . -1) (undo-tree-id3184 . -1) (undo-tree-id3185 . -1) (undo-tree-id3186 . -1) (undo-tree-id3187 . -1) (undo-tree-id3188 . -1) (undo-tree-id3189 . -1) (undo-tree-id3190 . -1) (undo-tree-id3191 . -1) (undo-tree-id3192 . -1) (undo-tree-id3193 . -1) (undo-tree-id3194 . -1) (undo-tree-id3195 . -1) (undo-tree-id3196 . -1) (undo-tree-id3197 . -1) (undo-tree-id3198 . -1) (undo-tree-id3199 . -1) (undo-tree-id3200 . -1) (undo-tree-id3201 . -1) (undo-tree-id3202 . -1) (undo-tree-id3203 . -1) (undo-tree-id3204 . -1) (undo-tree-id3205 . -1) (undo-tree-id3206 . -18) (undo-tree-id3207 . -1) (673 . 674) (nil rear-nonsticky t 655 . 656) (t 26489 27281 498256 597000)) (26489 27351 504919 990000) 0 nil])
([nil nil ((nil rear-nonsticky nil 715 . 716) (#("
" 0 1 (fontified nil rear-nonsticky t)) . -743) (715 . 744) 685) ((#("
\\fancyfoot[LE,RO]{\\thepage}
" 0 1 (face font-lock-comment-face rear-nonsticky nil fontified nil) 1 11 (face font-lock-keyword-face fontified nil) 11 19 (fontified nil) 19 27 (face font-lock-keyword-face fontified nil) 27 28 (fontified nil) 28 29 (fontified nil rear-nonsticky t)) . 715) (undo-tree-id2243 . 27) (743 . 744) (nil rear-nonsticky t 715 . 716)) (26489 26866 392059 41000) 0 nil])
nil
([nil nil ((823 . 877) (#("\\pagestyle{fancy} % Use the fancy style for all pages
" 0 10 (face font-lock-keyword-face fontified t) 10 18 (fontified t) 18 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face rear-nonsticky t fontified t) 53 54 (face font-lock-comment-face fontified t)) . 823) 849) ((823 . 877) (#("\\pagestyle{fancy} % use the fancy style for all pages
" 0 10 (face font-lock-keyword-face fontified t) 10 18 (fontified t) 18 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face rear-nonsticky t fontified t) 53 54 (face font-lock-comment-face fontified t)) . 823) (undo-tree-id1890 . -53) (undo-tree-id1891 . -26) (undo-tree-id1892 . -26) (undo-tree-id1893 . -26) (undo-tree-id1894 . -54) (undo-tree-id1895 . -54) (undo-tree-id1896 . -54) (undo-tree-id1897 . -54) (undo-tree-id1898 . -54) (undo-tree-id1899 . -26) (undo-tree-id1900 . -26) (undo-tree-id1901 . -26) (undo-tree-id1902 . -26) (undo-tree-id1903 . -26)) (26489 26682 465409 504000) 0 nil] [nil nil ((#("\\fancyfoot[LE,RO]{\\thepage}
" 0 10 (face font-lock-keyword-face fontified t) 10 18 (fontified t) 18 26 (face font-lock-keyword-face fontified t) 26 27 (fontified t) 27 28 (fontified t rear-nonsticky t)) . 877) (undo-tree-id1856 . -27) (undo-tree-id1857 . 28) (undo-tree-id1858 . -26) (undo-tree-id1859 . -26) (undo-tree-id1860 . -26) (undo-tree-id1861 . -26) (undo-tree-id1862 . -26) (undo-tree-id1863 . -26) (undo-tree-id1864 . -26) (undo-tree-id1865 . -26) (undo-tree-id1866 . -26) (undo-tree-id1867 . -26) (undo-tree-id1868 . -26) (undo-tree-id1869 . -26) (undo-tree-id1870 . -26) (undo-tree-id1871 . -26) (undo-tree-id1872 . -26) (undo-tree-id1873 . -26) (undo-tree-id1874 . -26) (undo-tree-id1875 . -26) (undo-tree-id1876 . -26) (undo-tree-id1877 . -26) (undo-tree-id1878 . -26) (undo-tree-id1879 . -26) (undo-tree-id1880 . -26) (undo-tree-id1881 . -26) (undo-tree-id1882 . -26) (undo-tree-id1883 . -26) (undo-tree-id1884 . -26) (undo-tree-id1885 . -26) (undo-tree-id1886 . -26) (undo-tree-id1887 . -26) (undo-tree-id1888 . -26) (undo-tree-id1889 . -28) 903 (t 26489 26648 599967 492000)) ((877 . 905) (t 26489 26666 812774 496000)) (26489 26666 804948 548000) 0 nil])
([nil nil ((nil rear-nonsticky nil 862 . 863) (nil fontified nil 822 . 863) (822 . 863) (t 26489 27281 498256 597000)) ((#("\\fancypagestyle{plain}{\\pagestyle{fancy}}" 0 15 (face font-lock-keyword-face fontified nil) 15 16 (fontified nil) 16 21 (fontified nil) 21 23 (fontified nil) 23 33 (face font-lock-keyword-face fontified nil) 33 40 (fontified nil) 40 41 (rear-nonsticky nil fontified nil)) . 822) (undo-tree-id3335 . -16) (undo-tree-id3336 . -20) (undo-tree-id3337 . 20) (undo-tree-id3338 . -16) (undo-tree-id3339 . -16) (undo-tree-id3340 . -16) (undo-tree-id3341 . -16) (undo-tree-id3342 . -16) (undo-tree-id3343 . -16) (undo-tree-id3344 . -16) (undo-tree-id3345 . -16) (undo-tree-id3346 . -16) (undo-tree-id3347 . -16) (undo-tree-id3348 . -16) (undo-tree-id3349 . -16) (undo-tree-id3350 . -16) (undo-tree-id3351 . -16) (undo-tree-id3352 . -16) (undo-tree-id3353 . -16) (undo-tree-id3354 . -16) (undo-tree-id3355 . -16) (undo-tree-id3356 . -16) (undo-tree-id3357 . -16) (undo-tree-id3358 . -16) (undo-tree-id3359 . -16) (undo-tree-id3360 . -16) (undo-tree-id3361 . -16) (undo-tree-id3362 . -16) (undo-tree-id3363 . -16) (undo-tree-id3364 . -16) (undo-tree-id3365 . -16) (undo-tree-id3366 . -16) (undo-tree-id3367 . -16) (undo-tree-id3368 . -16) (undo-tree-id3369 . -16) (undo-tree-id3370 . -16) (undo-tree-id3371 . -16) (undo-tree-id3372 . -16) (undo-tree-id3373 . -16) (undo-tree-id3374 . -16) (undo-tree-id3375 . -16) (undo-tree-id3376 . -16) (undo-tree-id3377 . -16) (undo-tree-id3378 . -16) (undo-tree-id3379 . -16) (undo-tree-id3380 . -16) (undo-tree-id3381 . -16) (undo-tree-id3382 . -16) (undo-tree-id3383 . -16) (undo-tree-id3384 . -16) (undo-tree-id3385 . -16) (undo-tree-id3386 . -16) (undo-tree-id3387 . -16) (undo-tree-id3388 . -16) (undo-tree-id3389 . -16) (undo-tree-id3390 . -16) (undo-tree-id3391 . -16) (undo-tree-id3392 . -16) (undo-tree-id3393 . -16) (undo-tree-id3394 . -16) (undo-tree-id3395 . -16) (undo-tree-id3396 . -16) (undo-tree-id3397 . -16) (undo-tree-id3398 . -16) (undo-tree-id3399 . -16) (undo-tree-id3400 . -16) (undo-tree-id3401 . -16) (undo-tree-id3402 . -16) (undo-tree-id3403 . -16) (undo-tree-id3404 . -16) (undo-tree-id3405 . -16) (undo-tree-id3406 . -16) (undo-tree-id3407 . -16) (undo-tree-id3408 . -16) (undo-tree-id3409 . -16) (undo-tree-id3410 . -16) (undo-tree-id3411 . -16) (undo-tree-id3412 . -16) (undo-tree-id3413 . -16) (undo-tree-id3414 . -16) (undo-tree-id3415 . -16) (undo-tree-id3416 . -16) (undo-tree-id3417 . -16) (undo-tree-id3418 . -16) (undo-tree-id3419 . -16) (undo-tree-id3420 . -16) (undo-tree-id3421 . -16) (undo-tree-id3422 . -16) (undo-tree-id3423 . -16) (undo-tree-id3424 . -16) (undo-tree-id3425 . -16) (undo-tree-id3426 . -16) (undo-tree-id3427 . -16) (undo-tree-id3428 . -16) (undo-tree-id3429 . -16) (undo-tree-id3430 . -16) (undo-tree-id3431 . -16) (undo-tree-id3432 . -16) (undo-tree-id3433 . -16) (undo-tree-id3434 . -16) (undo-tree-id3435 . -16) (undo-tree-id3436 . -16) (undo-tree-id3437 . -16) (undo-tree-id3438 . -16) (undo-tree-id3439 . -16) (undo-tree-id3440 . -16) (undo-tree-id3441 . -16) (undo-tree-id3442 . -16) (undo-tree-id3443 . -16) (undo-tree-id3444 . -16) (undo-tree-id3445 . -16) (undo-tree-id3446 . -16) (undo-tree-id3447 . -16) (undo-tree-id3448 . -16) (undo-tree-id3449 . -16) (undo-tree-id3450 . -16) (undo-tree-id3451 . -16) (undo-tree-id3452 . -16) (undo-tree-id3453 . -16) (undo-tree-id3454 . -16) (undo-tree-id3455 . -16) (undo-tree-id3456 . -16) (undo-tree-id3457 . -16) (undo-tree-id3458 . -16) (undo-tree-id3459 . -16) (undo-tree-id3460 . -16) (undo-tree-id3461 . -16) (undo-tree-id3462 . -16) (undo-tree-id3463 . -16) (undo-tree-id3464 . -16) (undo-tree-id3465 . -16) (undo-tree-id3466 . -16) (undo-tree-id3467 . -16) (undo-tree-id3468 . -16) (undo-tree-id3469 . -16) (undo-tree-id3470 . -16) (undo-tree-id3471 . -16) (undo-tree-id3472 . -16) (undo-tree-id3473 . -16) (undo-tree-id3474 . -16) (undo-tree-id3475 . -16) (undo-tree-id3476 . -16) (undo-tree-id3477 . -16) (undo-tree-id3478 . -16) (undo-tree-id3479 . -16) (undo-tree-id3480 . -16) (undo-tree-id3481 . -16) (undo-tree-id3482 . -16) (undo-tree-id3483 . -16) (undo-tree-id3484 . -16) (undo-tree-id3485 . -16) (undo-tree-id3486 . -16) (undo-tree-id3487 . -16) (undo-tree-id3488 . -16) (undo-tree-id3489 . -16) (undo-tree-id3490 . -16) (undo-tree-id3491 . -16) (nil rear-nonsticky t 862 . 863)) (26489 27350 688149 582000) 0 nil] [nil nil ((673 . 674) (t 26489 27281 498256 597000) 656) ((#("
" 0 1 (fontified t)) . 673) (undo-tree-id3104 . -1) (undo-tree-id3105 . -1) (undo-tree-id3106 . -1) (undo-tree-id3107 . -1) (undo-tree-id3108 . -1) (undo-tree-id3109 . -1) (undo-tree-id3110 . -1) (undo-tree-id3111 . -1) (undo-tree-id3112 . -1) (undo-tree-id3113 . -1) (undo-tree-id3114 . -1) (undo-tree-id3115 . -1) (undo-tree-id3116 . -1) (undo-tree-id3117 . -1) (undo-tree-id3118 . -1) (undo-tree-id3119 . -1) (undo-tree-id3120 . -1) (undo-tree-id3121 . -1) (undo-tree-id3122 . -1) (undo-tree-id3123 . -1) (undo-tree-id3124 . -1) (undo-tree-id3125 . -1) (undo-tree-id3126 . -1) (undo-tree-id3127 . -1) (undo-tree-id3128 . -1) (undo-tree-id3129 . -1) (undo-tree-id3130 . -1) (undo-tree-id3131 . -1) (undo-tree-id3132 . -1) (undo-tree-id3133 . -1) (undo-tree-id3134 . -1) (undo-tree-id3135 . -1) (undo-tree-id3136 . -1)) (26489 27297 842675 950000) 0 nil] [nil nil ((nil rear-nonsticky nil 696 . 697) (656 . 697) (#("\\pagestyle{fancy}" 0 1 (face font-lock-keyword-face fontified t) 1 10 (face font-lock-keyword-face fontified t) 10 11 (fontified t) 11 16 (fontified t) 16 17 (fontified t)) . 656) (undo-tree-id3084 . -16) (undo-tree-id3085 . 1) (undo-tree-id3086 . -9) (undo-tree-id3087 . -9) (undo-tree-id3088 . -11) (undo-tree-id3089 . -11) (undo-tree-id3090 . -11) (undo-tree-id3091 . -11) (undo-tree-id3092 . -11) (t 26489 27281 498256 597000)) ((656 . 673) (#("\\fancypagestyle{plain}{\\pagestyle{fancy}}" 0 15 (face font-lock-keyword-face fontified nil) 15 23 (fontified nil) 23 33 (face font-lock-keyword-face fontified nil) 33 40 (fontified nil) 40 41 (rear-nonsticky nil fontified nil)) . 656) (undo-tree-id3093 . -40) (undo-tree-id3094 . -40) (undo-tree-id3095 . -40) (undo-tree-id3096 . -40) (undo-tree-id3097 . -40) (nil rear-nonsticky t 696 . 697)) (26489 27291 538030 618000) 0 nil] [nil nil ((nil rear-nonsticky nil 908 . 909) (nil fontified nil 589 . 909) (589 . 909) (#("\\usepackage{fancyhdr}                 % Custom headers and footers
\\pagestyle{fancy}
\\fancyhf{}
\\fancyfoot[LE,RO]{\\thepage}
" 0 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 20 (face font-lock-builtin-face fontified t) 20 38 (fontified t) 38 66 (face font-lock-comment-face fontified t) 66 67 (face font-lock-comment-face rear-nonsticky t fontified t) 67 68 (face font-lock-keyword-face fontified t) 68 77 (face font-lock-keyword-face fontified t) 77 78 (fontified t) 78 83 (fontified t) 83 84 (fontified t) 84 85 (rear-nonsticky t fontified t) 85 93 (face font-lock-keyword-face fontified t) 93 95 (fontified t) 95 96 (fontified t) 96 106 (face font-lock-keyword-face fontified t) 106 114 (fontified t) 114 122 (face font-lock-keyword-face fontified t) 122 123 (fontified t) 123 124 (fontified t rear-nonsticky t)) . 589) (undo-tree-id2730 . -123) (undo-tree-id2731 . 41) (undo-tree-id2732 . -68) (undo-tree-id2733 . -124) (undo-tree-id2734 . -1) (undo-tree-id2735 . -97) (undo-tree-id2736 . -85) (undo-tree-id2737 . -85) (undo-tree-id2738 . -85) (undo-tree-id2739 . -85) (undo-tree-id2740 . -85) (undo-tree-id2741 . -85) (undo-tree-id2742 . -85) (undo-tree-id2743 . -85) (undo-tree-id2744 . -85) (undo-tree-id2745 . -85) (undo-tree-id2746 . -85) (undo-tree-id2747 . -96) (undo-tree-id2748 . -96) (undo-tree-id2749 . -96) (undo-tree-id2750 . -96) (undo-tree-id2751 . -96) (undo-tree-id2752 . -96) (undo-tree-id2753 . -96) (undo-tree-id2754 . -96) (undo-tree-id2755 . -96) (undo-tree-id2756 . -96) (undo-tree-id2757 . -78) (undo-tree-id2758 . -78) (undo-tree-id2759 . -78) (undo-tree-id2760 . -78) (undo-tree-id2761 . -115) (undo-tree-id2762 . -115) (undo-tree-id2763 . -115) (undo-tree-id2764 . -78) (undo-tree-id2765 . -68) (undo-tree-id2766 . -97) (undo-tree-id2767 . -68) (undo-tree-id2768 . -68) (undo-tree-id2769 . -68) (undo-tree-id2770 . -68) (undo-tree-id2771 . -68) (undo-tree-id2772 . -68) (undo-tree-id2773 . -68) (undo-tree-id2774 . -68) (undo-tree-id2775 . -68) (undo-tree-id2776 . -68) (undo-tree-id2777 . -68) (undo-tree-id2778 . -68) (undo-tree-id2779 . -68) (undo-tree-id2780 . -68) (undo-tree-id2781 . -68) (undo-tree-id2782 . -68) (undo-tree-id2783 . -68) (undo-tree-id2784 . -86) (undo-tree-id2785 . -86) (undo-tree-id2786 . -86) (undo-tree-id2787 . -86) (undo-tree-id2788 . -86) (undo-tree-id2789 . -96) (undo-tree-id2790 . -97) (undo-tree-id2791 . -97) (undo-tree-id2792 . -97) (undo-tree-id2793 . -97) (undo-tree-id2794 . -97) (undo-tree-id2795 . -97) (undo-tree-id2796 . -97) (undo-tree-id2797 . -97) (undo-tree-id2798 . -97) (undo-tree-id2799 . -97) (undo-tree-id2800 . -97) (undo-tree-id2801 . -97) (undo-tree-id2802 . -97) (undo-tree-id2803 . -97) (undo-tree-id2804 . -97) (undo-tree-id2805 . -97) (undo-tree-id2806 . -97) (undo-tree-id2807 . -97) (undo-tree-id2808 . -97) (undo-tree-id2809 . -97) (undo-tree-id2810 . -97) (undo-tree-id2811 . -97) (undo-tree-id2812 . -97) (undo-tree-id2813 . -97) (undo-tree-id2814 . -97) (undo-tree-id2815 . -97) (undo-tree-id2816 . -97) (undo-tree-id2817 . -97) (undo-tree-id2818 . -68) (undo-tree-id2819 . -97) (undo-tree-id2820 . -97) (undo-tree-id2821 . -97) (undo-tree-id2822 . -124) (undo-tree-id2823 . -124) 713 (t 26489 27064 371559 800000)) ((589 . 713) (#("\\usepackage{fancyhdr}
\\pagestyle{fancy}
\\fancyhf{}
\\fancyfoot[LE,RO]{\\thepage}

\\fancypagestyle{chapterstyle}{
  \\fancyhf{}
  \\fancyhead[LO,RE]{\\nouppercase{\\leftmark}} % chapter title
  \\fancyfoot[LE,RO]{\\thepage}
}

\\let\\oldchapter\\chapter
\\renewcommand{\\chapter}[1]{%
  \\oldchapter{#1}%
  \\pagestyle{chapterstyle}%
}
" 0 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 20 (face font-lock-builtin-face fontified nil) 20 22 (fontified nil) 22 32 (face font-lock-keyword-face fontified nil) 32 40 (fontified nil) 40 48 (face font-lock-keyword-face fontified nil) 48 51 (fontified nil) 51 61 (face font-lock-keyword-face fontified nil) 61 69 (fontified nil) 69 77 (face font-lock-keyword-face fontified nil) 77 80 (fontified nil) 80 95 (face font-lock-keyword-face fontified nil) 95 113 (fontified nil) 113 121 (face font-lock-keyword-face fontified nil) 121 126 (fontified nil) 126 136 (face font-lock-keyword-face fontified nil) 136 144 (fontified nil) 144 156 (face font-lock-keyword-face fontified nil) 156 157 (fontified nil) 157 166 (face font-lock-keyword-face fontified nil) 166 169 (fontified nil) 169 185 (face font-lock-comment-face fontified nil) 185 187 (fontified nil) 187 197 (face font-lock-keyword-face fontified nil) 197 205 (fontified nil) 205 213 (face font-lock-keyword-face fontified nil) 213 218 (fontified nil) 218 222 (face font-lock-keyword-face fontified nil) 222 233 (face font-lock-keyword-face fontified nil) 233 241 (face font-lock-keyword-face fontified nil) 241 242 (fontified nil) 242 255 (face font-lock-keyword-face fontified nil) 255 256 (fontified nil) 256 264 (face font-lock-function-name-face fontified nil) 264 269 (fontified nil) 269 271 (face font-lock-comment-face fontified nil) 271 273 (fontified nil) 273 284 (face font-lock-keyword-face fontified nil) 284 288 (fontified nil) 288 290 (face font-lock-comment-face fontified nil) 290 292 (fontified nil) 292 302 (face font-lock-keyword-face fontified nil) 302 316 (fontified nil) 316 318 (face font-lock-comment-face fontified nil) 318 319 (fontified nil) 319 320 (rear-nonsticky nil fontified nil)) . 589) (undo-tree-id2824 . -319) (undo-tree-id2825 . -318) (undo-tree-id2826 . -319) (undo-tree-id2827 . -318) (undo-tree-id2828 . -318) (undo-tree-id2829 . -318) (undo-tree-id2830 . -318) (undo-tree-id2831 . -318) (undo-tree-id2832 . -318) (undo-tree-id2833 . -318) (undo-tree-id2834 . -318) (undo-tree-id2835 . -318) (undo-tree-id2836 . -318) (undo-tree-id2837 . -318) (undo-tree-id2838 . -318) (undo-tree-id2839 . -318) (undo-tree-id2840 . -318) (undo-tree-id2841 . -318) (undo-tree-id2842 . -318) (undo-tree-id2843 . -318) (undo-tree-id2844 . -318) (undo-tree-id2845 . -318) (undo-tree-id2846 . -318) (undo-tree-id2847 . -318) (undo-tree-id2848 . -318) (undo-tree-id2849 . -318) (undo-tree-id2850 . -318) (undo-tree-id2851 . -318) (undo-tree-id2852 . -318) (undo-tree-id2853 . -318) (undo-tree-id2854 . -318) (undo-tree-id2855 . -318) (undo-tree-id2856 . -318) (undo-tree-id2857 . -318) (undo-tree-id2858 . -318) (undo-tree-id2859 . -318) (undo-tree-id2860 . -318) (undo-tree-id2861 . -318) (undo-tree-id2862 . -318) (undo-tree-id2863 . -318) (undo-tree-id2864 . -318) (undo-tree-id2865 . -318) (undo-tree-id2866 . -318) (undo-tree-id2867 . -318) (undo-tree-id2868 . -318) (undo-tree-id2869 . -318) (undo-tree-id2870 . -318) (undo-tree-id2871 . -318) (undo-tree-id2872 . -318) (undo-tree-id2873 . -318) (undo-tree-id2874 . -318) (undo-tree-id2875 . -318) (undo-tree-id2876 . -318) (undo-tree-id2877 . -318) (undo-tree-id2878 . -318) (undo-tree-id2879 . -318) (undo-tree-id2880 . -318) (undo-tree-id2881 . -318) (undo-tree-id2882 . -318) (undo-tree-id2883 . -318) (undo-tree-id2884 . -318) (undo-tree-id2885 . -318) (undo-tree-id2886 . -318) (undo-tree-id2887 . -318) (undo-tree-id2888 . -318) (undo-tree-id2889 . -318) (undo-tree-id2890 . -318) (undo-tree-id2891 . -318) (undo-tree-id2892 . -318) (undo-tree-id2893 . -318) (undo-tree-id2894 . -318) (undo-tree-id2895 . -318) (undo-tree-id2896 . -318) (undo-tree-id2897 . -318) (undo-tree-id2898 . -318) (undo-tree-id2899 . -318) (undo-tree-id2900 . -318) (undo-tree-id2901 . -318) (undo-tree-id2902 . -318) (undo-tree-id2903 . -318) (undo-tree-id2904 . -318) (undo-tree-id2905 . -318) (undo-tree-id2906 . -318) (undo-tree-id2907 . -318) (undo-tree-id2908 . -318) (undo-tree-id2909 . -318) (undo-tree-id2910 . -318) (undo-tree-id2911 . -318) (undo-tree-id2912 . -318) (undo-tree-id2913 . -318) (undo-tree-id2914 . -318) (undo-tree-id2915 . -318) (undo-tree-id2916 . -318) (undo-tree-id2917 . -318) (undo-tree-id2918 . -318) (undo-tree-id2919 . -318) (undo-tree-id2920 . -318) (undo-tree-id2921 . -318) (undo-tree-id2922 . -318) (undo-tree-id2923 . -318) (undo-tree-id2924 . -318) (undo-tree-id2925 . -318) (undo-tree-id2926 . -318) (undo-tree-id2927 . -318) (undo-tree-id2928 . -318) (undo-tree-id2929 . -318) (undo-tree-id2930 . -318) (undo-tree-id2931 . -318) (undo-tree-id2932 . -318) (undo-tree-id2933 . -318) (undo-tree-id2934 . -318) (undo-tree-id2935 . -318) (undo-tree-id2936 . -318) (undo-tree-id2937 . -318) (undo-tree-id2938 . -318) (undo-tree-id2939 . -318) (undo-tree-id2940 . -318) (undo-tree-id2941 . -318) (undo-tree-id2942 . -318) (undo-tree-id2943 . -318) (undo-tree-id2944 . -318) (undo-tree-id2945 . -318) (undo-tree-id2946 . -318) (undo-tree-id2947 . -318) (undo-tree-id2948 . -318) (undo-tree-id2949 . -318) (undo-tree-id2950 . -318) (undo-tree-id2951 . -318) (undo-tree-id2952 . -318) (undo-tree-id2953 . -318) (undo-tree-id2954 . -318) (undo-tree-id2955 . -318) (undo-tree-id2956 . -318) (undo-tree-id2957 . -318) (undo-tree-id2958 . -318) (undo-tree-id2959 . -318) (undo-tree-id2960 . -318) (undo-tree-id2961 . -318) (undo-tree-id2962 . -318) (undo-tree-id2963 . -318) (undo-tree-id2964 . -318) (undo-tree-id2965 . -318) (undo-tree-id2966 . -318) (undo-tree-id2967 . -318) (undo-tree-id2968 . -318) (undo-tree-id2969 . -318) (undo-tree-id2970 . -318) (undo-tree-id2971 . -318) (undo-tree-id2972 . -318) (undo-tree-id2973 . -318) (undo-tree-id2974 . -318) (undo-tree-id2975 . -318) (undo-tree-id2976 . -318) (undo-tree-id2977 . -318) (undo-tree-id2978 . -318) (undo-tree-id2979 . -318) (undo-tree-id2980 . -318) (undo-tree-id2981 . -318) (undo-tree-id2982 . -318) (undo-tree-id2983 . -318) (undo-tree-id2984 . -318) (undo-tree-id2985 . -318) (undo-tree-id2986 . -318) (undo-tree-id2987 . -318) (undo-tree-id2988 . -318) (undo-tree-id2989 . -318) (undo-tree-id2990 . -318) (undo-tree-id2991 . -318) (undo-tree-id2992 . -318) (undo-tree-id2993 . -318) (undo-tree-id2994 . -318) (undo-tree-id2995 . -318) (undo-tree-id2996 . -318) (undo-tree-id2997 . -318) (undo-tree-id2998 . -318) (undo-tree-id2999 . -318) (undo-tree-id3000 . -318) (undo-tree-id3001 . -318) (undo-tree-id3002 . -318) (undo-tree-id3003 . -318) (undo-tree-id3004 . -318) (undo-tree-id3005 . -318) (undo-tree-id3006 . -318) (nil fontified t 905 . 907) (nil fontified t 891 . 905) (nil fontified t 881 . 891) (nil fontified t 879 . 881) (nil fontified t 877 . 879) (nil fontified t 873 . 877) (nil fontified t 862 . 873) (nil fontified t 860 . 862) (nil fontified t 858 . 860) (nil fontified t 853 . 858) (nil fontified t 845 . 853) (nil fontified t 844 . 845) (nil fontified t 831 . 844) (nil fontified t 830 . 831) (nil fontified t 822 . 830) (nil fontified t 811 . 822) (nil fontified t 807 . 811) (nil fontified t 802 . 807) (nil fontified t 794 . 802) (nil fontified t 786 . 794) (nil fontified t 776 . 786) (nil fontified t 774 . 776) (nil fontified t 758 . 774) (nil fontified t 755 . 758) (nil fontified t 746 . 755) (nil fontified t 745 . 746) (nil fontified t 733 . 745) (nil fontified t 725 . 733) (nil fontified t 715 . 725) (nil fontified t 710 . 715) (nil fontified t 702 . 710) (nil fontified t 684 . 702) (nil fontified t 669 . 684) (nil fontified t 666 . 669) (nil fontified t 658 . 666) (nil fontified t 650 . 658) (nil fontified t 640 . 650) (nil fontified t 637 . 640) (nil fontified t 629 . 637) (nil fontified t 621 . 629) (nil fontified t 611 . 621) (nil fontified t 609 . 611) (nil fontified t 601 . 609) (nil fontified t 600 . 601) (nil fontified t 589 . 600) (nil rear-nonsticky t 908 . 909) (t 26489 27135 418806 277000)) (26489 27135 411968 419000) 0 nil] [nil nil ((657 . 662)) ((#("fancy" 0 5 (face font-lock-keyword-face fontified t)) . 657)) (26489 27062 836846 701000) 0 nil])
([nil nil ((nil rear-nonsticky nil 715 . 716) (#("
" 0 1 (fontified nil)) . -726) (715 . 727) 685 (t 26489 26771 29669 961000)) ((#("
\\fancyhf{}
" 0 1 (face font-lock-comment-face rear-nonsticky nil fontified nil) 1 9 (face font-lock-keyword-face fontified nil) 9 11 (fontified nil) 11 12 (fontified nil)) . 715) (undo-tree-id2086 . -1) (undo-tree-id2087 . -11) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (726 . 727) (nil rear-nonsticky t 715 . 716) (t 26489 26782 194551 610000)) (26489 26782 187073 606000) 0 nil])
nil
nil
([nil nil ((838 . 850) (#("plain" 0 5 (fontified t)) . 838) (undo-tree-id3208 . -4)) ((838 . 843) (#("chapterstyle" 0 12 (fontified t)) . 838) (undo-tree-id3209 . -11) (undo-tree-id3210 . -11) (undo-tree-id3211 . -11) (undo-tree-id3212 . -11) (undo-tree-id3213 . -11) (undo-tree-id3214 . -11) (undo-tree-id3215 . -11) (undo-tree-id3216 . -11) (undo-tree-id3217 . -11) (undo-tree-id3218 . -11) (undo-tree-id3219 . -11) (undo-tree-id3220 . -11) (undo-tree-id3221 . -11) (undo-tree-id3222 . -11) (undo-tree-id3223 . -11) (undo-tree-id3224 . -11) (undo-tree-id3225 . -11) (undo-tree-id3226 . -11) (undo-tree-id3227 . -11) (undo-tree-id3228 . -11) (undo-tree-id3229 . -11) (undo-tree-id3230 . -11) (undo-tree-id3231 . -11) (undo-tree-id3232 . -11) (undo-tree-id3233 . -11) (undo-tree-id3234 . -11) (undo-tree-id3235 . -11) (undo-tree-id3236 . -11) (undo-tree-id3237 . -11) (undo-tree-id3238 . -11) (undo-tree-id3239 . -11) (undo-tree-id3240 . -11) (undo-tree-id3241 . -11) (undo-tree-id3242 . -11) (undo-tree-id3243 . -11) (undo-tree-id3244 . -11) (undo-tree-id3245 . -11) (undo-tree-id3246 . -11) (undo-tree-id3247 . -11) (undo-tree-id3248 . -11) (undo-tree-id3249 . -11) (undo-tree-id3250 . -11) (undo-tree-id3251 . -11) (undo-tree-id3252 . -11) (undo-tree-id3253 . -11) (undo-tree-id3254 . -11) (undo-tree-id3255 . -11) (undo-tree-id3256 . -11) (undo-tree-id3257 . -11) (undo-tree-id3258 . -11) (undo-tree-id3259 . -11) (undo-tree-id3260 . -11) (undo-tree-id3261 . -11) (undo-tree-id3262 . -11) (undo-tree-id3263 . -11) (undo-tree-id3264 . -11) (undo-tree-id3265 . -11) (undo-tree-id3266 . -11) (undo-tree-id3267 . -11) (undo-tree-id3268 . -11) (undo-tree-id3269 . -11) (undo-tree-id3270 . -11) (undo-tree-id3271 . -11) (undo-tree-id3272 . -11) (undo-tree-id3273 . -11) (undo-tree-id3274 . -11) (undo-tree-id3275 . -11) (undo-tree-id3276 . -11) (undo-tree-id3277 . -11) (undo-tree-id3278 . -11) (undo-tree-id3279 . -11) (undo-tree-id3280 . -11) (undo-tree-id3281 . -11) (undo-tree-id3282 . -11) (undo-tree-id3283 . -11) (undo-tree-id3284 . -11) (undo-tree-id3285 . -11) (undo-tree-id3286 . -11) (undo-tree-id3287 . -11) (undo-tree-id3288 . -11) (undo-tree-id3289 . -11) (undo-tree-id3290 . -11) (undo-tree-id3291 . -11) (undo-tree-id3292 . -11) (undo-tree-id3293 . -11) (undo-tree-id3294 . -11) (undo-tree-id3295 . -11) (undo-tree-id3296 . -11) (undo-tree-id3297 . -11) (undo-tree-id3298 . -11) (undo-tree-id3299 . -11) (undo-tree-id3300 . -11) (undo-tree-id3301 . -11) (undo-tree-id3302 . -11) (undo-tree-id3303 . -11) (undo-tree-id3304 . -11) (undo-tree-id3305 . -11) (undo-tree-id3306 . -11) (undo-tree-id3307 . -11) (undo-tree-id3308 . -11) (undo-tree-id3309 . -11) (undo-tree-id3310 . -11) (undo-tree-id3311 . -11) (undo-tree-id3312 . -11) (undo-tree-id3313 . -11) (undo-tree-id3314 . -11) (undo-tree-id3315 . -11) (undo-tree-id3316 . -11) (undo-tree-id3317 . -11) (undo-tree-id3318 . -11) (undo-tree-id3319 . -11) (undo-tree-id3320 . -11) (undo-tree-id3321 . -11) (undo-tree-id3322 . -11) (undo-tree-id3323 . -11) (undo-tree-id3324 . -11) (undo-tree-id3325 . -11) (undo-tree-id3326 . -11) (undo-tree-id3327 . -11) (undo-tree-id3328 . -11) (undo-tree-id3329 . -11) (undo-tree-id3330 . -11) (undo-tree-id3331 . -11) (undo-tree-id3332 . -11) (undo-tree-id3333 . -11) (undo-tree-id3334 . -11) (t 26489 27328 718755 593000)) (26489 27328 711546 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 674 . 675) (#("
" 0 1 (fontified nil)) . -692) (674 . 693)) ((#("
\\pagestyle{fancy}
" 0 1 (rear-nonsticky nil fontified nil) 1 2 (face font-lock-keyword-face fontified nil) 2 11 (face font-lock-keyword-face fontified nil) 11 12 (fontified nil) 12 17 (fontified nil) 17 18 (fontified nil) 18 19 (fontified nil)) . 674) (undo-tree-id3098 . -1) (undo-tree-id3099 . -18) (undo-tree-id3100 . -1) (undo-tree-id3101 . -1) (undo-tree-id3102 . -1) (undo-tree-id3103 . -1) (692 . 693) (nil rear-nonsticky t 674 . 675)) (26489 27297 842592 284000) 0 nil])
nil
nil
([nil nil ((675 . 677) (#("i" 0 1 (fontified nil)) . 675) (675 . 676) (#("yn" 0 1 (fontified nil) 1 2 (fontified nil)) . 675) (672 . 677) (#("fancy" 0 5 (fontified t)) . 672) (undo-tree-id2727 . -4)) ((672 . 677) (#("playn" 0 3 (fontified nil) 3 4 (fontified nil) 4 5 (fontified nil)) . 672) (undo-tree-id2728 . -3) (675 . 677) (#("i" 0 1 (fontified nil)) . 675) (675 . 676) (#("in" 0 2 (fontified t)) . 675) (undo-tree-id2729 . -1) (t 26489 27048 790725 42000)) (26489 27047 894805 231000) 0 nil])
nil
nil
nil
([nil nil ((672 . 677) (#("plain" 0 5 (fontified t)) . 672) (undo-tree-id2389 . -4) (undo-tree-id2390 . -4) (undo-tree-id2391 . -4) (undo-tree-id2392 . -4) (undo-tree-id2393 . -4) (undo-tree-id2394 . -4) (undo-tree-id2395 . -4) (undo-tree-id2396 . -4) (undo-tree-id2397 . -4) (undo-tree-id2398 . -4) (undo-tree-id2399 . -4) (undo-tree-id2400 . -4) (undo-tree-id2401 . -4) (undo-tree-id2402 . -4) (undo-tree-id2403 . -4) (undo-tree-id2404 . -4) (undo-tree-id2405 . -4) (undo-tree-id2406 . -4) (undo-tree-id2407 . -4) (undo-tree-id2408 . -4) (undo-tree-id2409 . -4) (undo-tree-id2410 . -4) (undo-tree-id2411 . -4) (undo-tree-id2412 . -4) (undo-tree-id2413 . -4) (undo-tree-id2414 . -4) (undo-tree-id2415 . -4) (undo-tree-id2416 . -4) (undo-tree-id2417 . -4) (undo-tree-id2418 . -4) (undo-tree-id2419 . -4) (undo-tree-id2420 . -4) (undo-tree-id2421 . -4) (undo-tree-id2422 . -4) (undo-tree-id2423 . -4) (undo-tree-id2424 . -4) (undo-tree-id2425 . -4) (undo-tree-id2426 . -4) (undo-tree-id2427 . -4) (undo-tree-id2428 . -4) (undo-tree-id2429 . -4) (undo-tree-id2430 . -4) (undo-tree-id2431 . -4) (undo-tree-id2432 . -4) (undo-tree-id2433 . -4) (undo-tree-id2434 . -4) (undo-tree-id2435 . -4) (undo-tree-id2436 . -4) (undo-tree-id2437 . -4) (undo-tree-id2438 . -4) (undo-tree-id2439 . -4) (undo-tree-id2440 . -4) (undo-tree-id2441 . -4) (undo-tree-id2442 . -4) (undo-tree-id2443 . -4) (undo-tree-id2444 . -4) (undo-tree-id2445 . -4) (undo-tree-id2446 . -4) (undo-tree-id2447 . -4) (undo-tree-id2448 . -3) (undo-tree-id2449 . -3) (undo-tree-id2450 . -3) (undo-tree-id2451 . -3) (undo-tree-id2452 . -3) (undo-tree-id2453 . -3) (undo-tree-id2454 . -3) (undo-tree-id2455 . -3) (undo-tree-id2456 . -3) (undo-tree-id2457 . -3) (undo-tree-id2458 . -2) (undo-tree-id2459 . -2) (undo-tree-id2460 . -2) (undo-tree-id2461 . -2) (undo-tree-id2462 . -2) (undo-tree-id2463 . -2) (undo-tree-id2464 . -2) (undo-tree-id2465 . -2) (undo-tree-id2466 . -2) (undo-tree-id2467 . -2) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -4) (undo-tree-id2479 . -5) (undo-tree-id2480 . -5) (t 26489 27015 501078 67000)) ((672 . 677) (#("fancy" 0 5 (fontified t)) . 672) (undo-tree-id2481 . -4) (undo-tree-id2482 . -4) (undo-tree-id2483 . -4) (undo-tree-id2484 . -4) (undo-tree-id2485 . -4) (undo-tree-id2486 . -4) (undo-tree-id2487 . -4) (undo-tree-id2488 . -4) (undo-tree-id2489 . -4) (undo-tree-id2490 . -4) (undo-tree-id2491 . -4) (undo-tree-id2492 . -4) (undo-tree-id2493 . -4) (undo-tree-id2494 . -4) (undo-tree-id2495 . -4) (undo-tree-id2496 . -4) (undo-tree-id2497 . -4) (undo-tree-id2498 . -4) (undo-tree-id2499 . -4) (undo-tree-id2500 . -4) (undo-tree-id2501 . -4) (undo-tree-id2502 . -4) (undo-tree-id2503 . -4) (undo-tree-id2504 . -4) (undo-tree-id2505 . -4) (undo-tree-id2506 . -4) (undo-tree-id2507 . -4) (undo-tree-id2508 . -4) (undo-tree-id2509 . -4) (undo-tree-id2510 . -4) (undo-tree-id2511 . -4) (undo-tree-id2512 . -4) (undo-tree-id2513 . -4) (undo-tree-id2514 . -4) (undo-tree-id2515 . -4) (undo-tree-id2516 . -4) (undo-tree-id2517 . -4) (undo-tree-id2518 . -4) (undo-tree-id2519 . -4) (undo-tree-id2520 . -4) (undo-tree-id2521 . -4) (undo-tree-id2522 . -4) (undo-tree-id2523 . -4) (undo-tree-id2524 . -4) (undo-tree-id2525 . -4) (undo-tree-id2526 . -4) (undo-tree-id2527 . -4) (undo-tree-id2528 . -4) (undo-tree-id2529 . -4) (undo-tree-id2530 . -4) (undo-tree-id2531 . -4) (undo-tree-id2532 . -4) (undo-tree-id2533 . -4) (undo-tree-id2534 . -4) (undo-tree-id2535 . -4) (undo-tree-id2536 . -4) (undo-tree-id2537 . -4) (undo-tree-id2538 . -4) (undo-tree-id2539 . -4) (undo-tree-id2540 . -4) (undo-tree-id2541 . -4) (undo-tree-id2542 . -4) (undo-tree-id2543 . -4) (undo-tree-id2544 . -4) (undo-tree-id2545 . -4) (undo-tree-id2546 . -4) (undo-tree-id2547 . -4) (undo-tree-id2548 . -4) (undo-tree-id2549 . -4) (undo-tree-id2550 . -4) (undo-tree-id2551 . -4) (undo-tree-id2552 . -4) (undo-tree-id2553 . -4) (undo-tree-id2554 . -4) (undo-tree-id2555 . -4) (undo-tree-id2556 . -4) (undo-tree-id2557 . -4) (undo-tree-id2558 . -4) (undo-tree-id2559 . -4) (undo-tree-id2560 . -4) (undo-tree-id2561 . -4) (undo-tree-id2562 . -4) (undo-tree-id2563 . -4) (undo-tree-id2564 . -4) (undo-tree-id2565 . -4) (undo-tree-id2566 . -4) (undo-tree-id2567 . -4) (undo-tree-id2568 . -4) (undo-tree-id2569 . -4) (undo-tree-id2570 . -4) (undo-tree-id2571 . -4) (undo-tree-id2572 . -4) (undo-tree-id2573 . -4) (undo-tree-id2574 . -4) (undo-tree-id2575 . -4) (undo-tree-id2576 . -4) (t 26489 27039 314825 540000)) (26489 27039 307476 629000) 0 nil])
nil
