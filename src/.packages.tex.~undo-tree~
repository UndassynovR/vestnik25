(undo-tree-save-format-version . 1)
"6e6892c1ae1b08dd67187700e5b166d16bbfd36b"
[nil nil nil nil (26472 62668 172775 39000) 0 nil]
([nil nil ((5743 . 7213) (#("\\newenvironment{noparindent}{%
  \\setlength{\\parindent}{0pt}%
}{%
  \\setlength{\\parindent}{2pt}%
}
% Define the aliases for superscript and subscript
\\newcommand{\\tsp}[1]{\\textsuperscript{#1}}
\\newcommand{\\tsb}[1]{\\textsubscript{#1}}

\\usepackage{makecell}

\\newcommand{\\envelope}{\\textsuperscript{\\includegraphics[width=1em]{media/envelope}}}


\\titleformat{\\section}[block]{\\normalfont\\centering\\fontsize{11}{13}\\selectfont\\bfseries}{}{0pt}{}

\\titlespacing{\\section}{0pt}{1em}{1em}

\\newcommand{\\smal}{\\fontsize{11}{13}\\selectfont}

\\newenvironment{authors}{
    \\begin{center}
    \\fontsize{11}{13}\\selectfont
    \\bfseries
}{
    \\vspace{-\\baselineskip}
    \\end{center}
}

\\newenvironment{affiliations}{%
  \\begin{center}
    \\fontsize{10}{12}\\selectfont
}{%
  \\end{center}
}

\\newcommand{\\sectionheading}[1]{%
  \\begin{center}
    {\\fontsize{11}{13}\\selectfont\\textbf{#1}}%
  \\end{center}
}

\\usepackage{listings}
\\lstset{
    language=Python,  % You can set the language, or leave it for generic code
    basicstyle=\\ttfamily\\small, % Use a monospaced font with smaller size
    keywordstyle=\\color{blue}, % Color keywords
    commentstyle=\\color{gray}, % Color comments
    stringstyle=\\color{red}, % Color strings
    numbers=none, % Disable line numbers
    tabsize=4, % Set tab size
    breaklines=true, % Automatically break long lines
}

% Define a new column type 'C' for centered p columns
\\newcolumntype{C}[1]{>{\\centering\\arraybackslash}p{#1}} 

% Hyphentation penalty
\\hyphenpenalty=5000
\\exhyphenpenalty=5000" 0 1528 (fontified nil)) . 5743) (t 26472 61310 583290 896000)) nil (26472 62668 172774 178000) 0 nil])
([nil nil ((#("blue!80!" 0 8 (fontified t)) . 2485) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -3) (undo-tree-id23 . -3) (undo-tree-id24 . -3) (undo-tree-id25 . -3) (undo-tree-id26 . -3) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -5) (undo-tree-id33 . -5) (undo-tree-id34 . -5) (undo-tree-id35 . -5) (undo-tree-id36 . -5) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -7) (undo-tree-id43 . -7) (undo-tree-id44 . -7) (undo-tree-id45 . -7) (undo-tree-id46 . -7) (undo-tree-id47 . -7) (undo-tree-id48 . -7) (undo-tree-id49 . -7) (undo-tree-id50 . -7) (undo-tree-id51 . -7) (undo-tree-id52 . -7) (undo-tree-id53 . -7) (undo-tree-id54 . -7) (undo-tree-id55 . -7) (undo-tree-id56 . -7) (undo-tree-id57 . -7) (undo-tree-id58 . -7) (undo-tree-id59 . -7) (undo-tree-id60 . -7) (undo-tree-id61 . -7) (undo-tree-id62 . -7) (undo-tree-id63 . -7) (undo-tree-id64 . -8) (undo-tree-id65 . -7) 2492 (t 26472 62480 751339 40000)) nil (26472 62668 172770 188000) 0 nil])
([nil nil ((7206 . 7207) (t 26472 62668 223750 50000) 7206) nil (26472 63479 780382 580000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7227 . 7228) (nil fontified nil 7207 . 7228) (7207 . 7228)) nil (26473 184 24903 907000) 0 nil])
([nil nil ((7228 . 7229)) ((#("
" 0 1 (fontified t)) . 7228)) (26473 196 226355 512000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -7050) (undo-tree-id320 . -4) (undo-tree-id321 . -4) (undo-tree-id322 . -4) (undo-tree-id323 . -4) (undo-tree-id324 . -4) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) (undo-tree-id328 . -4) (undo-tree-id329 . -4) (undo-tree-id330 . -4) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) 7054 (7049 . 7054) 7006) nil (26473 198 257345 729000) 0 nil] [nil nil ((nil rear-nonsticky nil 7056 . 7057) (nil fontified nil 7007 . 7057) (7007 . 7057) 7006) ((#("    \\vspace{-\\baselineskip} % Reduces bottom space" 0 4 (fontified nil) 4 11 (face font-lock-keyword-face fontified nil) 11 13 (fontified nil) 13 26 (face font-lock-keyword-face fontified nil) 26 28 (fontified nil) 28 49 (face font-lock-comment-face fontified nil) 49 50 (face font-lock-comment-face rear-nonsticky nil fontified nil)) . 7007) (undo-tree-id315 . -49) (undo-tree-id316 . -49) (undo-tree-id317 . -49) (undo-tree-id318 . -49) (undo-tree-id319 . -49) (nil rear-nonsticky t 7056 . 7057)) (26473 196 226267 859000) 0 nil] [nil nil ((nil rear-nonsticky nil 6975 . 6976) (#("
" 0 1 (fontified nil)) . 7095) (6975 . 7096)) ((#("
\\newenvironment{articleheader}{
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont\\centering%
}{%
    \\end{center}%
}
" 0 1 (rear-nonsticky nil fontified nil) 1 16 (face font-lock-keyword-face fontified nil) 16 17 (fontified nil) 17 30 (face font-lock-function-name-face fontified nil) 30 33 (fontified nil) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (fontified t latex-env-pair t) 44 50 (face font-lock-function-name-face fontified t latex-env-pair t) 50 51 (fontified t latex-env-pair t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 95 (face font-lock-keyword-face fontified t) 95 97 (face font-lock-comment-face fontified t) 97 99 (fontified t) 99 101 (face font-lock-comment-face fontified t) 101 105 (fontified t) 105 109 (face font-lock-keyword-face fontified t) 109 110 (fontified t latex-env-pair t) 110 116 (face font-lock-function-name-face fontified t latex-env-pair t) 116 117 (fontified t latex-env-pair t) 117 119 (face font-lock-comment-face fontified t) 119 120 (fontified nil) 120 121 (fontified nil)) . 6975) (undo-tree-id285 . -119) (undo-tree-id286 . -1) (undo-tree-id287 . -120) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -119) (undo-tree-id291 . -119) (undo-tree-id292 . -119) (undo-tree-id293 . -119) (undo-tree-id294 . -119) (undo-tree-id295 . -119) (undo-tree-id296 . -119) (undo-tree-id297 . -119) (undo-tree-id298 . -119) (undo-tree-id299 . -119) (undo-tree-id300 . -119) (undo-tree-id301 . -119) (undo-tree-id302 . -119) (undo-tree-id303 . -119) (undo-tree-id304 . -119) (undo-tree-id305 . -119) (undo-tree-id306 . -119) (undo-tree-id307 . -119) (undo-tree-id308 . -119) (undo-tree-id309 . -119) (undo-tree-id310 . -119) (undo-tree-id311 . -119) (undo-tree-id312 . -1) (undo-tree-id313 . -119) (undo-tree-id314 . -119) (7095 . 7096) (nil rear-nonsticky t 6975 . 6976)) (26473 185 769064 624000) 0 nil] [nil nil ((nil rear-nonsticky nil 7015 . 7016) (nil fontified nil 6855 . 7016) (6855 . 7016) (#("\\newenvironment{articleheader}{
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont\\centering%
}{%
    \\end{center}%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 36 (fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 43 (latex-env-pair t fontified t) 43 49 (face font-lock-function-name-face latex-env-pair t fontified t) 49 50 (latex-env-pair t fontified t) 50 52 (face font-lock-comment-face fontified t) 52 56 (fontified t) 56 65 (face font-lock-keyword-face fontified t) 65 73 (fontified t) 73 84 (face font-lock-keyword-face fontified t) 84 94 (face font-lock-keyword-face fontified t) 94 96 (face font-lock-comment-face fontified t) 96 98 (fontified t) 98 100 (face font-lock-comment-face fontified t) 100 104 (fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 109 (latex-env-pair t fontified t) 109 115 (face font-lock-function-name-face latex-env-pair t fontified t) 115 116 (latex-env-pair t fontified t) 116 118 (face font-lock-comment-face fontified t) 118 120 (fontified t)) . 6855) (undo-tree-id66 . -120) (undo-tree-id67 . -118) (undo-tree-id68 . -119) (undo-tree-id69 . -118) (undo-tree-id70 . -118) (undo-tree-id71 . -118) (undo-tree-id72 . -32) (undo-tree-id73 . -32) (undo-tree-id74 . -32) (undo-tree-id75 . -32) (undo-tree-id76 . -32) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -32) (undo-tree-id80 . -32) (undo-tree-id81 . -32) (undo-tree-id82 . -32) (undo-tree-id83 . -32) (undo-tree-id84 . -32) (undo-tree-id85 . -32) (undo-tree-id86 . -32) (undo-tree-id87 . -32) (undo-tree-id88 . -32) (undo-tree-id89 . -52) (undo-tree-id90 . -52) (undo-tree-id91 . -52) (undo-tree-id92 . -52) (undo-tree-id93 . -52) (undo-tree-id94 . -96) (undo-tree-id95 . -96) (undo-tree-id96 . -96) (undo-tree-id97 . -96) (undo-tree-id98 . -96) (undo-tree-id99 . -100) (undo-tree-id100 . -100) (undo-tree-id101 . -100) (undo-tree-id102 . -100) (undo-tree-id103 . -100) (undo-tree-id104 . -100) (undo-tree-id105 . -100) (undo-tree-id106 . -100) (undo-tree-id107 . -100) (undo-tree-id108 . -100) (undo-tree-id109 . -100) (undo-tree-id110 . -100) (undo-tree-id111 . -100) (undo-tree-id112 . -100) (undo-tree-id113 . -100) (undo-tree-id114 . -100) (undo-tree-id115 . -100) (undo-tree-id116 . -100) (undo-tree-id117 . -100) (undo-tree-id118 . -100) (undo-tree-id119 . -118) (undo-tree-id120 . -118) (undo-tree-id121 . -118) (undo-tree-id122 . -118) (undo-tree-id123 . -118) (undo-tree-id124 . -118) (undo-tree-id125 . -118) (undo-tree-id126 . -118) (undo-tree-id127 . -118) (undo-tree-id128 . -118) (undo-tree-id129 . -118) (undo-tree-id130 . -118) (undo-tree-id131 . -118) (undo-tree-id132 . -118) (undo-tree-id133 . -118) (undo-tree-id134 . -118) (undo-tree-id135 . -118) (undo-tree-id136 . -120) (undo-tree-id137 . -120) 6975 (t 26472 63479 831627 891000)) ((6855 . 6975) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont
    \\vspace{-\\baselineskip} % Reduces bottom space
}{%
    \\end{center}%
}
" 0 15 (face font-lock-keyword-face fontified nil) 15 16 (fontified nil) 16 29 (face font-lock-function-name-face fontified nil) 29 31 (fontified nil) 31 33 (face font-lock-comment-face fontified nil) 33 37 (fontified nil) 37 43 (face font-lock-keyword-face fontified nil) 43 44 (latex-env-pair t fontified nil) 44 50 (face font-lock-function-name-face latex-env-pair t fontified nil) 50 51 (latex-env-pair t fontified nil) 51 53 (face font-lock-comment-face fontified nil) 53 57 (fontified nil) 57 66 (face font-lock-keyword-face fontified nil) 66 74 (fontified nil) 74 85 (face font-lock-keyword-face fontified nil) 85 90 (fontified nil) 90 97 (face font-lock-keyword-face fontified nil) 97 99 (fontified nil) 99 112 (face font-lock-keyword-face fontified nil) 112 114 (fontified nil) 114 137 (face font-lock-comment-face fontified nil) 137 139 (fontified nil) 139 141 (face font-lock-comment-face fontified nil) 141 145 (fontified nil) 145 149 (face font-lock-keyword-face fontified nil) 149 150 (latex-env-pair t fontified nil) 150 156 (face font-lock-function-name-face latex-env-pair t fontified nil) 156 157 (latex-env-pair t fontified nil) 157 159 (face font-lock-comment-face fontified nil) 159 160 (fontified nil) 160 161 (rear-nonsticky nil fontified nil)) . 6855) (undo-tree-id138 . -159) (undo-tree-id139 . -160) (undo-tree-id140 . -160) (undo-tree-id141 . -159) (undo-tree-id142 . -159) (undo-tree-id143 . -159) (undo-tree-id144 . -159) (undo-tree-id145 . -159) (undo-tree-id146 . -159) (undo-tree-id147 . -159) (undo-tree-id148 . -159) (undo-tree-id149 . -159) (undo-tree-id150 . -159) (undo-tree-id151 . -159) (undo-tree-id152 . -159) (undo-tree-id153 . -159) (undo-tree-id154 . -159) (undo-tree-id155 . -159) (undo-tree-id156 . -159) (undo-tree-id157 . -159) (undo-tree-id158 . -159) (undo-tree-id159 . -159) (undo-tree-id160 . -159) (undo-tree-id161 . -159) (undo-tree-id162 . -159) (undo-tree-id163 . -159) (undo-tree-id164 . -159) (undo-tree-id165 . -159) (undo-tree-id166 . -159) (undo-tree-id167 . -159) (undo-tree-id168 . -159) (undo-tree-id169 . -159) (undo-tree-id170 . -159) (undo-tree-id171 . -159) (undo-tree-id172 . -159) (undo-tree-id173 . -159) (undo-tree-id174 . -159) (undo-tree-id175 . -159) (undo-tree-id176 . -159) (undo-tree-id177 . -159) (undo-tree-id178 . -159) (undo-tree-id179 . -159) (undo-tree-id180 . -159) (undo-tree-id181 . -159) (undo-tree-id182 . -159) (undo-tree-id183 . -159) (undo-tree-id184 . -159) (undo-tree-id185 . -159) (undo-tree-id186 . -159) (undo-tree-id187 . -159) (undo-tree-id188 . -159) (undo-tree-id189 . -159) (undo-tree-id190 . -159) (undo-tree-id191 . -159) (undo-tree-id192 . -159) (undo-tree-id193 . -159) (undo-tree-id194 . -159) (undo-tree-id195 . -159) (undo-tree-id196 . -159) (undo-tree-id197 . -159) (undo-tree-id198 . -159) (undo-tree-id199 . -159) (undo-tree-id200 . -159) (undo-tree-id201 . -159) (undo-tree-id202 . -159) (undo-tree-id203 . -159) (undo-tree-id204 . -159) (undo-tree-id205 . -159) (undo-tree-id206 . -159) (undo-tree-id207 . -159) (undo-tree-id208 . -159) (undo-tree-id209 . -159) (undo-tree-id210 . -159) (undo-tree-id211 . -159) (undo-tree-id212 . -159) (undo-tree-id213 . -159) (undo-tree-id214 . -159) (undo-tree-id215 . -159) (undo-tree-id216 . -159) (undo-tree-id217 . -159) (undo-tree-id218 . -159) (undo-tree-id219 . -159) (undo-tree-id220 . -159) (undo-tree-id221 . -159) (undo-tree-id222 . -159) (undo-tree-id223 . -159) (undo-tree-id224 . -159) (undo-tree-id225 . -159) (undo-tree-id226 . -159) (undo-tree-id227 . -159) (undo-tree-id228 . -159) (undo-tree-id229 . -159) (undo-tree-id230 . -159) (undo-tree-id231 . -159) (undo-tree-id232 . -159) (undo-tree-id233 . -159) (undo-tree-id234 . -159) (undo-tree-id235 . -159) (undo-tree-id236 . -159) (undo-tree-id237 . -159) (undo-tree-id238 . -159) (undo-tree-id239 . -159) (undo-tree-id240 . -159) (undo-tree-id241 . -159) (undo-tree-id242 . -159) (undo-tree-id243 . -159) (undo-tree-id244 . -159) (undo-tree-id245 . -159) (undo-tree-id246 . -159) (undo-tree-id247 . -159) (undo-tree-id248 . -159) (undo-tree-id249 . -159) (undo-tree-id250 . -159) (undo-tree-id251 . -159) (undo-tree-id252 . -159) (undo-tree-id253 . -159) (undo-tree-id254 . -159) (undo-tree-id255 . -159) (undo-tree-id256 . -159) (undo-tree-id257 . -159) (undo-tree-id258 . -159) (undo-tree-id259 . -159) (undo-tree-id260 . -159) (undo-tree-id261 . -159) (undo-tree-id262 . -159) (undo-tree-id263 . -159) (undo-tree-id264 . -159) (undo-tree-id265 . -159) (undo-tree-id266 . -159) (undo-tree-id267 . -159) (undo-tree-id268 . -159) (undo-tree-id269 . -159) (undo-tree-id270 . -159) (undo-tree-id271 . -159) (undo-tree-id272 . -159) (undo-tree-id273 . -159) (undo-tree-id274 . -159) (undo-tree-id275 . -159) (undo-tree-id276 . -159) (undo-tree-id277 . -159) (nil fontified t 7012 . 7014) (nil fontified t 7011 . 7012) (nil fontified t 7005 . 7011) (nil fontified t 7004 . 7005) (nil fontified t 7000 . 7004) (nil fontified t 6996 . 7000) (nil fontified t 6994 . 6996) (nil fontified t 6992 . 6994) (nil fontified t 6969 . 6992) (nil fontified t 6967 . 6969) (nil fontified t 6954 . 6967) (nil fontified t 6952 . 6954) (nil fontified t 6945 . 6952) (nil fontified t 6940 . 6945) (nil fontified t 6929 . 6940) (nil fontified t 6921 . 6929) (nil fontified t 6912 . 6921) (nil fontified t 6908 . 6912) (nil fontified t 6906 . 6908) (nil fontified t 6905 . 6906) (nil fontified t 6899 . 6905) (nil fontified t 6898 . 6899) (nil fontified t 6892 . 6898) (nil fontified t 6888 . 6892) (nil fontified t 6886 . 6888) (nil fontified t 6884 . 6886) (nil fontified t 6871 . 6884) (nil fontified t 6870 . 6871) (nil fontified t 6855 . 6870) (nil rear-nonsticky t 7015 . 7016) (t 26473 171 104739 242000)) (26473 171 34083 12000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7099 . 7100) (nil fontified nil 7050 . 7100) (7050 . 7100)) nil (26473 198 257321 158000) 0 nil])
nil
nil
nil
([nil nil ((7063 . 7066) (t 26473 198 311932 552000)) nil (26473 242 743529 988000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 7063) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (t 26473 243 267599 523000)) nil (26473 524 548278 535000) 0 nil] [nil nil ((#("0" 0 1 (fontified t)) . 7063) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (t 26473 223 594182 894000)) ((7063 . 7064)) (26473 242 248247 435000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7063) (undo-tree-id491 . -1) (undo-tree-id492 . -1)) nil (26473 524 548275 406000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7063) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1)) ((7063 . 7064) (t 26473 237 458771 775000)) (26473 237 423934 913000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 7063) (undo-tree-id489 . -1) (undo-tree-id490 . -1)) nil (26473 524 548270 469000) 0 nil])
nil
([nil nil ((7063 . 7065) (t 26473 524 584426 644000)) nil (26473 539 165609 746000) 0 nil])
([nil nil ((#(">" 0 1 (fontified t)) . -7064) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) 7065) nil (26473 539 165608 600000) 0 nil])
([nil nil ((7064 . 7066)) nil (26473 539 165583 655000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . -7065) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) 7066 (t 26473 539 216003 855000)) nil (26473 552 294822 299000) 0 nil])
([nil nil ((7065 . 7066)) nil (26473 606 76673 825000) 0 nil])
([nil nil ((7024 . 7065) (#("12}\\selectfont\\centering%
    \\vspace{-0.6" 3 14 (face font-lock-keyword-face) 14 24 (face font-lock-keyword-face) 24 25 (face font-lock-comment-face) 25 26 (face font-lock-comment-face) 30 37 (face font-lock-keyword-face)) . 7024) (undo-tree-id3 . -26) (undo-tree-id4 . -39) (undo-tree-id5 . -39) (t 26473 606 837049 449000)) nil (26473 4780 748954 361000) 0 nil] [nil nil ((5308 . 5313) (#("small" 0 5 (fontified t)) . 5308) (undo-tree-id720 . -4) (undo-tree-id721 . -5) (undo-tree-id722 . -5) (t 26473 552 314625 334000)) ((5308 . 5313) (#("large" 0 5 (fontified t)) . 5308) (undo-tree-id723 . -4) (undo-tree-id724 . -4) (undo-tree-id725 . -4) (undo-tree-id726 . -4) (undo-tree-id727 . -4) (undo-tree-id728 . -4) (undo-tree-id729 . -4) (undo-tree-id730 . -4) (undo-tree-id731 . -4) (undo-tree-id732 . -4) (undo-tree-id733 . -4) (undo-tree-id734 . -4) (undo-tree-id735 . -4) (undo-tree-id736 . -4) (undo-tree-id737 . -4) (undo-tree-id738 . -4) (undo-tree-id739 . -4) (undo-tree-id740 . -4) (undo-tree-id741 . -4) (undo-tree-id742 . -4) (undo-tree-id743 . -4) (undo-tree-id744 . -4) (undo-tree-id745 . -4) (undo-tree-id746 . -4) (undo-tree-id747 . -4) (undo-tree-id748 . -4) (undo-tree-id749 . -4) (undo-tree-id750 . -4) (undo-tree-id751 . -4) (undo-tree-id752 . -4) (undo-tree-id753 . -4) (undo-tree-id754 . -4) (undo-tree-id755 . -4) (undo-tree-id756 . -4) (undo-tree-id757 . -4) (undo-tree-id758 . -4) (undo-tree-id759 . -4) (undo-tree-id760 . -4) (undo-tree-id761 . -4) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (t 26473 604 987102 928000)) (26473 604 936325 129000) 0 nil])
([nil nil ((7024 . 7025) (#("6" 0 1 (fontified t)) . -7024) (undo-tree-id2 . -1) 7025 (t 26473 4690 959699 650000)) nil (26473 4780 748951 121000) 0 nil])
nil
([nil nil ((#("    \\vspace{-1.3\\baselineskip} % Reduces bottom space
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 16 (fontified t) 16 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face fontified t rear-nonsticky t) 53 54 (face font-lock-comment-face fontified t)) . 7049) (undo-tree-id0 . -53) (undo-tree-id1 . -12) 7061) nil (26473 4780 748948 860000) 0 nil])
([nil nil ((nil rear-nonsticky nil 6954 . 6955) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -7004) (6950 . 7005) 6909) nil (26473 4780 748925 784000) 0 nil])
([nil nil ((#("    \\vspace{-1.3\\baselineskip} % Reduces bottom space
" 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 16 (fontified t) 16 29 (face font-lock-keyword-face fontified t) 29 31 (fontified t) 31 52 (face font-lock-comment-face fontified t) 52 53 (face font-lock-comment-face fontified t rear-nonsticky t) 53 54 (face font-lock-comment-face fontified t)) . 6951) (undo-tree-id55 . -53) (undo-tree-id56 . -4) (undo-tree-id57 . -11) 6962 (t 26473 4780 811074 583000)) nil (26473 4827 264442 255000) 0 nil])
([nil nil ((7024 . 7026) (#("6" 0 1 (fontified t)) . -7024) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 7025) nil (26473 4827 264329 89000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7225 . 7226) (nil fontified nil 6855 . 7226) (6855 . 7226) (#("\\newenvironment{articleheader}{
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont\\centering%
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{
    \\fontsize{10}{12}\\selectfont\\centering%
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 35 (fontified t) 35 36 (fontified t) 36 42 (face font-lock-keyword-face fontified t) 42 43 (fontified t latex-env-pair t) 43 49 (face font-lock-function-name-face fontified t latex-env-pair t) 49 50 (fontified t latex-env-pair t) 50 52 (face font-lock-comment-face fontified t) 52 56 (fontified t) 56 65 (face font-lock-keyword-face fontified t) 65 73 (fontified t) 73 84 (face font-lock-keyword-face fontified t) 84 94 (face font-lock-keyword-face fontified t) 94 95 (face font-lock-comment-face fontified t) 95 96 (face font-lock-comment-face fontified t) 96 98 (fontified t) 98 99 (face font-lock-comment-face fontified t) 99 100 (face font-lock-comment-face fontified t) 100 104 (fontified t) 104 108 (face font-lock-keyword-face fontified t) 108 109 (fontified t latex-env-pair t) 109 115 (face font-lock-function-name-face fontified t latex-env-pair t) 115 116 (fontified t latex-env-pair t) 116 118 (face font-lock-comment-face fontified t) 118 120 (fontified t) 120 121 (fontified t) 121 136 (face font-lock-keyword-face fontified t) 136 137 (fontified t) 137 148 (face font-lock-function-name-face fontified t) 148 151 (fontified t) 151 152 (fontified t) 152 155 (fontified t) 155 164 (face font-lock-keyword-face fontified t) 164 171 (fontified t) 171 172 (fontified t) 172 183 (face font-lock-keyword-face fontified t) 183 193 (face font-lock-keyword-face fontified t) 193 195 (face font-lock-comment-face fontified t) 195 197 (fontified t) 197 198 (face font-lock-comment-face fontified t) 198 199 (face font-lock-comment-face fontified t) 199 203 (fontified t) 203 207 (face font-lock-keyword-face fontified t) 207 209 (face font-lock-comment-face fontified t) 209 211 (fontified t)) . 6855) (undo-tree-id58 . -211) (undo-tree-id59 . -209) (undo-tree-id60 . -210) (undo-tree-id61 . -118) (undo-tree-id62 . 40) (undo-tree-id63 . -120) (undo-tree-id64 . -120) (undo-tree-id65 . -120) (undo-tree-id66 . -152) (undo-tree-id67 . -152) (undo-tree-id68 . -169) (undo-tree-id69 . -169) (undo-tree-id70 . -169) (undo-tree-id71 . -209) (undo-tree-id72 . -32) (undo-tree-id73 . -32) (undo-tree-id74 . -32) (undo-tree-id75 . -32) (undo-tree-id76 . -32) (undo-tree-id77 . -32) (undo-tree-id78 . -32) (undo-tree-id79 . -32) (undo-tree-id80 . -32) (undo-tree-id81 . -32) (undo-tree-id82 . -32) (undo-tree-id83 . -32) (undo-tree-id84 . -32) (undo-tree-id85 . -32) (undo-tree-id86 . -32) (undo-tree-id87 . -32) (undo-tree-id88 . -32) (undo-tree-id89 . -52) (undo-tree-id90 . -52) (undo-tree-id91 . -52) (undo-tree-id92 . -52) (undo-tree-id93 . -52) (undo-tree-id94 . -96) (undo-tree-id95 . -96) (undo-tree-id96 . -96) (undo-tree-id97 . -96) (undo-tree-id98 . -96) (undo-tree-id99 . -100) (undo-tree-id100 . -100) (undo-tree-id101 . -100) (undo-tree-id102 . -100) (undo-tree-id103 . -100) (undo-tree-id104 . -118) (undo-tree-id105 . -118) (undo-tree-id106 . -118) (undo-tree-id107 . -118) (undo-tree-id108 . -118) (undo-tree-id109 . -120) (undo-tree-id110 . -120) (undo-tree-id111 . -120) (undo-tree-id112 . -120) (undo-tree-id113 . -120) (undo-tree-id114 . -121) (undo-tree-id115 . -121) (undo-tree-id116 . -121) (undo-tree-id117 . -121) (undo-tree-id118 . -121) (undo-tree-id119 . -151) (undo-tree-id120 . -151) (undo-tree-id121 . -151) (undo-tree-id122 . -151) (undo-tree-id123 . -151) (undo-tree-id124 . -195) (undo-tree-id125 . -195) (undo-tree-id126 . -195) (undo-tree-id127 . -195) (undo-tree-id128 . -195) (undo-tree-id129 . -199) (undo-tree-id130 . -199) (undo-tree-id131 . -199) (undo-tree-id132 . -199) (undo-tree-id133 . -199) (undo-tree-id134 . -199) (undo-tree-id135 . -199) (undo-tree-id136 . -199) (undo-tree-id137 . -199) (undo-tree-id138 . -199) (undo-tree-id139 . -199) (undo-tree-id140 . -199) (undo-tree-id141 . -199) (undo-tree-id142 . -199) (undo-tree-id143 . -199) (undo-tree-id144 . -199) (undo-tree-id145 . -199) (undo-tree-id146 . -199) (undo-tree-id147 . -199) (undo-tree-id148 . -199) (undo-tree-id149 . -209) (undo-tree-id150 . -209) (undo-tree-id151 . -209) (undo-tree-id152 . -209) (undo-tree-id153 . -209) (undo-tree-id154 . -209) (undo-tree-id155 . -209) (undo-tree-id156 . -209) (undo-tree-id157 . -209) (undo-tree-id158 . -209) (undo-tree-id159 . -209) (undo-tree-id160 . -209) (undo-tree-id161 . -209) (undo-tree-id162 . -209) (undo-tree-id163 . -170) (undo-tree-id164 . -209) (undo-tree-id165 . -209) (undo-tree-id166 . -209) (undo-tree-id167 . -211) (undo-tree-id168 . -211) 7066 (t 26473 4827 307715 982000)) nil (26473 4886 590586 365000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7231 . 7232) (nil fontified nil 6855 . 7232) (6855 . 7232) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont
    \\vspace{-0.5em} % Reduces space after article header
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{%
    \\fontsize{10}{11}\\selectfont % Set smaller line height in affiliation
    \\centering
    \\vspace{-0.5em} % Reduces space between header and affiliation
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 50 (face font-lock-function-name-face latex-env-pair t fontified t) 50 51 (latex-env-pair t fontified t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 90 (fontified t) 90 97 (face font-lock-keyword-face fontified t) 97 106 (fontified t) 106 143 (face font-lock-comment-face fontified t) 143 145 (fontified t) 145 147 (face font-lock-comment-face fontified t) 147 151 (fontified t) 151 155 (face font-lock-keyword-face fontified t) 155 156 (latex-env-pair t fontified t) 156 162 (face font-lock-function-name-face latex-env-pair t fontified t) 162 163 (latex-env-pair t fontified t) 163 165 (face font-lock-comment-face fontified t) 165 168 (fontified t) 168 183 (face font-lock-keyword-face fontified t) 183 184 (fontified t) 184 195 (face font-lock-function-name-face fontified t) 195 197 (fontified t) 197 199 (face font-lock-comment-face fontified t) 199 203 (fontified t) 203 212 (face font-lock-keyword-face fontified t) 212 220 (fontified t) 220 231 (face font-lock-keyword-face fontified t) 231 232 (fontified t) 232 273 (face font-lock-comment-face fontified t) 273 277 (fontified t) 277 287 (face font-lock-keyword-face fontified t) 287 292 (fontified t) 292 299 (face font-lock-keyword-face fontified t) 299 308 (fontified t) 308 355 (face font-lock-comment-face fontified t) 355 357 (fontified t) 357 359 (face font-lock-comment-face fontified t) 359 363 (fontified t) 363 367 (face font-lock-keyword-face fontified t) 367 369 (face font-lock-comment-face fontified t) 369 370 (fontified t) 370 371 (rear-nonsticky t fontified t)) . 6855) (undo-tree-id169 . -371) (undo-tree-id170 . -369) (undo-tree-id171 . -370) (undo-tree-id172 . -369) (undo-tree-id173 . -371) (t 26473 4886 645982 1000)) nil (26473 4918 602247 421000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7293 . 7294) (nil fontified nil 6855 . 7294) (6855 . 7294) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{13}\\selectfont
    \\vspace{-1em} % Reduces space after article header
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{%
    \\fontsize{10}{10}\\selectfont % Set smaller line height in affiliation
    \\centering
    \\vspace{-1em} % Reduces space between header and affiliation even more
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 50 (face font-lock-function-name-face latex-env-pair t fontified t) 50 51 (latex-env-pair t fontified t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 90 (fontified t) 90 97 (face font-lock-keyword-face fontified t) 97 104 (fontified t) 104 141 (face font-lock-comment-face fontified t) 141 143 (fontified t) 143 145 (face font-lock-comment-face fontified t) 145 149 (fontified t) 149 153 (face font-lock-keyword-face fontified t) 153 154 (latex-env-pair t fontified t) 154 160 (face font-lock-function-name-face latex-env-pair t fontified t) 160 161 (latex-env-pair t fontified t) 161 163 (face font-lock-comment-face fontified t) 163 166 (fontified t) 166 181 (face font-lock-keyword-face fontified t) 181 182 (fontified t) 182 193 (face font-lock-function-name-face fontified t) 193 195 (fontified t) 195 197 (face font-lock-comment-face fontified t) 197 201 (fontified t) 201 210 (face font-lock-keyword-face fontified t) 210 218 (fontified t) 218 229 (face font-lock-keyword-face fontified t) 229 230 (fontified t) 230 271 (face font-lock-comment-face fontified t) 271 275 (fontified t) 275 285 (face font-lock-keyword-face fontified t) 285 290 (fontified t) 290 297 (face font-lock-keyword-face fontified t) 297 304 (fontified t) 304 361 (face font-lock-comment-face fontified t) 361 363 (fontified t) 363 365 (face font-lock-comment-face fontified t) 365 369 (fontified t) 369 373 (face font-lock-keyword-face fontified t) 373 375 (face font-lock-comment-face fontified t) 375 376 (fontified t) 376 377 (rear-nonsticky t fontified t)) . 6855) (undo-tree-id174 . -377) (undo-tree-id175 . -375) (undo-tree-id176 . -376) (undo-tree-id177 . -33) (undo-tree-id178 . -33) (undo-tree-id179 . -33) (undo-tree-id180 . -33) (undo-tree-id181 . -33) (undo-tree-id182 . -33) (undo-tree-id183 . -33) (undo-tree-id184 . -33) (undo-tree-id185 . -33) (undo-tree-id186 . -33) (undo-tree-id187 . -375) (undo-tree-id188 . -377) (t 26473 4918 669046 151000)) nil (26473 4982 929501 714000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7001) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1)) nil (26473 4988 560566 672000) 0 nil] [nil nil ((#("9" 0 1 (fontified t)) . -7125) (undo-tree-id190 . -1) (undo-tree-id192 . -1) (undo-tree-id194 . -1) (undo-tree-id196 . -1) (undo-tree-id198 . -1) (undo-tree-id200 . -1) (undo-tree-id202 . -1) (undo-tree-id204 . -1) (undo-tree-id206 . -1) (undo-tree-id208 . -1) (undo-tree-id210 . -1) (undo-tree-id212 . -1) (undo-tree-id214 . -1) (undo-tree-id216 . -1) (undo-tree-id218 . -1) (undo-tree-id220 . -1) (undo-tree-id222 . -1) (undo-tree-id224 . -1) (undo-tree-id226 . -1) (undo-tree-id228 . -1) (undo-tree-id230 . -1) (undo-tree-id232 . -1) (undo-tree-id234 . -1) (undo-tree-id236 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id241 . -1) 7126 (t 26473 4945 926249 542000)) ((7125 . 7126)) (26473 4982 481976 518000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 7001) (undo-tree-id543 . -1) (undo-tree-id544 . -1)) nil (26473 5011 232131 900000) 0 nil])
([nil nil ((7125 . 7126)) ((#("3" 0 1 (fontified t)) . 7125) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (t 26473 4972 958459 474000)) (26473 4981 862860 776000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7326 . 7327) (nil fontified nil 6855 . 7327) (6855 . 7327) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{12}\\selectfont % Slightly smaller line height for the header
    \\vspace{-1em} % Further reduce space after article header
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{%
    \\fontsize{10}{9}\\selectfont % Smaller font size and tighter line height
    \\centering
    \\vspace{-1.5em} % Significantly reduce space between header and affiliation
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 50 (face font-lock-function-name-face latex-env-pair t fontified t) 50 51 (latex-env-pair t fontified t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 132 (face font-lock-comment-face fontified t) 132 136 (fontified t) 136 143 (face font-lock-keyword-face fontified t) 143 150 (fontified t) 150 194 (face font-lock-comment-face fontified t) 194 196 (fontified t) 196 198 (face font-lock-comment-face fontified t) 198 202 (fontified t) 202 206 (face font-lock-keyword-face fontified t) 206 207 (fontified t latex-env-pair t) 207 213 (face font-lock-function-name-face fontified t latex-env-pair t) 213 214 (fontified t latex-env-pair t) 214 216 (face font-lock-comment-face fontified t) 216 219 (fontified t) 219 234 (face font-lock-keyword-face fontified t) 234 235 (fontified t) 235 246 (face font-lock-function-name-face fontified t) 246 248 (fontified t) 248 250 (face font-lock-comment-face fontified t) 250 254 (fontified t) 254 263 (face font-lock-keyword-face fontified t) 263 268 (fontified t) 268 269 (fontified t) 269 270 (fontified t) 270 281 (face font-lock-keyword-face fontified t) 281 282 (fontified t) 282 326 (face font-lock-comment-face fontified t) 326 330 (fontified t) 330 340 (face font-lock-keyword-face fontified t) 340 341 (fontified t) 341 345 (fontified t) 345 352 (face font-lock-keyword-face fontified t) 352 361 (fontified t) 361 421 (face font-lock-comment-face fontified t) 421 423 (fontified t) 423 424 (face font-lock-comment-face fontified t) 424 425 (face font-lock-comment-face fontified t) 425 429 (fontified t) 429 433 (face font-lock-keyword-face fontified t) 433 435 (face font-lock-comment-face fontified t) 435 436 (fontified t) 436 437 (fontified t rear-nonsticky t)) . 6855) (undo-tree-id622 . -437) (undo-tree-id623 . -14) (undo-tree-id624 . -436) (undo-tree-id625 . -436) (undo-tree-id626 . 168) (undo-tree-id627 . -267) (undo-tree-id628 . -267) (undo-tree-id629 . -268) (undo-tree-id630 . -268) (undo-tree-id631 . -423) (undo-tree-id632 . -423) (undo-tree-id633 . -47) (undo-tree-id634 . -47) (undo-tree-id635 . -212) (undo-tree-id636 . -212) (undo-tree-id637 . -264) (undo-tree-id638 . -264) (undo-tree-id639 . -264) (undo-tree-id640 . -264) (undo-tree-id641 . -264) (undo-tree-id642 . -340) (undo-tree-id643 . -340) (undo-tree-id644 . -340) (undo-tree-id645 . -340) (undo-tree-id646 . -340) (undo-tree-id647 . -355) (undo-tree-id648 . -355) (undo-tree-id649 . -355) (undo-tree-id650 . -355) (undo-tree-id651 . -355) (undo-tree-id652 . -424) (undo-tree-id653 . -424) (undo-tree-id654 . -424) (undo-tree-id655 . -424) (undo-tree-id656 . -424) (undo-tree-id657 . -434) (undo-tree-id658 . -434) (undo-tree-id659 . -434) (undo-tree-id660 . -434) (undo-tree-id661 . -434) (undo-tree-id662 . -434) (undo-tree-id663 . -434) (undo-tree-id664 . -434) (undo-tree-id665 . -434) (undo-tree-id666 . -434) (undo-tree-id667 . -434) (undo-tree-id668 . -434) (undo-tree-id669 . -434) (undo-tree-id670 . -434) (undo-tree-id671 . -434) (undo-tree-id672 . -435) (undo-tree-id673 . -436) (undo-tree-id674 . -436) (undo-tree-id675 . -436) (undo-tree-id676 . -436) (undo-tree-id677 . -436) (undo-tree-id678 . -436) (undo-tree-id679 . -436) (undo-tree-id680 . -436) (undo-tree-id681 . -436) (undo-tree-id682 . -436) (undo-tree-id683 . -436) (undo-tree-id684 . -436) (undo-tree-id685 . -436) (undo-tree-id686 . -436) (undo-tree-id687 . -436) (undo-tree-id688 . -436) (undo-tree-id689 . -436) (undo-tree-id690 . -436) (undo-tree-id691 . -264) (undo-tree-id692 . -436) (undo-tree-id693 . -436) (undo-tree-id694 . -436) (undo-tree-id695 . -437) (undo-tree-id696 . -437) 7292 (t 26473 5011 814323 769000)) nil (26473 5067 630822 899000) 0 nil] [nil nil ((#("    \\vspace{-1.5em} % Significantly reduce space between header and affiliation
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 20 (fontified t) 20 80 (face font-lock-comment-face fontified t)) . 7196) (undo-tree-id557 . -79) (undo-tree-id558 . -14) (undo-tree-id559 . -14) (undo-tree-id560 . -14) (undo-tree-id561 . -14) (undo-tree-id562 . -14) (undo-tree-id563 . -14) (undo-tree-id564 . -14) (undo-tree-id565 . -14) (undo-tree-id566 . -14) (undo-tree-id567 . -14) (undo-tree-id568 . -14) (undo-tree-id569 . -14) (undo-tree-id570 . -14) (undo-tree-id571 . -14) (undo-tree-id572 . -14) (undo-tree-id573 . -14) (undo-tree-id574 . -14) (undo-tree-id575 . -14) (undo-tree-id576 . -14) (undo-tree-id577 . -14) (undo-tree-id578 . -14) (undo-tree-id579 . -14) (undo-tree-id580 . -14) (undo-tree-id581 . -14) (undo-tree-id582 . -14) (undo-tree-id583 . -14) (undo-tree-id584 . -14) (undo-tree-id585 . -14) (undo-tree-id586 . -14) (undo-tree-id587 . -14) (undo-tree-id588 . -14) (undo-tree-id589 . -14) (undo-tree-id590 . -14) (undo-tree-id591 . -14) (undo-tree-id592 . -14) (undo-tree-id593 . -14) (undo-tree-id594 . -14) (undo-tree-id595 . -14) (undo-tree-id596 . -14) (undo-tree-id597 . -14) (undo-tree-id598 . -14) (undo-tree-id599 . -14) (undo-tree-id600 . -14) (undo-tree-id601 . -14) (undo-tree-id602 . -80) 7210 (t 26473 4988 607002 97000)) ((7196 . 7276) (t 26473 5003 63579 546000)) (26473 5003 12839 156000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . -7125) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 7126 (t 26473 4972 958459 474000)) ((7125 . 7126)) (26473 4981 862536 781000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7001) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1)) nil (26473 5067 630778 577000) 0 nil])
nil
nil
([nil nil ((#("5" 0 1 (fontified t)) . 7001) (undo-tree-id603 . -1) (undo-tree-id604 . -1)) nil (26473 5067 630762 859000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t)) . 7176) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (t 26473 5067 693690 366000)) nil (26473 5078 224130 368000) 0 nil])
([nil nil ((7176 . 7177) (#("5" 0 1 (fontified t)) . 7176) (undo-tree-id699 . -1) (t 26473 5078 268381 242000)) nil (26473 5088 677698 608000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7342 . 7343) (nil fontified nil 6855 . 7343) (6855 . 7343) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{12}\\selectfont % Slightly smaller line height for the header
    \\vspace{-1em} % Further reduce space after article header
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{%
    \\fontsize{10}{10}\\selectfont % Smaller font size
    \\linespread{0.1}\\selectfont % Tighter line spacing
    \\centering
    \\vspace{-1.5em} % Significantly reduce space between header and affiliation
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 50 (face font-lock-function-name-face latex-env-pair t fontified t) 50 51 (latex-env-pair t fontified t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 132 (face font-lock-comment-face fontified t) 132 136 (fontified t) 136 143 (face font-lock-keyword-face fontified t) 143 150 (fontified t) 150 194 (face font-lock-comment-face fontified t) 194 196 (fontified t) 196 198 (face font-lock-comment-face fontified t) 198 202 (fontified t) 202 206 (face font-lock-keyword-face fontified t) 206 207 (fontified t latex-env-pair t) 207 213 (face font-lock-function-name-face fontified t latex-env-pair t) 213 214 (fontified t latex-env-pair t) 214 216 (face font-lock-comment-face fontified t) 216 219 (fontified t) 219 234 (face font-lock-keyword-face fontified t) 234 235 (fontified t) 235 246 (face font-lock-function-name-face fontified t) 246 248 (fontified t) 248 250 (face font-lock-comment-face fontified t) 250 254 (fontified t) 254 263 (face font-lock-keyword-face fontified t) 263 271 (fontified t) 271 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 303 (face font-lock-comment-face fontified t) 303 307 (fontified t) 307 318 (face font-lock-keyword-face fontified t) 318 321 (fontified t) 321 322 (fontified t) 322 323 (fontified t) 323 334 (face font-lock-keyword-face fontified t) 334 335 (fontified t) 335 358 (face font-lock-comment-face fontified t) 358 362 (fontified t) 362 372 (face font-lock-keyword-face fontified t) 372 377 (fontified t) 377 384 (face font-lock-keyword-face fontified t) 384 393 (fontified t) 393 453 (face font-lock-comment-face fontified t) 453 455 (fontified t) 455 457 (face font-lock-comment-face fontified t) 457 461 (fontified t) 461 465 (face font-lock-keyword-face fontified t) 465 467 (face font-lock-comment-face fontified t) 467 468 (fontified t) 468 469 (fontified t rear-nonsticky t)) . 6855) (undo-tree-id734 . -469) (undo-tree-id735 . -467) (undo-tree-id736 . -468) (undo-tree-id737 . -132) (undo-tree-id738 . -132) (undo-tree-id739 . -132) (undo-tree-id740 . -132) (undo-tree-id741 . -132) (undo-tree-id742 . -53) (undo-tree-id743 . -53) (undo-tree-id744 . -53) (undo-tree-id745 . -53) (undo-tree-id746 . -53) (undo-tree-id747 . -33) (undo-tree-id748 . -33) (undo-tree-id749 . -33) (undo-tree-id750 . -33) (undo-tree-id751 . -33) (undo-tree-id752 . -33) (undo-tree-id753 . -33) (undo-tree-id754 . -33) (undo-tree-id755 . -33) (undo-tree-id756 . -33) (undo-tree-id757 . -33) (undo-tree-id758 . -33) (undo-tree-id759 . -33) (undo-tree-id760 . -33) (undo-tree-id761 . -33) (undo-tree-id762 . -321) (undo-tree-id763 . -469) (t 26473 5088 700076 294000)) nil (26473 5115 812429 95000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7001) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1)) nil (26473 5115 812410 934000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 7001) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1)) nil (26473 5115 812395 691000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7376 . 7377) (nil fontified nil 6855 . 7377) (6855 . 7377) (#("\\newenvironment{articleheader}{%
    \\begin{center}%
    \\fontsize{11}{12}\\selectfont % Slightly smaller line height for the header
    \\vspace{-1em} % Further reduce space after article header
}{%
    \\end{center}%
}

\\newenvironment{affiliation}{%
    \\fontsize{10}{10}\\selectfont % Smaller font size
    \\setlength{\\baselineskip}{10pt} % Set line spacing to 10pt directly
    \\centering
    \\vspace{-1.5em} % Significantly reduce space between header and affiliation
}{%
    \\par%
}
" 0 15 (face font-lock-keyword-face fontified t) 15 16 (fontified t) 16 29 (face font-lock-function-name-face fontified t) 29 31 (fontified t) 31 33 (face font-lock-comment-face fontified t) 33 37 (fontified t) 37 43 (face font-lock-keyword-face fontified t) 43 44 (latex-env-pair t fontified t) 44 50 (face font-lock-function-name-face latex-env-pair t fontified t) 50 51 (latex-env-pair t fontified t) 51 53 (face font-lock-comment-face fontified t) 53 57 (fontified t) 57 66 (face font-lock-keyword-face fontified t) 66 74 (fontified t) 74 85 (face font-lock-keyword-face fontified t) 85 86 (fontified t) 86 132 (face font-lock-comment-face fontified t) 132 136 (fontified t) 136 143 (face font-lock-keyword-face fontified t) 143 150 (fontified t) 150 194 (face font-lock-comment-face fontified t) 194 196 (fontified t) 196 198 (face font-lock-comment-face fontified t) 198 202 (fontified t) 202 206 (face font-lock-keyword-face fontified t) 206 207 (fontified t latex-env-pair t) 207 213 (face font-lock-function-name-face fontified t latex-env-pair t) 213 214 (fontified t latex-env-pair t) 214 216 (face font-lock-comment-face fontified t) 216 219 (fontified t) 219 234 (face font-lock-keyword-face fontified t) 234 235 (fontified t) 235 246 (face font-lock-function-name-face fontified t) 246 248 (fontified t) 248 250 (face font-lock-comment-face fontified t) 250 254 (fontified t) 254 263 (face font-lock-keyword-face fontified t) 263 271 (fontified t) 271 282 (face font-lock-keyword-face fontified t) 282 283 (fontified t) 283 303 (face font-lock-comment-face fontified t) 303 307 (fontified t) 307 317 (face font-lock-keyword-face fontified t) 317 318 (fontified t) 318 331 (face font-lock-variable-name-face fontified t) 331 339 (fontified t) 339 375 (face font-lock-comment-face fontified t) 375 379 (fontified t) 379 389 (face font-lock-keyword-face fontified t) 389 394 (fontified t) 394 401 (face font-lock-keyword-face fontified t) 401 410 (fontified t) 410 470 (face font-lock-comment-face fontified t) 470 472 (fontified t) 472 474 (face font-lock-comment-face fontified t) 474 478 (fontified t) 478 482 (face font-lock-keyword-face fontified t) 482 484 (face font-lock-comment-face fontified t) 484 485 (fontified t) 485 486 (fontified t rear-nonsticky t)) . 6855) (undo-tree-id768 . -486) (undo-tree-id769 . -14) (undo-tree-id770 . -485) (undo-tree-id771 . -485) (undo-tree-id772 . -146) (undo-tree-id773 . -485) 7341 (t 26473 5115 857282 383000)) nil (26473 5147 977701 33000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7001) (undo-tree-id766 . -1) (undo-tree-id767 . -1)) nil (26473 5147 977695 543000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . 7001) (undo-tree-id764 . -1) (undo-tree-id765 . -1)) nil (26473 5185 787727 397000) 0 nil])
([nil nil ((#("    \\setlength{\\baselineskip}{9pt} % Set line height explicitly
" 0 4 (fontified t) 4 14 (face font-lock-keyword-face fontified t) 14 15 (fontified t) 15 28 (face font-lock-variable-name-face fontified t) 28 35 (fontified t) 35 64 (face font-lock-comment-face fontified t)) . 7150) (undo-tree-id881 . -14) (undo-tree-id882 . -14) (undo-tree-id883 . -14) (undo-tree-id884 . -14) (undo-tree-id885 . -14) (undo-tree-id886 . -14) (undo-tree-id887 . -14) (undo-tree-id888 . -14) (undo-tree-id889 . -14) (undo-tree-id890 . -14) (undo-tree-id891 . -14) (undo-tree-id892 . -14) (undo-tree-id893 . -14) (undo-tree-id894 . -14) (undo-tree-id895 . -14) (undo-tree-id896 . -14) (undo-tree-id897 . -14) (undo-tree-id898 . -14) (undo-tree-id899 . -14) (undo-tree-id900 . -14) (undo-tree-id901 . -14) (undo-tree-id902 . -14)) ((7150 . 7214)) (26473 5186 715701 899000) 0 nil])
([nil nil ((#("    \\vspace{-1em} % Reduce space after article header
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 18 (fontified t) 18 54 (face font-lock-comment-face fontified t)) . 6987) (undo-tree-id903 . -53) (undo-tree-id904 . 40) (undo-tree-id905 . -14) (undo-tree-id906 . -14) (undo-tree-id907 . -14) (undo-tree-id908 . -14) (undo-tree-id909 . -14) (undo-tree-id910 . -14) (undo-tree-id911 . -14) (undo-tree-id912 . -14) (undo-tree-id913 . -14) (undo-tree-id914 . -14) (undo-tree-id915 . -14) (undo-tree-id916 . -14) (undo-tree-id917 . -14) (undo-tree-id918 . -14) (undo-tree-id919 . -14) (undo-tree-id920 . -14) (undo-tree-id921 . -14) (undo-tree-id922 . -14) (undo-tree-id923 . -14) (undo-tree-id924 . -14) (undo-tree-id925 . -14) (undo-tree-id926 . -14) (undo-tree-id927 . -14) (undo-tree-id928 . -14) (undo-tree-id929 . -14) (undo-tree-id930 . -14) (undo-tree-id931 . -14) (undo-tree-id932 . -14) (undo-tree-id933 . -14) (undo-tree-id934 . -14) (undo-tree-id935 . -14) (undo-tree-id936 . -14) (undo-tree-id937 . -14) (undo-tree-id938 . -14) (undo-tree-id939 . -14) (undo-tree-id940 . -14) (undo-tree-id941 . -14) (undo-tree-id942 . -14) (undo-tree-id943 . -14) (undo-tree-id944 . -14) (undo-tree-id945 . -14) (undo-tree-id946 . -14) (undo-tree-id947 . -14) (undo-tree-id948 . -14) (undo-tree-id949 . -14) (undo-tree-id950 . -14) (undo-tree-id951 . -14) (undo-tree-id952 . -54) (undo-tree-id953 . -54) (undo-tree-id954 . -54) (undo-tree-id955 . -54) (undo-tree-id956 . -54) (undo-tree-id957 . -14) (undo-tree-id958 . -54)) nil (26473 5189 256546 356000) 0 nil] [nil nil ((#("    \\vspace{-1.5em} % Reduce space between header and affiliation
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 20 (fontified t) 20 66 (face font-lock-comment-face fontified t)) . 7229) (undo-tree-id825 . -65) (undo-tree-id827 . -14) (undo-tree-id829 . -14) (undo-tree-id831 . -14) (undo-tree-id833 . -14) (undo-tree-id835 . -14) (undo-tree-id837 . -14) (undo-tree-id839 . -14) (undo-tree-id841 . -14) (undo-tree-id843 . -14) (undo-tree-id845 . -14) (undo-tree-id847 . -14) (undo-tree-id848 . -14) (undo-tree-id850 . -14) 7243 (t 26473 5161 287954 191000)) ((7229 . 7295)) (26473 5184 683799 751000) 0 nil])
([nil nil ((7190 . 7191) (#("5" 0 1 (fontified t)) . 7190) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (t 26473 5189 303135 97000)) nil (26473 19347 646651 685000) 0 nil])
([nil nil ((7001 . 7003) (t 26473 5166 345806 315000)) ((#(".5" 0 2 (fontified t)) . 7001) (undo-tree-id856 . -2) (undo-tree-id857 . -2) (undo-tree-id858 . -2) (undo-tree-id859 . -2) (undo-tree-id860 . -2) (undo-tree-id861 . -2) (undo-tree-id862 . -2) (undo-tree-id863 . -2) (undo-tree-id864 . -2) (undo-tree-id865 . -2) (undo-tree-id866 . -2) (undo-tree-id867 . -2) (undo-tree-id868 . -2) (undo-tree-id869 . -2) (undo-tree-id870 . -2) (undo-tree-id871 . -2) (undo-tree-id872 . -2) (undo-tree-id873 . -2) (undo-tree-id874 . -2) (undo-tree-id875 . -2) (undo-tree-id876 . -2) (undo-tree-id877 . -2) (undo-tree-id878 . -2) (undo-tree-id879 . -2) (undo-tree-id880 . -2) (t 26473 5177 712473 985000)) (26473 5184 505718 750000) 0 nil])
([nil nil ((7280 . 7284) (#("i" 0 1 (face font-lock-function-name-face fontified nil)) . -7280) (undo-tree-id12 . -1) (7276 . 7281) (7274 . 7276) (#("noparindent" 0 11 (face font-lock-function-name-face fontified t)) . 7274) (undo-tree-id13 . -10) (t 26473 17641 972516 771000)) nil (26473 19401 876827 197000) 0 nil] [nil nil ((7274 . 7284) (#("noparindent" 0 11 (face font-lock-function-name-face fontified t)) . 7274) (undo-tree-id0 . -11) (undo-tree-id1 . -11) (undo-tree-id2 . -10) (t 26473 17641 972516 771000)) ((7274 . 7285) (#("references" 0 10 (face font-lock-function-name-face fontified t)) . 7274) (undo-tree-id3 . -9) (undo-tree-id4 . -9) (undo-tree-id5 . -9) (undo-tree-id6 . -9)) (26473 19347 646461 379000) 0 nil])
([nil nil ((7003 . 7005) (t 26473 5177 712473 985000)) ((#("uu" 0 2 (fontified t)) . 7003) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1)) (26473 5184 505461 973000) 0 nil])
([nil nil ((#("  \\setlength{\\parindent}{2pt}%
" 0 2 (fontified t) 2 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 23 (face font-lock-variable-name-face fontified t) 23 29 (fontified t) 29 31 (face font-lock-comment-face fontified t)) . 7355) (undo-tree-id10 . -30) (undo-tree-id11 . -12) 7367) nil (26473 19401 876826 5000) 0 nil])
nil
nil
([nil nil ((nil rear-nonsticky nil 7256 . 7257) (#("
" 0 1 (fontified nil)) . -7363) (7256 . 7364) 7255) nil (26473 19401 876824 723000) 0 nil])
([nil nil ((7256 . 7257) 7255) nil (26473 19401 876824 232000) 0 nil])
([nil nil ((7274 . 7284) (#("e" 0 1 (face font-lock-function-name-face fontified t)) . -7274) (undo-tree-id7 . -1) (#("r" 0 1 (face font-lock-function-name-face fontified t)) . -7275) (undo-tree-id8 . -1) 7276 (7274 . 7276) (#("authorinfo" 0 10 (face font-lock-function-name-face fontified t)) . 7274) (undo-tree-id9 . -9)) nil (26473 19401 876820 745000) 0 nil])
([nil nil ((#("  \\fontsize{10}{12}\\selectfont%
" 0 2 (fontified t) 2 11 (face font-lock-keyword-face fontified t) 11 19 (fontified t) 19 30 (face font-lock-keyword-face fontified t) 30 32 (face font-lock-comment-face fontified t)) . 7288) (undo-tree-id14 . -31) (undo-tree-id15 . -22) (undo-tree-id16 . -32) 7310 (t 26473 19401 883292 821000)) nil (26473 20200 860949 470000) 0 nil])
([nil nil ((apply -3 3535 3629 undo--wrap-and-run-primitive-undo 3535 3629 ((3535 . 3538) 3625))) nil (26473 20213 580604 450000) 0 nil] [nil nil ((3505 . 3506) (#("% Decrease padding in itemize
\\setlist[itemize]{itemsep=0.3em, topsep=0pt, partopsep=0pt, parsep=0pt, leftmargin=0.5em}

% Decrease padding in enumerate
\\setlist[enumerate]{itemsep=0.3em, topsep=0pt, partopsep=0pt, parsep=0pt, leftmargin=0.5em}
" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 30 (face font-lock-comment-face fontified t) 30 38 (face font-lock-keyword-face fontified t) 38 121 (fontified t) 121 123 (face font-lock-comment-delimiter-face fontified t) 123 153 (face font-lock-comment-face fontified t) 153 161 (face font-lock-keyword-face fontified t) 161 245 (fontified t)) . 3505) (undo-tree-id17 . -165) (undo-tree-id18 . -244) (undo-tree-id19 . -12) (undo-tree-id20 . -165) (undo-tree-id21 . -133) (undo-tree-id22 . -133) (undo-tree-id23 . -133) (undo-tree-id24 . -133) (undo-tree-id25 . -133) (undo-tree-id26 . -133) (undo-tree-id27 . -133) (undo-tree-id28 . -133) (undo-tree-id29 . -133) (undo-tree-id30 . -133) (undo-tree-id31 . -153) (undo-tree-id32 . -165) (undo-tree-id33 . -165) (undo-tree-id34 . -165) (undo-tree-id35 . -165) (undo-tree-id36 . -165) (undo-tree-id37 . -165) (undo-tree-id38 . -165) (undo-tree-id39 . -165) (undo-tree-id40 . -165) (undo-tree-id41 . -165) (undo-tree-id42 . -165) (undo-tree-id43 . -165) (undo-tree-id44 . -165) (undo-tree-id45 . -165) (undo-tree-id46 . -165) (undo-tree-id47 . -165) (undo-tree-id48 . -165) (undo-tree-id49 . -165) (undo-tree-id50 . -165) (undo-tree-id51 . -165) (undo-tree-id52 . -165) (undo-tree-id53 . -165) (undo-tree-id54 . -165) (undo-tree-id55 . -165) (undo-tree-id56 . -165) (undo-tree-id57 . -165) (undo-tree-id58 . -165) (undo-tree-id59 . -165) (undo-tree-id60 . -245) (undo-tree-id61 . -245) 3670 (t 26473 19976 882811 888000)) ((3505 . 3750) (#("
" 0 1 (fontified t)) . 3505) (undo-tree-id62 . 1)) (26473 20200 860726 634000) 0 nil])
([nil nil ((apply -3 3661 3757 undo--wrap-and-run-primitive-undo 3661 3757 ((3661 . 3664)))) nil (26473 20213 580603 909000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3840 . 3841) (nil fontified nil 3756 . 3841) (3756 . 3841) (3755 . 3756) 3661) nil (26473 20213 580599 601000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3785) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (t 26473 20213 586464 840000)) nil (26473 20236 76735 518000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . 3785) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1)) nil (26473 20236 76728 695000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . 3785) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1)) nil (26473 20236 76723 335000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 3785) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1)) nil (26473 20236 76719 257000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . 3785) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1)) nil (26473 20236 76717 103000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 3785) (undo-tree-id67 . -1) (undo-tree-id68 . -1)) nil (26473 20236 76701 113000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 3785) (undo-tree-id65 . -1) (undo-tree-id66 . -1)) nil (26473 20236 76699 771000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 3785) (undo-tree-id63 . -1) (undo-tree-id64 . -1)) nil (26473 20236 76695 282000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4235 . 4236) (nil fontified nil 3756 . 4236) (3756 . 4236) (#("\\setlist[itemize, enumerate]{left=0pt, labelsep=0pt, itemsep=0pt, topsep=0pt}" 0 8 (face font-lock-keyword-face fontified t) 8 76 (fontified t) 76 77 (rear-nonsticky t fontified t)) . 3756) (undo-tree-id129 . -76) (undo-tree-id130 . -29) (undo-tree-id131 . -29) (undo-tree-id132 . -29) (undo-tree-id133 . -29) (undo-tree-id134 . -29) (undo-tree-id135 . -29) (undo-tree-id136 . -29) (undo-tree-id137 . -29) (undo-tree-id138 . -29) (undo-tree-id139 . -29) (undo-tree-id140 . -29) (undo-tree-id141 . -29) (undo-tree-id142 . -29) (undo-tree-id143 . -29) (undo-tree-id144 . -29) (undo-tree-id145 . -29) (undo-tree-id146 . -29) (undo-tree-id147 . -29) (undo-tree-id148 . -29) (undo-tree-id149 . -29) (undo-tree-id150 . -29) (undo-tree-id151 . -29) (undo-tree-id152 . -29) (undo-tree-id153 . -29) (undo-tree-id154 . -29) (undo-tree-id155 . -29) (undo-tree-id156 . -29) (undo-tree-id157 . -29) (undo-tree-id158 . -29) (undo-tree-id159 . -29) (undo-tree-id160 . -29) (undo-tree-id161 . -29) (undo-tree-id162 . -29) (undo-tree-id163 . -29) (undo-tree-id164 . -29) (undo-tree-id165 . -29) (undo-tree-id166 . -29) (undo-tree-id167 . -29) (undo-tree-id168 . -29) (undo-tree-id169 . -29) (undo-tree-id170 . -29) (undo-tree-id171 . -29) (undo-tree-id172 . -29) (undo-tree-id173 . -29) (undo-tree-id174 . -29) (undo-tree-id175 . -29) (undo-tree-id176 . -29) (undo-tree-id177 . -29) (undo-tree-id178 . -29) (undo-tree-id179 . -29) (undo-tree-id180 . -29) (undo-tree-id181 . -29) (undo-tree-id182 . -29) (undo-tree-id183 . -29) (undo-tree-id184 . -29) (undo-tree-id185 . -29) (undo-tree-id186 . -29) (undo-tree-id187 . -29) (undo-tree-id188 . -29) (undo-tree-id189 . -29) (undo-tree-id190 . -29) (undo-tree-id191 . -29) (undo-tree-id192 . -29) (undo-tree-id193 . -29) (undo-tree-id194 . -29) (undo-tree-id195 . -29) (undo-tree-id196 . -29) (undo-tree-id197 . -29) (undo-tree-id198 . -29) (undo-tree-id199 . -29) (undo-tree-id200 . -29) (undo-tree-id201 . -29) (undo-tree-id202 . -29) (undo-tree-id203 . -29) (undo-tree-id204 . -29) (undo-tree-id205 . -29) (undo-tree-id206 . -29) (undo-tree-id207 . -29) (undo-tree-id208 . -29) (undo-tree-id209 . -29) (undo-tree-id210 . -29) (undo-tree-id211 . -29) (undo-tree-id212 . -29) (undo-tree-id213 . -29) (undo-tree-id214 . -29) (undo-tree-id215 . -29) (undo-tree-id216 . -29) (undo-tree-id217 . -29) (undo-tree-id218 . -29) (undo-tree-id219 . -29) (undo-tree-id220 . -29) (undo-tree-id221 . -29) (undo-tree-id222 . -29) (undo-tree-id223 . -29) (undo-tree-id224 . -29) (undo-tree-id225 . -29) (undo-tree-id226 . -29) (undo-tree-id227 . -29) (undo-tree-id228 . -29) (undo-tree-id229 . -29) (undo-tree-id230 . -29) (undo-tree-id231 . -29) (undo-tree-id232 . -29) (undo-tree-id233 . -29) (undo-tree-id234 . -29) (undo-tree-id235 . -29) (undo-tree-id236 . -29) (undo-tree-id237 . -29) (undo-tree-id238 . -29) (undo-tree-id239 . -29) (undo-tree-id240 . -29) (undo-tree-id241 . -29) (undo-tree-id242 . -29) (undo-tree-id243 . -29) (undo-tree-id244 . -29) (undo-tree-id245 . -29) (undo-tree-id246 . -29) (undo-tree-id247 . -29) (undo-tree-id248 . -29) (undo-tree-id249 . -29) (undo-tree-id250 . -29) (undo-tree-id251 . -29) (undo-tree-id252 . -29) (undo-tree-id253 . -29) (undo-tree-id254 . -29) (undo-tree-id255 . -29) (undo-tree-id256 . -77) 3834 (t 26473 20236 85234 566000)) nil (26473 20277 207619 605000) 0 nil])
([nil nil ((#("    % Close the list after the items" 0 4 (fontified t) 4 36 (face font-lock-comment-face fontified t)) . 4002) (undo-tree-id331 . -36) (undo-tree-id332 . -35) (undo-tree-id333 . -36) (undo-tree-id334 . -36) (undo-tree-id335 . -36) (undo-tree-id336 . -36) (undo-tree-id337 . -36) (undo-tree-id338 . -36) (undo-tree-id339 . -36) (undo-tree-id340 . -36) (undo-tree-id341 . -36) (undo-tree-id342 . -36) (undo-tree-id343 . -36) (undo-tree-id344 . -36) (undo-tree-id345 . -36) (undo-tree-id346 . -36) (undo-tree-id347 . -36) (undo-tree-id348 . -36) (undo-tree-id349 . -36) (undo-tree-id350 . -36) (undo-tree-id351 . -36) (undo-tree-id352 . -36) (undo-tree-id353 . -36) (undo-tree-id354 . -36) (undo-tree-id355 . -36) (undo-tree-id356 . -36) (undo-tree-id357 . -36) (undo-tree-id358 . -36) (undo-tree-id359 . -36) (undo-tree-id360 . -36) (undo-tree-id361 . -36) (undo-tree-id362 . -36) (undo-tree-id363 . -36) (undo-tree-id364 . -36) (undo-tree-id365 . -36) (undo-tree-id366 . -36) (undo-tree-id367 . -36) (undo-tree-id368 . -36) (undo-tree-id369 . -36) (undo-tree-id370 . -36) (undo-tree-id371 . -36) (#("    % Empty list definition to preve" 0 4 (fontified t) 4 36 (face font-lock-comment-face fontified t)) . 3943) (#("    % Remove space before and after " 0 4 (fontified t) 4 36 (face font-lock-comment-face fontified t)) . 3915) (#("    % Remove space between items" 0 4 (fontified t) 4 32 (face font-lock-comment-face fontified t)) . 3891) (#("    % Remove space between label and" 0 4 (fontified t) 4 36 (face font-lock-comment-face fontified t)) . 3862) (#("    % No indentation" 0 4 (fontified t) 4 20 (face font-lock-comment-face fontified t)) . 3838) (#("    % Remove the label (bullet or nu" 0 4 (fontified t) 4 36 (face font-lock-comment-face fontified t)) . 3809) 4234 (t 26473 20277 211810 818000)) nil (26473 20307 982354 747000) 0 nil])
([nil nil ((#("mber)" 0 5 (fontified t)) . 3809) (undo-tree-id328 . -4) (undo-tree-id329 . -5) (undo-tree-id330 . -5)) nil (26473 28639 483536 600000) 0 nil])
([nil nil ((#("\\setlist[itemize, enumerate]{
  label=,              
  left=0pt,            
  labelsep=0pt,         text
  itemsep=0pt,         
  topsep=0pt,          list
  before={\\list{}{}},  nt \"missing number treated as zero\"
  after=\\endlist       
}
" 0 8 (face font-lock-keyword-face fontified t) 8 29 (fontified t) 29 30 (fontified t) 30 32 (fontified t) 32 39 (fontified t) 39 53 (fontified t) 53 54 (fontified t) 54 56 (fontified t) 56 65 (fontified t) 65 77 (fontified t) 77 78 (fontified t) 78 80 (fontified t) 80 93 (fontified t) 93 100 (fontified t) 100 101 (fontified t) 101 106 (fontified t) 106 107 (fontified t) 107 109 (fontified t) 109 121 (fontified t) 121 130 (fontified t) 130 131 (fontified t) 131 133 (fontified t) 133 144 (fontified t) 144 152 (fontified t) 152 154 (fontified t) 154 158 (fontified t) 158 159 (fontified t) 159 161 (fontified t) 161 169 (fontified t) 169 174 (face font-lock-keyword-face fontified t) 174 180 (fontified t) 180 182 (fontified t) 182 217 (fontified t) 217 218 (fontified t) 218 220 (fontified t) 220 226 (fontified t) 226 234 (face font-lock-keyword-face fontified t) 234 241 (fontified t) 241 242 (fontified t) 242 243 (fontified t rear-nonsticky t) 243 244 (fontified t)) . 3756) (undo-tree-id854 . -243) (undo-tree-id855 . -243) (undo-tree-id856 . -22) (undo-tree-id857 . -243) (undo-tree-id858 . -244) (undo-tree-id859 . -244) (undo-tree-id860 . -20) (undo-tree-id861 . -20) (undo-tree-id862 . -180) (undo-tree-id863 . -180) (undo-tree-id864 . -152) (undo-tree-id865 . -152) (undo-tree-id866 . -52) (undo-tree-id867 . -52) (undo-tree-id868 . -22) (undo-tree-id869 . -22) (undo-tree-id870 . -22) (undo-tree-id871 . -22) (undo-tree-id872 . -22) (undo-tree-id873 . -22) (undo-tree-id874 . -22) (undo-tree-id875 . -22) (undo-tree-id876 . -22) (undo-tree-id877 . -22) (undo-tree-id878 . -22) (undo-tree-id879 . -22) (undo-tree-id880 . -22) (undo-tree-id881 . -22) (undo-tree-id882 . -22) (undo-tree-id883 . -22) (undo-tree-id884 . -22) (undo-tree-id885 . -22) (undo-tree-id886 . -22) (undo-tree-id887 . -22) (undo-tree-id888 . -22) (undo-tree-id889 . -22) (undo-tree-id890 . -22) (undo-tree-id891 . -22) (undo-tree-id892 . -22) (undo-tree-id893 . -22) (undo-tree-id894 . -22) (undo-tree-id895 . -22) (undo-tree-id896 . -22) (undo-tree-id897 . -22) (undo-tree-id898 . -22) (undo-tree-id899 . -22) (undo-tree-id900 . -22) (undo-tree-id901 . -22) (undo-tree-id902 . -22) (undo-tree-id903 . -22) (undo-tree-id904 . -22) (undo-tree-id905 . -52) (undo-tree-id906 . -52) (undo-tree-id907 . -52) (undo-tree-id908 . -52) (undo-tree-id909 . -52) (undo-tree-id910 . -52) (undo-tree-id911 . -52) (undo-tree-id912 . -52) (undo-tree-id913 . -52) (undo-tree-id914 . -52) (undo-tree-id915 . -52) (undo-tree-id916 . -52) (undo-tree-id917 . -52) (undo-tree-id918 . -52) (undo-tree-id919 . -52) (undo-tree-id920 . -52) (undo-tree-id921 . -52) (undo-tree-id922 . -76) (undo-tree-id923 . -76) (undo-tree-id924 . -76) (undo-tree-id925 . -76) (undo-tree-id926 . -76) (undo-tree-id927 . -100) (undo-tree-id928 . -100) (undo-tree-id929 . -100) (undo-tree-id930 . -100) (undo-tree-id931 . -100) (undo-tree-id932 . -129) (undo-tree-id933 . -129) (undo-tree-id934 . -129) (undo-tree-id935 . -129) (undo-tree-id936 . -129) (undo-tree-id937 . -153) (undo-tree-id938 . -153) (undo-tree-id939 . -153) (undo-tree-id940 . -153) (undo-tree-id941 . -153) (undo-tree-id942 . -181) (undo-tree-id943 . -181) (undo-tree-id944 . -181) (undo-tree-id945 . -181) (undo-tree-id946 . -181) (undo-tree-id947 . -181) (undo-tree-id948 . -181) (undo-tree-id949 . -181) (undo-tree-id950 . -181) (undo-tree-id951 . -181) (undo-tree-id952 . -181) (undo-tree-id953 . -181) (undo-tree-id954 . -181) (undo-tree-id955 . -181) (undo-tree-id956 . -181) (undo-tree-id957 . -181) (undo-tree-id958 . -181) (undo-tree-id959 . -181) (undo-tree-id960 . -181) (undo-tree-id961 . -181) (undo-tree-id962 . -240) (undo-tree-id963 . -240) (undo-tree-id964 . -240) (undo-tree-id965 . -240) (undo-tree-id966 . -240) (undo-tree-id967 . -240) (undo-tree-id968 . -240) (undo-tree-id969 . -240) (undo-tree-id970 . -240) (undo-tree-id971 . -240) (undo-tree-id972 . -240) (undo-tree-id973 . -240) (undo-tree-id974 . -240) (undo-tree-id975 . -240) (undo-tree-id976 . -240) (undo-tree-id977 . -242) (undo-tree-id978 . -243) (undo-tree-id979 . -243) (undo-tree-id980 . -243) (undo-tree-id981 . -243) (undo-tree-id982 . -243) (undo-tree-id983 . -243) (undo-tree-id984 . -243) (undo-tree-id985 . -243) (undo-tree-id986 . -243) (undo-tree-id987 . -243) (undo-tree-id988 . -243) (undo-tree-id989 . -243) (undo-tree-id990 . -243) (undo-tree-id991 . -243) (undo-tree-id992 . -243) (undo-tree-id993 . -243) (undo-tree-id994 . -243) (undo-tree-id995 . -243) (undo-tree-id996 . -242) (undo-tree-id997 . -243) (undo-tree-id998 . -243) (undo-tree-id999 . -243) (undo-tree-id1000 . -243) (undo-tree-id1001 . -244) 3999) nil (26473 28642 395946 651000) 0 nil] [nil nil ((#("  text" 0 1 (fontified t) 1 6 (fontified t)) . 3856) (undo-tree-id325 . -5) (undo-tree-id327 . -6)) ((3856 . 3862)) (26473 28639 151582 882000) 0 nil])
([nil nil ((apply 3 3661 3753 undo--wrap-and-run-primitive-undo 3661 3753 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3661) 3756))) nil (26473 28695 95726 0) 0 nil])
([nil nil ((#("  list" 0 2 (fontified t) 2 6 (fontified t)) . 3902) (undo-tree-id322 . -5) (undo-tree-id324 . -6)) ((3902 . 3908)) (26473 28638 773591 760000) 0 nil])
([nil nil ((apply 3 3535 3625 undo--wrap-and-run-primitive-undo 3535 3625 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3535) 3628))) nil (26473 28695 95725 239000) 0 nil])
([nil nil ((#("  nt \"missing number treated as zero\"" 0 2 (fontified t) 2 37 (fontified t)) . 3924) (undo-tree-id321 . -36)) ((3924 . 3961)) (26473 28637 933868 688000) 0 nil])
([nil nil ((3563 . 3564) (#("3" 0 1 (fontified t)) . 3563) (undo-tree-id1003 . -1)) nil (26473 28695 95724 167000) 0 nil])
([nil nil ((#("       " 0 7 (fontified nil)) . 3876) (undo-tree-id257 . -7) (undo-tree-id258 . -7) (undo-tree-id260 . -7) (undo-tree-id262 . -7) (undo-tree-id264 . -7) (undo-tree-id266 . -7) (undo-tree-id268 . -7) (undo-tree-id270 . -7) (undo-tree-id272 . -7) (undo-tree-id274 . -7) (undo-tree-id276 . -7) (undo-tree-id278 . -7) (undo-tree-id280 . -7) (undo-tree-id282 . -7) (undo-tree-id284 . -7) (undo-tree-id286 . -7) (undo-tree-id288 . -7) (undo-tree-id290 . -7) (undo-tree-id292 . -7) (undo-tree-id294 . -7) (undo-tree-id295 . -7) (undo-tree-id297 . -7) (#("
" 0 1 (fontified t)) . -3883) (undo-tree-id298 . 1) (undo-tree-id299 . -1) (3861 . 3862) (#("  " 0 2 (fontified nil)) . 3861) (#("
" 0 1 (fontified t)) . -3861) (3841 . 3842) (#("          " 0 8 (fontified nil) 8 10 (fontified nil)) . 3841) (undo-tree-id303 . -8) (#("
" 0 1 (fontified t)) . -3849) (3829 . 3830) (#("           " 0 9 (fontified nil) 9 11 (fontified nil)) . 3829) (undo-tree-id306 . -9) (#("
" 0 1 (fontified t)) . -3838) (3816 . 3817) (#("         " 0 7 (fontified nil) 7 9 (fontified nil)) . 3816) (undo-tree-id309 . -7) (#("
" 0 1 (fontified t)) . -3823) (3802 . 3803) (#("              " 0 12 (fontified nil) 12 14 (fontified nil)) . 3802) (undo-tree-id312 . -12) (#("
" 0 1 (fontified t)) . -3814) (3792 . 3793) (#("                " 0 14 (fontified nil) 14 16 (fontified nil)) . 3792) (undo-tree-id314 . -14) (undo-tree-id315 . -14) (undo-tree-id317 . -14) (#("
" 0 1 (fontified t)) . -3806) (#("  " 0 2 (fontified nil)) . 3785) (#("
" 0 1 (fontified t)) . -3785) 3776) ((3785 . 3786) (3785 . 3787) (3806 . 3807) (3792 . 3808) (#(" " 0 1 (fontified nil)) . 3792) (3814 . 3815) (3802 . 3816) (#(" " 0 1 (fontified nil)) . 3802) (3823 . 3824) (3816 . 3825) (#(" " 0 1 (fontified nil)) . 3816) (3838 . 3839) (3829 . 3840) (#(" " 0 1 (fontified nil)) . 3829) (3849 . 3850) (3841 . 3851) (#(" " 0 1 (fontified nil)) . 3841) (3861 . 3862) (3861 . 3863) (#(" " 0 1 (fontified nil)) . 3861) (3876 . 3884)) (26473 28637 601428 228000) 0 nil])
([nil nil ((3688 . 3689) (#("3" 0 1 (fontified t)) . 3688) (undo-tree-id1002 . -1)) nil (26473 28695 95719 578000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3825 . 3826) (nil fontified nil 3756 . 3826) (3756 . 3826) (#("\\setlist[itemize, enumerate]{label=, left=0pt, labelsep=0pt, itemsep=0pt, topsep=0pt, before={\\list{}{}}, after=\\endlist}" 0 8 (face font-lock-keyword-face fontified t) 8 29 (fontified t) 29 36 (fontified t) 36 37 (fontified t) 37 46 (fontified t) 46 47 (fontified t) 47 60 (fontified t) 60 61 (fontified t) 61 73 (fontified t) 73 74 (fontified t) 74 85 (fontified t) 85 86 (fontified t) 86 94 (fontified t) 94 99 (face font-lock-keyword-face fontified t) 99 105 (fontified t) 105 106 (fontified t) 106 112 (fontified t) 112 120 (face font-lock-keyword-face fontified t) 120 121 (fontified t rear-nonsticky t)) . 3756) (undo-tree-id372 . -120) (undo-tree-id373 . -26) (undo-tree-id374 . -26) (undo-tree-id376 . -120) (undo-tree-id378 . -120) (undo-tree-id380 . -120) (undo-tree-id382 . -120) (undo-tree-id384 . -120) (undo-tree-id386 . -120) (undo-tree-id388 . -120) (undo-tree-id390 . -120) (undo-tree-id392 . -120) (undo-tree-id394 . -120) (undo-tree-id396 . -120) (undo-tree-id398 . -120) (undo-tree-id400 . -120) (undo-tree-id402 . -120) (undo-tree-id404 . -120) (undo-tree-id406 . -120) (undo-tree-id408 . -120) (undo-tree-id410 . -120) (undo-tree-id412 . -120) (undo-tree-id414 . -120) (undo-tree-id416 . -120) (undo-tree-id418 . -120) (undo-tree-id420 . -120) (undo-tree-id422 . -120) (undo-tree-id424 . -120) (undo-tree-id426 . -120) (undo-tree-id428 . -120) (undo-tree-id430 . -120) (undo-tree-id432 . -120) (undo-tree-id434 . -120) (undo-tree-id436 . -120) (undo-tree-id438 . -120) (undo-tree-id440 . -120) (undo-tree-id442 . -120) (undo-tree-id444 . -120) (undo-tree-id446 . -120) (undo-tree-id448 . -120) (undo-tree-id450 . -120) (undo-tree-id452 . -120) (undo-tree-id454 . -120) (undo-tree-id456 . -120) (undo-tree-id458 . -120) (undo-tree-id460 . -120) (undo-tree-id462 . -120) (undo-tree-id464 . -120) (undo-tree-id466 . -120) (undo-tree-id468 . -120) (undo-tree-id470 . -120) (undo-tree-id472 . -120) (undo-tree-id474 . -120) (undo-tree-id476 . -120) (undo-tree-id478 . -120) (undo-tree-id480 . -120) (undo-tree-id482 . -120) (undo-tree-id484 . -120) (undo-tree-id486 . -120) (undo-tree-id488 . -120) (undo-tree-id490 . -120) (undo-tree-id492 . -120) (undo-tree-id494 . -120) (undo-tree-id496 . -120) (undo-tree-id498 . -120) (undo-tree-id500 . -120) (undo-tree-id502 . -120) (undo-tree-id504 . -120) (undo-tree-id506 . -120) (undo-tree-id508 . -120) (undo-tree-id510 . -120) (undo-tree-id512 . -120) (undo-tree-id514 . -120) (undo-tree-id516 . -120) (undo-tree-id518 . -120) (undo-tree-id520 . -120) (undo-tree-id522 . -120) (undo-tree-id524 . -120) (undo-tree-id526 . -120) (undo-tree-id528 . -120) (undo-tree-id530 . -120) (undo-tree-id532 . -120) (undo-tree-id534 . -120) (undo-tree-id536 . -120) (undo-tree-id538 . -120) (undo-tree-id540 . -120) (undo-tree-id542 . -120) (undo-tree-id544 . -26) (undo-tree-id546 . -26) (undo-tree-id548 . -26) (undo-tree-id550 . -26) (undo-tree-id552 . -26) (undo-tree-id554 . -26) (undo-tree-id556 . -26) (undo-tree-id558 . -26) (undo-tree-id560 . -26) (undo-tree-id562 . -26) (undo-tree-id564 . -26) (undo-tree-id566 . -26) (undo-tree-id568 . -26) (undo-tree-id570 . -26) (undo-tree-id572 . -26) (undo-tree-id574 . -26) (undo-tree-id576 . -26) (undo-tree-id578 . -26) (undo-tree-id580 . -26) (undo-tree-id582 . -26) (undo-tree-id584 . -26) (undo-tree-id586 . -26) (undo-tree-id588 . -26) (undo-tree-id590 . -26) (undo-tree-id592 . -26) (undo-tree-id594 . -26) (undo-tree-id596 . -26) (undo-tree-id598 . -26) (undo-tree-id600 . -120) (undo-tree-id601 . -26) (undo-tree-id603 . -26) 3878 (t 26473 20307 988491 260000)) ((3756 . 3877) (#("\\setlist[enumerate, itemize]{label=,left=0pt,labelsep=0pt,itemsep=0pt}" 0 8 (face font-lock-keyword-face fontified nil) 8 42 (fontified nil) 42 43 (fontified nil) 43 44 (fontified nil) 44 45 (fontified nil) 45 55 (fontified nil) 55 56 (fontified nil) 56 57 (fontified nil) 57 67 (fontified nil) 67 68 (fontified nil) 68 69 (fontified nil) 69 70 (fontified nil rear-nonsticky nil)) . 3756) (undo-tree-id840 . -26) (undo-tree-id841 . -45) (undo-tree-id842 . -45) (undo-tree-id843 . -45) (undo-tree-id844 . -45) (undo-tree-id845 . -45) (undo-tree-id846 . -42) (undo-tree-id847 . -42) (undo-tree-id848 . -55) (undo-tree-id849 . -55) (undo-tree-id850 . -67) (undo-tree-id851 . -67) (undo-tree-id852 . -26) (undo-tree-id853 . -26) (nil rear-nonsticky t 3825 . 3826)) (26473 28637 362084 128000) 0 nil])
([nil nil ((3620 . 3621) (#("5" 0 1 (fontified t)) . 3620) (undo-tree-id1005 . -1) (t 26473 28695 99812 163000)) nil (26473 28712 987589 266000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . 3750) (t 26473 27930 265940 349000)) ((3750 . 3751)) (26473 28637 146605 510000) 0 nil] [nil nil ((#("p" 0 1 (fontified t)) . 3823) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (t 26473 27870 33577 405000)) ((3823 . 3824)) (26473 27928 982130 163000) 0 nil])
([nil nil ((3745 . 3746) (#("5" 0 1 (fontified t)) . 3745) (undo-tree-id1004 . -1)) nil (26473 28712 987584 818000) 0 nil])
([nil nil ((#("5" 0 1 (face font-lock-comment-face fontified t)) . 3750)) ((3750 . 3751)) (26473 28636 814666 598000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3823) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1)) ((3823 . 3824)) (26473 27928 558115 99000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4876 . 4877) (#("
" 0 1 (fontified nil face font-lock-comment-face)) . -4938) (4872 . 4939) 4867 (t 26473 28712 994624 194000)) nil (26473 29668 146199 724000) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-comment-face fontified t)) . 3693) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1)) ((3693 . 3694)) (26473 28636 667577 562000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 3811) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1)) ((3811 . 3812)) (26473 27928 388093 485000) 0 nil])
([nil nil ((#("    " 0 3 (fontified t) 3 4 (rear-nonsticky t fontified t)) . -4873) (undo-tree-id1046 . -4) 4877) nil (26473 29668 146198 822000) 0 nil])
([nil nil ((#("3" 0 1 (face font-lock-comment-face fontified t)) . 3693) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1)) ((3693 . 3694)) (26473 28636 520632 164000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3811)) ((3811 . 3812)) (26473 27928 218116 524000) 0 nil])
([nil nil ((4873 . 4875)) nil (26473 29668 146183 183000) 0 nil])
([nil nil ((3688 . 3691) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -3688) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (3684 . 3689) (#("i" 0 1 (face font-lock-comment-face fontified nil)) . -3684) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (3682 . 3685)) ((#(", i" 0 2 (face font-lock-comment-face fontified nil) 2 3 (face font-lock-comment-face fontified nil)) . 3682) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -3) (undo-tree-id829 . -3) (undo-tree-id830 . -2) (undo-tree-id831 . -2) (undo-tree-id832 . -2) (undo-tree-id833 . -2) (undo-tree-id834 . -2) (3684 . 3685) (#("itemi" 0 4 (face font-lock-comment-face fontified nil) 4 5 (face font-lock-comment-face fontified nil)) . 3684) (undo-tree-id835 . -5) (undo-tree-id836 . -5) (undo-tree-id837 . -5) (undo-tree-id838 . -5) (undo-tree-id839 . -5) (3688 . 3689) (#("ize" 0 3 (face font-lock-comment-face fontified t)) . 3688)) (26473 28636 350568 907000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . 3798) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1)) ((3798 . 3799)) (26473 27927 909212 184000) 0 nil])
([nil nil ((#(" Reduce space between header and affiliation" 0 44 (face font-lock-comment-face fontified t)) . 4892) (undo-tree-id1028 . -43) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -44) (undo-tree-id1045 . -44)) nil (26473 29668 146182 392000) 0 nil])
([nil nil ((apply 3 3661 3758 undo--wrap-and-run-primitive-undo 3661 3758 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . -3661) 3761))) ((apply -3 3661 3761 undo--wrap-and-run-primitive-undo 3661 3761 ((3661 . 3664) 3758))) (26473 28636 180774 225000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . 3798) (undo-tree-id606 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1)) ((3798 . 3799) (t 26473 27916 164089 545000)) (26473 27927 508301 104000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 4890) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1)) nil (26473 29668 146173 595000) 0 nil])
([nil nil ((apply -3 3758 3833 undo--wrap-and-run-primitive-undo 3758 3833 ((3758 . 3761)))) ((apply 3 3758 3830 undo--wrap-and-run-primitive-undo 3758 3830 ((#("%% " 0 3 (face font-lock-comment-delimiter-face fontified t)) . 3758) 3661))) (26473 27964 831835 387000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3799 . 3800) (nil fontified nil 3799 . 3800) (3799 . 3800) 3798 (t 26473 27916 164089 545000)) ((#("t" 0 1 (rear-nonsticky nil fontified nil)) . 3799) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (nil rear-nonsticky t 3799 . 3800)) (26473 27927 177111 891000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 4885) (t 26473 29668 153519 339000)) nil (26473 29679 445919 78000) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 3800 . 3801) (nil fontified nil 3800 . 3801) (3800 . 3801) 3799) ((#("t" 0 1 (rear-nonsticky nil fontified nil)) . 3800) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (nil rear-nonsticky t 3800 . 3801)) (26473 27927 30091 949000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 4885)) nil (26473 29679 445914 269000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3801 . 3802) (nil fontified nil 3801 . 3802) (3801 . 3802) 3800) ((#("t" 0 1 (rear-nonsticky nil fontified nil)) . 3801) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (nil rear-nonsticky t 3801 . 3802)) (26473 27926 948096 596000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 7206) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (t 26473 29679 449399 57000)) nil (26473 29704 863001 382000) 0 nil])
([nil nil ((nil rear-nonsticky nil 3802 . 3803) (nil fontified nil 3802 . 3803) (3802 . 3803) 3801) ((#("t" 0 1 (rear-nonsticky nil fontified nil)) . 3802) (nil rear-nonsticky t 3802 . 3803)) (26473 27926 948027 797000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t)) . 7206) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1)) nil (26473 29730 703506 871000) 0 nil])
nil
([nil nil ((#("-" 0 1 (fontified t)) . 7204) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (t 26473 29731 169848 168000)) nil (26473 29754 601715 107000) 0 nil] [nil nil ((#("1" 0 1 (fontified t)) . -7205) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1071 . -1) (undo-tree-id1073 . -1) (undo-tree-id1075 . -1) (undo-tree-id1077 . -1) (undo-tree-id1079 . -1) (undo-tree-id1081 . -1) (undo-tree-id1083 . -1) (undo-tree-id1085 . -1) (undo-tree-id1087 . -1) (undo-tree-id1089 . -1) (undo-tree-id1091 . -1) (undo-tree-id1093 . -1) (undo-tree-id1095 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1109 . -1) (undo-tree-id1111 . -1) (undo-tree-id1113 . -1) (undo-tree-id1115 . -1) (undo-tree-id1117 . -1) (undo-tree-id1119 . -1) (undo-tree-id1121 . -1) (undo-tree-id1123 . -1) (undo-tree-id1125 . -1) (undo-tree-id1127 . -1) (undo-tree-id1129 . -1) (undo-tree-id1131 . -1) (undo-tree-id1133 . -1) (undo-tree-id1135 . -1) (undo-tree-id1137 . -1) (undo-tree-id1139 . -1) (undo-tree-id1141 . -1) (undo-tree-id1143 . -1) (undo-tree-id1145 . -1) (undo-tree-id1147 . -1) (undo-tree-id1149 . -1) (undo-tree-id1151 . -1) (undo-tree-id1153 . -1) (undo-tree-id1155 . -1) (undo-tree-id1157 . -1) (undo-tree-id1159 . -1) (undo-tree-id1161 . -1) (undo-tree-id1163 . -1) (undo-tree-id1165 . -1) (undo-tree-id1167 . -1) (undo-tree-id1169 . -1) (undo-tree-id1171 . -1) (undo-tree-id1173 . -1) (undo-tree-id1175 . -1) (undo-tree-id1177 . -1) (undo-tree-id1179 . -1) (undo-tree-id1181 . -1) (undo-tree-id1183 . -1) (undo-tree-id1185 . -1) (undo-tree-id1187 . -1) (undo-tree-id1189 . -1) (undo-tree-id1191 . -1) (undo-tree-id1193 . -1) (undo-tree-id1195 . -1) (undo-tree-id1197 . -1) (undo-tree-id1199 . -1) (undo-tree-id1201 . -1) (undo-tree-id1203 . -1) (undo-tree-id1205 . -1) (undo-tree-id1207 . -1) (undo-tree-id1209 . -1) (undo-tree-id1211 . -1) (undo-tree-id1213 . -1) (undo-tree-id1215 . -1) (undo-tree-id1217 . -1) (undo-tree-id1219 . -1) (undo-tree-id1221 . -1) (undo-tree-id1223 . -1) (undo-tree-id1225 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1230 . -1) 7206 (t 26473 29704 867128 384000)) ((7205 . 7206)) (26473 29730 325699 693000) 0 nil])
([nil nil ((7205 . 7207)) nil (26473 29754 601691 603000) 0 nil])
([nil nil ((7205 . 7206)) ((#("." 0 1 (fontified t)) . 7205) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1)) (26473 29729 592316 248000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 7205) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1463 . -1) (undo-tree-id1464 . -1) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) (undo-tree-id1467 . -1) (undo-tree-id1468 . -1) (undo-tree-id1469 . -1) (undo-tree-id1470 . -1) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) (undo-tree-id1475 . -1) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (t 26473 29754 608598 381000)) nil (26473 29788 935162 203000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7205) (undo-tree-id1052 . -1) (undo-tree-id1054 . -1) (undo-tree-id1056 . -1) (undo-tree-id1058 . -1) (undo-tree-id1060 . -1) (undo-tree-id1062 . -1) (undo-tree-id1064 . -1) (undo-tree-id1066 . -1) 7206) ((7205 . 7206)) (26473 29727 875775 788000) 0 nil])
([nil nil ((apply -3 7192 7263 undo--wrap-and-run-primitive-undo 7192 7263 ((7196 . 7199) 7256))) nil (26473 29811 502677 114000) 0 nil] [nil nil ((#("    \\vspace{10em} % Reduce space between header and affiliation
" 0 4 (fontified t) 4 11 (face font-lock-keyword-face fontified t) 11 12 (fontified t) 12 14 (fontified t) 14 18 (fontified t) 18 64 (face font-lock-comment-face fontified t)) . 7192) (undo-tree-id1639 . -12) (undo-tree-id1640 . -63) (undo-tree-id1641 . 50) (undo-tree-id1642 . -12) (undo-tree-id1643 . -12) (undo-tree-id1644 . -12) (undo-tree-id1645 . -12) (undo-tree-id1646 . -12) (undo-tree-id1647 . -13) (undo-tree-id1648 . -13) (undo-tree-id1649 . -13) (undo-tree-id1650 . -13) (undo-tree-id1651 . -13) (undo-tree-id1652 . -13) (undo-tree-id1653 . -13) (undo-tree-id1654 . -13) (undo-tree-id1655 . -13) (undo-tree-id1656 . -13) (undo-tree-id1657 . -13) (undo-tree-id1658 . -13) (undo-tree-id1659 . -13) (undo-tree-id1660 . -13) (undo-tree-id1661 . -13) (undo-tree-id1662 . -13) (undo-tree-id1663 . -13) (undo-tree-id1664 . -13) (undo-tree-id1665 . -13) (undo-tree-id1666 . -13) (undo-tree-id1667 . -13) (undo-tree-id1668 . -13) (undo-tree-id1669 . -13) (undo-tree-id1670 . -13) (undo-tree-id1671 . -13) (undo-tree-id1672 . -13) (undo-tree-id1673 . -13) (undo-tree-id1674 . -13) (undo-tree-id1675 . -13) (undo-tree-id1676 . -13) (undo-tree-id1677 . -13) (undo-tree-id1678 . -13) (undo-tree-id1679 . -13) (undo-tree-id1680 . -13) (undo-tree-id1681 . -13) (undo-tree-id1682 . -13) (undo-tree-id1683 . -13) (undo-tree-id1684 . -13) (undo-tree-id1685 . -13) (undo-tree-id1686 . -13) (undo-tree-id1687 . -13) (undo-tree-id1688 . -13) (undo-tree-id1689 . -13) (undo-tree-id1690 . -13) (undo-tree-id1691 . -13) (undo-tree-id1692 . -13) (undo-tree-id1693 . -13) (undo-tree-id1694 . -13) (undo-tree-id1695 . -13) (undo-tree-id1696 . -13) (undo-tree-id1697 . -13) (undo-tree-id1698 . -13) (undo-tree-id1699 . -13) (undo-tree-id1700 . -13) (undo-tree-id1701 . -13) (undo-tree-id1702 . -13) (undo-tree-id1703 . -13) (undo-tree-id1704 . -13) (undo-tree-id1705 . -13) (undo-tree-id1706 . -13) (undo-tree-id1707 . -13) (undo-tree-id1708 . -13) (undo-tree-id1709 . -13) (undo-tree-id1710 . -13) (undo-tree-id1711 . -13) (undo-tree-id1712 . -13) (undo-tree-id1713 . -13) (undo-tree-id1714 . -13) (undo-tree-id1715 . -13) (undo-tree-id1716 . -13) (undo-tree-id1717 . -13) (undo-tree-id1718 . -13) (undo-tree-id1719 . -13) (undo-tree-id1720 . -13) (undo-tree-id1721 . -13) (undo-tree-id1722 . -13) (undo-tree-id1723 . -13) (undo-tree-id1724 . -13) (undo-tree-id1725 . -13) (undo-tree-id1726 . -13) (undo-tree-id1727 . -13) (undo-tree-id1728 . -13) (undo-tree-id1729 . -13) (undo-tree-id1730 . -13) (undo-tree-id1731 . -13) (undo-tree-id1732 . -13) (undo-tree-id1733 . -13) (undo-tree-id1734 . -64) 7205 (t 26473 29765 539481 860000)) ((7192 . 7256) (t 26473 29781 961306 788000)) (26473 29781 956869 253000) 0 nil])
([nil nil ((7205 . 7208)) ((#("0.5" 0 3 (fontified t)) . 7205) (undo-tree-id1255 . -3) (undo-tree-id1256 . -3) (undo-tree-id1257 . -3) (undo-tree-id1258 . -3) (undo-tree-id1259 . -3) (undo-tree-id1260 . -3) (undo-tree-id1261 . -3) (undo-tree-id1262 . -3) (undo-tree-id1263 . -3) (undo-tree-id1264 . -3) (undo-tree-id1265 . -3) (undo-tree-id1266 . -3) (undo-tree-id1267 . -2) (undo-tree-id1268 . -2) (undo-tree-id1269 . -3) (undo-tree-id1270 . -3) (undo-tree-id1271 . -3) (undo-tree-id1272 . -3) (undo-tree-id1273 . -3) (undo-tree-id1274 . -3) (undo-tree-id1275 . -3) (undo-tree-id1276 . -3) (undo-tree-id1277 . -3) (undo-tree-id1278 . -3) (undo-tree-id1279 . -3) (undo-tree-id1280 . -3) (undo-tree-id1281 . -3) (undo-tree-id1282 . -3) (undo-tree-id1283 . -3) (undo-tree-id1284 . -3) (undo-tree-id1285 . -3) (undo-tree-id1286 . -3) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) (undo-tree-id1299 . -3) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -3) (undo-tree-id1311 . -3) (undo-tree-id1312 . -3) (undo-tree-id1313 . -3) (undo-tree-id1314 . -3) (undo-tree-id1315 . -3) (undo-tree-id1316 . -3) (undo-tree-id1317 . -3) (undo-tree-id1318 . -3) (undo-tree-id1319 . -3) (undo-tree-id1320 . -3) (undo-tree-id1321 . -3) (undo-tree-id1322 . -3) (undo-tree-id1323 . -3) (undo-tree-id1324 . -3) (undo-tree-id1325 . -3) (undo-tree-id1326 . -3) (undo-tree-id1327 . -3) (undo-tree-id1328 . -3) (undo-tree-id1329 . -3) (undo-tree-id1330 . -3) (undo-tree-id1331 . -3) (undo-tree-id1332 . -3) (undo-tree-id1333 . -3) (undo-tree-id1334 . -3) (undo-tree-id1335 . -3) (undo-tree-id1336 . -3) (undo-tree-id1337 . -3) (undo-tree-id1338 . -3) (undo-tree-id1339 . -3) (undo-tree-id1340 . -3) (undo-tree-id1341 . -3) (undo-tree-id1342 . -3) (undo-tree-id1343 . -3) (undo-tree-id1344 . -2) (undo-tree-id1345 . -3) (undo-tree-id1346 . -3) (undo-tree-id1347 . -3) (undo-tree-id1348 . -2) (undo-tree-id1349 . -3) (undo-tree-id1350 . -3) (t 26473 29718 551982 612000)) (26473 29724 316636 637000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -7196) (undo-tree-id1773 . -1) 7197 (7196 . 7197) (#("@" 0 1 (fontified t)) . -7196) (undo-tree-id1774 . -1) 7197 (7196 . 7197) (7191 . 7196) 7187) nil (26473 29811 502676 553000) 0 nil])
nil
([nil nil ((#("i" 0 1 (fontified nil)) . -7208) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (7208 . 7209) (t 26473 29718 551982 612000)) ((#("i" 0 1 (fontified nil)) . 7208) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (7208 . 7209) (t 26473 29718 551982 612000)) (26473 29724 316370 781000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 7192) (undo-tree-id1768 . -4) (undo-tree-id1769 . 1) (undo-tree-id1770 . -5) (undo-tree-id1771 . -5) (undo-tree-id1772 . -3) 7195) nil (26473 29811 502674 750000) 0 nil])
nil
([nil nil ((7034 . 7039) (#("d" 0 1 (face font-lock-keyword-face fontified t)) . -7034) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) 7035 (7033 . 7035) (#("i" 0 1 (face font-lock-keyword-face fontified nil)) . -7033) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) 7034 (7030 . 7034) (7025 . 7030) 7011) nil (26473 29811 502668 97000) 0 nil])
([nil nil ((#("    \\noindent
" 0 4 (fontified t) 4 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t)) . 7026) (undo-tree-id1775 . -13) (undo-tree-id1776 . 1) (undo-tree-id1777 . -12) (undo-tree-id1778 . -12) 7038 (t 26473 29811 509991 715000)) nil (26473 29821 424213 25000) 0 nil])
([nil nil ((nil rear-nonsticky nil 7063 . 7064) (#("
" 0 1 (fontified nil)) . -7073) (7059 . 7074) 7029) nil (26473 29821 424198 498000) 0 nil])
([nil nil ((#("    \\noindent
" 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t) 4 13 (face font-lock-keyword-face fontified t) 13 14 (fontified t)) . 7060) (undo-tree-id1802 . -13) (undo-tree-id1803 . -4) (undo-tree-id1804 . -4) (undo-tree-id1805 . -4) (undo-tree-id1806 . -4) (undo-tree-id1807 . -4) (undo-tree-id1808 . -4) (undo-tree-id1809 . -4) (undo-tree-id1810 . -4) (undo-tree-id1811 . -4) (undo-tree-id1812 . -4) (undo-tree-id1813 . -4) (undo-tree-id1814 . -4) (undo-tree-id1815 . -4) (undo-tree-id1816 . -4) (undo-tree-id1817 . -4) (undo-tree-id1818 . -4) (undo-tree-id1819 . -4) (undo-tree-id1820 . -4) (undo-tree-id1821 . -4) (undo-tree-id1822 . -4) (undo-tree-id1823 . -4) (undo-tree-id1824 . -4) (undo-tree-id1825 . -4) (undo-tree-id1826 . -4) (undo-tree-id1827 . -4) (undo-tree-id1828 . -4) (undo-tree-id1829 . -4) (undo-tree-id1830 . -4) (undo-tree-id1831 . -4) (undo-tree-id1832 . -4) (undo-tree-id1833 . -4) (undo-tree-id1834 . -4) (undo-tree-id1835 . -4) (undo-tree-id1836 . -4) (undo-tree-id1837 . -4) (undo-tree-id1838 . -4) (undo-tree-id1839 . -4) (undo-tree-id1840 . -4) (undo-tree-id1841 . -4) (undo-tree-id1842 . -4) (undo-tree-id1843 . -4) (undo-tree-id1844 . -4) (undo-tree-id1845 . -4) (undo-tree-id1846 . -4) (undo-tree-id1847 . -4) (undo-tree-id1848 . -4) (undo-tree-id1849 . -4) (undo-tree-id1850 . -4) (undo-tree-id1851 . -4) (undo-tree-id1852 . -4) (undo-tree-id1853 . -4) (undo-tree-id1854 . -4) (undo-tree-id1855 . -4) (undo-tree-id1856 . -4) (undo-tree-id1857 . -4) (undo-tree-id1858 . -4) (undo-tree-id1859 . -4) (undo-tree-id1860 . -4) (undo-tree-id1861 . -4) (undo-tree-id1862 . -4) (undo-tree-id1863 . -4) (undo-tree-id1864 . -4) (undo-tree-id1865 . -4) (undo-tree-id1866 . -4) (undo-tree-id1867 . -4) (undo-tree-id1868 . -4) (undo-tree-id1869 . -4) (undo-tree-id1870 . -4) (undo-tree-id1871 . -4) (undo-tree-id1872 . -4) (undo-tree-id1873 . -4) (undo-tree-id1874 . -4) (undo-tree-id1875 . -4) (undo-tree-id1876 . -4) (undo-tree-id1877 . -4) (undo-tree-id1878 . -4) (undo-tree-id1879 . -4) (undo-tree-id1880 . -4) (undo-tree-id1881 . -4) (undo-tree-id1882 . -4) (undo-tree-id1883 . -4) (undo-tree-id1884 . -4) (undo-tree-id1885 . -4) (undo-tree-id1886 . -4) (undo-tree-id1887 . -4) (undo-tree-id1888 . -4) (undo-tree-id1889 . -4) (undo-tree-id1890 . -4) (undo-tree-id1891 . -4) (undo-tree-id1892 . -4) (undo-tree-id1893 . -4) (undo-tree-id1894 . -4) (undo-tree-id1895 . -4) (undo-tree-id1896 . -4) (undo-tree-id1897 . -4) (undo-tree-id1898 . -4) (undo-tree-id1899 . -4) (undo-tree-id1900 . -4) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) (undo-tree-id1903 . -4) (undo-tree-id1904 . -4) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) (undo-tree-id1907 . -4) (undo-tree-id1908 . -4) (undo-tree-id1909 . -4) (undo-tree-id1910 . -4) (undo-tree-id1911 . -4) (undo-tree-id1912 . -4) (undo-tree-id1913 . -4) (undo-tree-id1914 . -4) (undo-tree-id1915 . -4) (undo-tree-id1916 . -4) (undo-tree-id1917 . -4) (undo-tree-id1918 . -4) (undo-tree-id1919 . -4) (undo-tree-id1920 . -4) (undo-tree-id1921 . -4) (undo-tree-id1922 . -4) (undo-tree-id1923 . -4) (undo-tree-id1924 . -4) (undo-tree-id1925 . -4) (undo-tree-id1926 . -4) (undo-tree-id1927 . -4) (undo-tree-id1928 . -4) (undo-tree-id1929 . -4) (undo-tree-id1930 . -4) (undo-tree-id1931 . -4) (undo-tree-id1932 . -4) (undo-tree-id1933 . -4) (undo-tree-id1934 . -4) (undo-tree-id1935 . -4) (undo-tree-id1936 . -4) (undo-tree-id1937 . -4) (undo-tree-id1938 . -4) (undo-tree-id1939 . -4) (undo-tree-id1940 . -4) (undo-tree-id1941 . -4) (undo-tree-id1942 . -4) (undo-tree-id1943 . -4) (undo-tree-id1944 . -4) (undo-tree-id1945 . -4) (undo-tree-id1946 . -4) (undo-tree-id1947 . -4) (undo-tree-id1948 . -4) (undo-tree-id1949 . -4) (undo-tree-id1950 . -4) (undo-tree-id1951 . -4) (undo-tree-id1952 . -4) (undo-tree-id1953 . -4) (undo-tree-id1954 . -4) (undo-tree-id1955 . -4) (undo-tree-id1956 . -4) (undo-tree-id1957 . -4) (undo-tree-id1958 . -4) (undo-tree-id1959 . -4) (undo-tree-id1960 . -4) (undo-tree-id1961 . -4) (undo-tree-id1962 . -4) (undo-tree-id1963 . -4) (undo-tree-id1964 . -14) 7064 (t 26473 29821 431885 888000)) nil (26473 29831 318994 658000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-comment-delimiter-face fontified t)) . 7196) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1)) nil (26473 29831 318913 697000) 0 nil])
([nil nil ((#("%" 0 1 (face font-lock-comment-face fontified t)) . 7196) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1)) nil (26473 29831 318912 625000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 7196) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1)) nil (26473 29831 318911 603000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 7205) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1)) nil (26473 29831 318910 60000) 0 nil])
([nil nil ((7204 . 7205)) nil (26473 29831 318892 27000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -7205) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . 1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) 7206 (t 26473 29831 325780 344000)) nil (26473 29844 202819 161000) 0 nil])
([nil nil ((7205 . 7206)) nil (26473 29844 202789 626000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -7205) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) 7206) nil (26473 29844 202788 584000) 0 nil])
([nil nil ((7205 . 7208)) nil (26473 29844 202779 587000) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -7207) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) 7208) nil (26473 29844 202778 526000) 0 nil])
([nil nil ((7207 . 7208)) nil (26473 29844 202758 608000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -7208) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) (undo-tree-id2165 . -1) (undo-tree-id2166 . -1) (undo-tree-id2167 . -1) (undo-tree-id2168 . -1) (undo-tree-id2169 . -1) (undo-tree-id2170 . -1) (undo-tree-id2171 . -1) (undo-tree-id2172 . -1) (undo-tree-id2173 . -1) (undo-tree-id2174 . -1) (undo-tree-id2175 . -1) (undo-tree-id2176 . -1) (undo-tree-id2177 . -1) (undo-tree-id2178 . -1) (undo-tree-id2179 . -1) (undo-tree-id2180 . -1) (undo-tree-id2181 . -1) (undo-tree-id2182 . -1) (undo-tree-id2183 . -1) (undo-tree-id2184 . -1) (undo-tree-id2185 . -1) (undo-tree-id2186 . -1) (undo-tree-id2187 . -1) (undo-tree-id2188 . -1) (undo-tree-id2189 . -1) (undo-tree-id2190 . -1) (undo-tree-id2191 . -1) (undo-tree-id2192 . -1) (undo-tree-id2193 . -1) (undo-tree-id2194 . -1) (undo-tree-id2195 . -1) (undo-tree-id2196 . -1) (undo-tree-id2197 . -1) (undo-tree-id2198 . -1) (undo-tree-id2199 . -1) (undo-tree-id2200 . -1) (undo-tree-id2201 . -1) (undo-tree-id2202 . -1) (undo-tree-id2203 . -1) (undo-tree-id2204 . -1) (undo-tree-id2205 . -1) (undo-tree-id2206 . -1) (undo-tree-id2207 . -1) (undo-tree-id2208 . -1) (undo-tree-id2209 . -1) (#("=" 0 1 (fontified t)) . -7209) (undo-tree-id2210 . -1) (undo-tree-id2211 . -1) (undo-tree-id2212 . -1) (undo-tree-id2213 . -1) (undo-tree-id2214 . -1) (undo-tree-id2215 . -1) (undo-tree-id2216 . -1) (undo-tree-id2217 . -1) (undo-tree-id2218 . -1) (undo-tree-id2219 . -1) (undo-tree-id2220 . -1) (undo-tree-id2221 . -1) (undo-tree-id2222 . -1) (undo-tree-id2223 . -1) (undo-tree-id2224 . -1) (undo-tree-id2225 . -1) (undo-tree-id2226 . -1) (undo-tree-id2227 . -1) (undo-tree-id2228 . -1) (undo-tree-id2229 . -1) (undo-tree-id2230 . -1) (undo-tree-id2231 . -1) (undo-tree-id2232 . -1) (undo-tree-id2233 . -1) (undo-tree-id2234 . -1) (undo-tree-id2235 . -1) (undo-tree-id2236 . -1) (undo-tree-id2237 . -1) (undo-tree-id2238 . -1) (undo-tree-id2239 . -1) (undo-tree-id2240 . -1) (undo-tree-id2241 . -1) (undo-tree-id2242 . -1) (undo-tree-id2243 . -1) (undo-tree-id2244 . -1) (undo-tree-id2245 . -1) (undo-tree-id2246 . -1) (undo-tree-id2247 . -1) (undo-tree-id2248 . -1) (undo-tree-id2249 . -1) (undo-tree-id2250 . -1) (undo-tree-id2251 . -1) (undo-tree-id2252 . -1) (undo-tree-id2253 . -1) (undo-tree-id2254 . -1) (undo-tree-id2255 . -1) (undo-tree-id2256 . -1) (undo-tree-id2257 . -1) (undo-tree-id2258 . -1) (undo-tree-id2259 . -1) (undo-tree-id2260 . -1) (undo-tree-id2261 . -1) (undo-tree-id2262 . -1) (undo-tree-id2263 . -1) (undo-tree-id2264 . -1) (undo-tree-id2265 . -1) (undo-tree-id2266 . -1) (undo-tree-id2267 . -1) (undo-tree-id2268 . -1) (undo-tree-id2269 . -1) (undo-tree-id2270 . -1) (undo-tree-id2271 . -1) (undo-tree-id2272 . -1) (undo-tree-id2273 . -1) (undo-tree-id2274 . -1) (undo-tree-id2275 . -1) (undo-tree-id2276 . -1) (undo-tree-id2277 . -1) (undo-tree-id2278 . -1) (undo-tree-id2279 . -1) (undo-tree-id2280 . -1) (undo-tree-id2281 . -1) (undo-tree-id2282 . -1) (undo-tree-id2283 . -1) (undo-tree-id2284 . -1) (undo-tree-id2285 . -1) (undo-tree-id2286 . -1) (undo-tree-id2287 . -1) (undo-tree-id2288 . -1) (undo-tree-id2289 . -1) (undo-tree-id2290 . -1) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (#("=" 0 1 (fontified t)) . -7210) (undo-tree-id2309 . -1) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) 7211 (7208 . 7211) (t 26473 29844 206642 911000)) nil (26473 30121 584897 980000) 0 nil])
([nil nil ((6133 . 6135) (#("0" 0 1 (fontified t)) . -6133) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) 6134 (6133 . 6134) (#("1" 0 1 (fontified t)) . -6133) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) 6134 (t 26473 30121 592678 499000)) nil (26473 30161 648668 269000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . 6134) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (t 26473 30161 655249 555000)) nil (26473 30169 739003 570000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -6133) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) (undo-tree-id2453 . -1) (undo-tree-id2454 . -1) (undo-tree-id2455 . -1) (undo-tree-id2456 . -1) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) (undo-tree-id2463 . -1) (undo-tree-id2464 . -1) (undo-tree-id2465 . -1) (undo-tree-id2466 . -1) (undo-tree-id2467 . -1) (undo-tree-id2468 . -1) (undo-tree-id2469 . -1) (undo-tree-id2470 . -1) (undo-tree-id2471 . -1) (undo-tree-id2472 . -1) (undo-tree-id2473 . -1) (undo-tree-id2474 . -1) (undo-tree-id2475 . -1) (undo-tree-id2476 . -1) (undo-tree-id2477 . -1) (undo-tree-id2478 . -1) (undo-tree-id2479 . -1) (undo-tree-id2480 . -1) (undo-tree-id2481 . -1) (undo-tree-id2482 . -1) (undo-tree-id2483 . -1) (undo-tree-id2484 . -1) (undo-tree-id2485 . -1) (undo-tree-id2486 . -1) (undo-tree-id2487 . -1) (undo-tree-id2488 . -1) (undo-tree-id2489 . -1) (undo-tree-id2490 . -1) (undo-tree-id2491 . -1) (undo-tree-id2492 . -1) (undo-tree-id2493 . -1) (undo-tree-id2494 . -1) (undo-tree-id2495 . -1) (undo-tree-id2496 . -1) (undo-tree-id2497 . -1) (undo-tree-id2498 . -1) (undo-tree-id2499 . -1) (undo-tree-id2500 . -1) (undo-tree-id2501 . -1) (undo-tree-id2502 . -1) (undo-tree-id2503 . -1) (undo-tree-id2504 . -1) (undo-tree-id2505 . -1) (undo-tree-id2506 . -1) (undo-tree-id2507 . -1) (undo-tree-id2508 . -1) (undo-tree-id2509 . -1) (undo-tree-id2510 . -1) (undo-tree-id2511 . -1) (undo-tree-id2512 . -1) (undo-tree-id2513 . -1) (undo-tree-id2514 . -1) (undo-tree-id2515 . -1) (undo-tree-id2516 . -1) (undo-tree-id2517 . -1) (undo-tree-id2518 . -1) (undo-tree-id2519 . -1) (undo-tree-id2520 . -1) (undo-tree-id2521 . -1) (undo-tree-id2522 . -1) (undo-tree-id2523 . -1) (undo-tree-id2524 . -1) (undo-tree-id2525 . -1) (undo-tree-id2526 . -1) (undo-tree-id2527 . -1) (undo-tree-id2528 . -1) (undo-tree-id2529 . -1) (undo-tree-id2530 . -1) (undo-tree-id2531 . -1) (undo-tree-id2532 . -1) (undo-tree-id2533 . -1) (undo-tree-id2534 . -1) (undo-tree-id2535 . -1) (undo-tree-id2536 . -1) (undo-tree-id2537 . -1) (undo-tree-id2538 . -1) (undo-tree-id2539 . -1) (undo-tree-id2540 . -1) (undo-tree-id2541 . -1) (undo-tree-id2542 . -1) (undo-tree-id2543 . -1) (undo-tree-id2544 . -1) (undo-tree-id2545 . -1) (undo-tree-id2546 . -1) (undo-tree-id2547 . -1) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) (undo-tree-id2562 . -1) (undo-tree-id2563 . -1) (undo-tree-id2564 . -1) (undo-tree-id2565 . -1) (undo-tree-id2566 . -1) (undo-tree-id2567 . -1) (undo-tree-id2568 . -1) (undo-tree-id2569 . -1) (undo-tree-id2570 . -1) (undo-tree-id2571 . -1) (undo-tree-id2572 . -1) (undo-tree-id2573 . -1) (undo-tree-id2574 . -1) (undo-tree-id2575 . -1) (undo-tree-id2576 . -1) (undo-tree-id2577 . -1) (undo-tree-id2578 . -1) (undo-tree-id2579 . -1) (undo-tree-id2580 . -1) (undo-tree-id2581 . -1) (undo-tree-id2582 . -1) (undo-tree-id2583 . -1) (undo-tree-id2584 . -1) (undo-tree-id2585 . -1) (undo-tree-id2586 . -1) (undo-tree-id2587 . -1) (undo-tree-id2588 . -1) (undo-tree-id2589 . -1) (undo-tree-id2590 . -1) (undo-tree-id2591 . -1) (undo-tree-id2592 . -1) (undo-tree-id2593 . -1) (undo-tree-id2594 . -1) (undo-tree-id2595 . -1) (undo-tree-id2596 . -1) (undo-tree-id2597 . -1) (undo-tree-id2598 . -1) (undo-tree-id2599 . -1) (undo-tree-id2600 . -1) (undo-tree-id2601 . -1) (undo-tree-id2602 . -1) (undo-tree-id2603 . -1) (undo-tree-id2604 . -1) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -1) (undo-tree-id2609 . -1) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) 6134) nil (26473 30169 738999 723000) 0 nil])
([nil nil ((6133 . 6135)) nil (26473 30169 738893 514000) 0 nil])
([nil nil ((6135 . 6136)) nil (26473 30169 738889 897000) 0 nil])
([nil nil ((#("i" 0 1 (fontified nil)) . -6136) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (6136 . 6137) (t 26473 30169 744162 951000)) nil (26473 30181 93842 929000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t)) . -6135) (t 26473 30169 744162 951000) (6136 . 6137) 6135 (t 26473 30169 744162 951000)) nil (26473 30181 93827 259000) 0 nil])
([nil current ((nil fontified t 6135 . 6136) (#("7" 0 1 (fontified t)) . -6135) (6136 . 6137) 6135) nil (26473 30181 93821 679000) 0 nil])
nil
